main.go:52:6: don't use underscores in Go names; type float_t should be floatT
main.go:53:6: don't use underscores in Go names; type double_t should be doubleT
main.go:55:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:55:7: exported const FP_NAN should have comment or be unexported
main.go:56:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:56:7: exported const FP_INFINITE should have comment or be unexported
main.go:57:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:57:7: exported const FP_ZERO should have comment or be unexported
main.go:58:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:58:7: exported const FP_SUBNORMAL should have comment or be unexported
main.go:59:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:59:7: exported const FP_NORMAL should have comment or be unexported
main.go:60:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:61:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:62:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:63:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:64:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:66:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:68:2: don't use underscores in Go names; struct field type_ should be type
main.go:74:6: don't use underscores in Go names; type size_t should be sizeT
main.go:75:6: don't use underscores in Go names; type __u_char should be _UChar
main.go:76:6: don't use underscores in Go names; type __u_short should be _UShort
main.go:77:6: don't use underscores in Go names; type __u_int should be _UInt
main.go:78:6: don't use underscores in Go names; type __u_long should be _ULong
main.go:79:6: don't use underscores in Go names; type __int8_t should be _Int8T
main.go:80:6: don't use underscores in Go names; type __uint8_t should be _Uint8T
main.go:81:6: don't use underscores in Go names; type __int16_t should be _Int16T
main.go:82:6: don't use underscores in Go names; type __uint16_t should be _Uint16T
main.go:83:6: don't use underscores in Go names; type __int32_t should be _Int32T
main.go:84:6: don't use underscores in Go names; type __uint32_t should be _Uint32T
main.go:85:6: don't use underscores in Go names; type __int64_t should be _Int64T
main.go:86:6: don't use underscores in Go names; type __uint64_t should be _Uint64T
main.go:87:6: don't use underscores in Go names; type __quad_t should be _QuadT
main.go:88:6: don't use underscores in Go names; type __u_quad_t should be _UQuadT
main.go:89:6: don't use underscores in Go names; type __dev_t should be _DevT
main.go:90:6: don't use underscores in Go names; type __uid_t should be _UIDT
main.go:91:6: don't use underscores in Go names; type __gid_t should be _GidT
main.go:92:6: don't use underscores in Go names; type __ino_t should be _InoT
main.go:93:6: don't use underscores in Go names; type __ino64_t should be _Ino64T
main.go:94:6: don't use underscores in Go names; type __mode_t should be _ModeT
main.go:95:6: don't use underscores in Go names; type __nlink_t should be _NlinkT
main.go:96:6: don't use underscores in Go names; type __off_t should be _OffT
main.go:97:6: don't use underscores in Go names; type __off64_t should be _Off64T
main.go:98:6: don't use underscores in Go names; type __pid_t should be _PidT
main.go:99:6: don't use underscores in Go names; type __fsid_t should be _FsidT
main.go:100:2: don't use underscores in Go names; struct field __val should be _Val
main.go:102:6: don't use underscores in Go names; type __clock_t should be _ClockT
main.go:103:6: don't use underscores in Go names; type __rlim_t should be _RlimT
main.go:104:6: don't use underscores in Go names; type __rlim64_t should be _Rlim64T
main.go:105:6: don't use underscores in Go names; type __id_t should be _IDT
main.go:106:6: don't use underscores in Go names; type __time_t should be _TimeT
main.go:107:6: don't use underscores in Go names; type __useconds_t should be _UsecondsT
main.go:108:6: don't use underscores in Go names; type __suseconds_t should be _SusecondsT
main.go:109:6: don't use underscores in Go names; type __daddr_t should be _DaddrT
main.go:110:6: don't use underscores in Go names; type __key_t should be _KeyT
main.go:111:6: don't use underscores in Go names; type __clockid_t should be _ClockidT
main.go:112:6: don't use underscores in Go names; type __timer_t should be _TimerT
main.go:113:6: don't use underscores in Go names; type __blksize_t should be _BlksizeT
main.go:114:6: don't use underscores in Go names; type __blkcnt_t should be _BlkcntT
main.go:115:6: don't use underscores in Go names; type __blkcnt64_t should be _Blkcnt64T
main.go:116:6: don't use underscores in Go names; type __fsblkcnt_t should be _FsblkcntT
main.go:117:6: don't use underscores in Go names; type __fsblkcnt64_t should be _Fsblkcnt64T
main.go:118:6: don't use underscores in Go names; type __fsfilcnt_t should be _FsfilcntT
main.go:119:6: don't use underscores in Go names; type __fsfilcnt64_t should be _Fsfilcnt64T
main.go:120:6: don't use underscores in Go names; type __fsword_t should be _FswordT
main.go:121:6: don't use underscores in Go names; type __ssize_t should be _SsizeT
main.go:122:6: don't use underscores in Go names; type __syscall_slong_t should be _SyscallSlongT
main.go:123:6: don't use underscores in Go names; type __syscall_ulong_t should be _SyscallUlongT
main.go:124:6: don't use underscores in Go names; type __loff_t should be _LoffT
main.go:125:6: don't use underscores in Go names; type __qaddr_t should be _QaddrT
main.go:126:6: don't use underscores in Go names; type __caddr_t should be _CaddrT
main.go:127:6: don't use underscores in Go names; type __intptr_t should be _IntptrT
main.go:128:6: don't use underscores in Go names; type __socklen_t should be _SocklenT
main.go:129:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:131:6: exported type FILE should have comment or be unexported
main.go:133:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:134:6: exported type BSunionSatSSusrSincludeSwcharPhD85D3E should have comment or be unexported
main.go:139:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:142:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:146:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.UntypedSet should have comment or be unexported
main.go:146:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:150:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wch should have comment or be unexported
main.go:150:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:150:52: don't use underscores in Go names; method Get__wch should be GetWch
main.go:154:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wch should have comment or be unexported
main.go:154:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:154:52: don't use underscores in Go names; method Set__wch should be SetWch
main.go:159:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wchb should have comment or be unexported
main.go:159:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:159:52: don't use underscores in Go names; method Get__wchb should be GetWchb
main.go:163:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wchb should have comment or be unexported
main.go:163:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:163:52: don't use underscores in Go names; method Set__wchb should be SetWchb
main.go:169:6: don't use underscores in Go names; type __mbstate_t should be _MbstateT
main.go:170:2: don't use underscores in Go names; struct field __count should be _Count
main.go:171:2: don't use underscores in Go names; struct field __value should be _Value
main.go:173:6: don't use underscores in Go names; type _G_fpos_t should be _GFposT
main.go:174:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:175:2: don't use underscores in Go names; struct field __state should be _State
main.go:177:6: don't use underscores in Go names; type _G_fpos64_t should be _GFpos64T
main.go:178:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:179:2: don't use underscores in Go names; struct field __state should be _State
main.go:181:6: don't use underscores in Go names; type va_list should be vaList
main.go:182:6: don't use underscores in Go names; type __gnuc_va_list should be _GnucVaList
main.go:183:6: don't use underscores in Go names; type _IO_jump_t should be _IOJumpT
main.go:185:6: don't use underscores in Go names; type _IO_lock_t should be _IOLockT
main.go:187:6: don't use underscores in Go names; type _IO_marker should be _IOMarker
main.go:192:6: don't use underscores in Go names; type __codecvt_result should be _CodecvtResult
main.go:195:2: don't use underscores in Go names; const __codecvt_ok should be _CodecvtOk
main.go:196:2: don't use underscores in Go names; const __codecvt_partial should be _CodecvtPartial
main.go:197:2: don't use underscores in Go names; const __codecvt_error should be _CodecvtError
main.go:198:2: don't use underscores in Go names; const __codecvt_noconv should be _CodecvtNoconv
main.go:201:6: don't use underscores in Go names; type _IO_FILE_plus should be _IOFILEPlus
main.go:203:6: don't use underscores in Go names; type __io_read_fn should be _IoReadFn
main.go:204:6: don't use underscores in Go names; type __io_write_fn should be _IoWriteFn
main.go:205:6: don't use underscores in Go names; type __io_seek_fn should be _IoSeekFn
main.go:206:6: don't use underscores in Go names; type __io_close_fn should be _IoCloseFn
main.go:207:6: don't use underscores in Go names; type cookie_read_function_t should be cookieReadFunctionT
main.go:208:6: don't use underscores in Go names; type cookie_write_function_t should be cookieWriteFunctionT
main.go:209:6: don't use underscores in Go names; type cookie_seek_function_t should be cookieSeekFunctionT
main.go:210:6: don't use underscores in Go names; type cookie_close_function_t should be cookieCloseFunctionT
main.go:211:6: don't use underscores in Go names; type _IO_cookie_io_functions_t should be _IOCookieIoFunctionsT
main.go:217:6: don't use underscores in Go names; type cookie_io_functions_t should be cookieIoFunctionsT
main.go:218:6: don't use underscores in Go names; type _IO_cookie_file should be _IOCookieFile
main.go:220:6: don't use underscores in Go names; type off_t should be offT
main.go:221:6: don't use underscores in Go names; type off64_t should be off64T
main.go:222:6: don't use underscores in Go names; type ssize_t should be ssizeT
main.go:223:6: don't use underscores in Go names; type fpos_t should be fposT
main.go:224:6: don't use underscores in Go names; type fpos64_t should be fpos64T
main.go:234:6: don't use underscores in Go names; type wchar_t should be wcharT
main.go:236:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:236:7: exported const P_ALL should have comment or be unexported
main.go:237:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:237:7: exported const P_PID should have comment or be unexported
main.go:238:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:238:7: exported const P_PGID should have comment or be unexported
main.go:240:6: don't use underscores in Go names; type idtype_t should be idtypeT
main.go:241:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD69D5E should have comment or be unexported
main.go:242:2: don't use underscores in Go names; struct field __w_termsig should be _WTermsig
main.go:243:2: don't use underscores in Go names; struct field __w_coredump should be _WCoredump
main.go:244:2: don't use underscores in Go names; struct field __w_retcode should be _WRetcode
main.go:246:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD84D5E should have comment or be unexported
main.go:247:2: don't use underscores in Go names; struct field __w_stopval should be _WStopval
main.go:248:2: don't use underscores in Go names; struct field __w_stopsig should be _WStopsig
main.go:255:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:258:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:262:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:266:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:266:19: don't use underscores in Go names; method GetW_status should be GetWStatus
main.go:270:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:270:19: don't use underscores in Go names; method SetW_status should be SetWStatus
main.go:275:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:275:19: don't use underscores in Go names; method Get__wait_terminated should be GetWaitTerminated
main.go:279:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:279:19: don't use underscores in Go names; method Set__wait_terminated should be SetWaitTerminated
main.go:284:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:284:19: don't use underscores in Go names; method Get__wait_stopped should be GetWaitStopped
main.go:288:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:288:19: don't use underscores in Go names; method Set__wait_stopped should be SetWaitStopped
main.go:294:6: don't use underscores in Go names; type div_t should be divT
main.go:298:6: don't use underscores in Go names; type ldiv_t should be ldivT
main.go:302:6: don't use underscores in Go names; type lldiv_t should be lldivT
main.go:306:6: don't use underscores in Go names; type __locale_data should be _LocaleData
main.go:308:6: don't use underscores in Go names; type __locale_t should be _LocaleT
main.go:309:2: don't use underscores in Go names; struct field __locales should be _Locales
main.go:310:2: don't use underscores in Go names; struct field __ctype_b should be _CtypeB
main.go:311:2: don't use underscores in Go names; struct field __ctype_tolower should be _CtypeTolower
main.go:312:2: don't use underscores in Go names; struct field __ctype_toupper should be _CtypeToupper
main.go:313:2: don't use underscores in Go names; struct field __names should be _Names
main.go:315:6: don't use underscores in Go names; type locale_t should be localeT
main.go:316:6: don't use underscores in Go names; type u_char should be uChar
main.go:317:6: don't use underscores in Go names; type u_short should be uShort
main.go:318:6: don't use underscores in Go names; type u_int should be uInt
main.go:319:6: don't use underscores in Go names; type u_long should be uLong
main.go:320:6: don't use underscores in Go names; type quad_t should be quadT
main.go:321:6: don't use underscores in Go names; type u_quad_t should be uQuadT
main.go:322:6: don't use underscores in Go names; type fsid_t should be fsidT
main.go:323:6: don't use underscores in Go names; type loff_t should be loffT
main.go:324:6: don't use underscores in Go names; type ino_t should be inoT
main.go:325:6: don't use underscores in Go names; type ino64_t should be ino64T
main.go:326:6: don't use underscores in Go names; type dev_t should be devT
main.go:327:6: don't use underscores in Go names; type gid_t should be gidT
main.go:328:6: don't use underscores in Go names; type mode_t should be modeT
main.go:329:6: don't use underscores in Go names; type nlink_t should be nlinkT
main.go:330:6: don't use underscores in Go names; type uid_t should be uidT
main.go:331:6: don't use underscores in Go names; type pid_t should be pidT
main.go:332:6: don't use underscores in Go names; type id_t should be idT
main.go:333:6: don't use underscores in Go names; type daddr_t should be daddrT
main.go:334:6: don't use underscores in Go names; type caddr_t should be caddrT
main.go:335:6: don't use underscores in Go names; type key_t should be keyT
main.go:336:6: don't use underscores in Go names; type clock_t should be clockT
main.go:337:6: don't use underscores in Go names; type time_t should be timeT
main.go:338:6: don't use underscores in Go names; type clockid_t should be clockidT
main.go:339:6: don't use underscores in Go names; type timer_t should be timerT
main.go:340:6: don't use underscores in Go names; type useconds_t should be usecondsT
main.go:341:6: don't use underscores in Go names; type suseconds_t should be susecondsT
main.go:345:6: don't use underscores in Go names; type int8_t should be int8T
main.go:346:6: don't use underscores in Go names; type int16_t should be int16T
main.go:347:6: don't use underscores in Go names; type int32_t should be int32T
main.go:348:6: don't use underscores in Go names; type int64_t should be int64T
main.go:349:6: don't use underscores in Go names; type u_int8_t should be uInt8T
main.go:350:6: don't use underscores in Go names; type u_int16_t should be uInt16T
main.go:351:6: don't use underscores in Go names; type u_int32_t should be uInt32T
main.go:352:6: don't use underscores in Go names; type u_int64_t should be uInt64T
main.go:353:6: don't use underscores in Go names; type register_t should be registerT
main.go:354:6: don't use underscores in Go names; type __sig_atomic_t should be _SigAtomicT
main.go:355:6: don't use underscores in Go names; type __sigset_t should be _SigsetT
main.go:356:2: don't use underscores in Go names; struct field __val should be _Val
main.go:358:6: don't use underscores in Go names; type sigset_t should be sigsetT
main.go:360:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:361:2: don't use underscores in Go names; struct field tv_nsec should be tvNsec
main.go:364:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:365:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:367:6: don't use underscores in Go names; type __fd_mask should be _FdMask
main.go:368:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:369:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:371:6: don't use underscores in Go names; type fd_set should be fdSet
main.go:372:2: don't use underscores in Go names; struct field fds_bits should be fdsBits
main.go:374:6: don't use underscores in Go names; type fd_mask should be fdMask
main.go:375:6: don't use underscores in Go names; type blksize_t should be blksizeT
main.go:376:6: don't use underscores in Go names; type blkcnt_t should be blkcntT
main.go:377:6: don't use underscores in Go names; type fsblkcnt_t should be fsblkcntT
main.go:378:6: don't use underscores in Go names; type fsfilcnt_t should be fsfilcntT
main.go:379:6: don't use underscores in Go names; type blkcnt64_t should be blkcnt64T
main.go:380:6: don't use underscores in Go names; type fsblkcnt64_t should be fsblkcnt64T
main.go:381:6: don't use underscores in Go names; type fsfilcnt64_t should be fsfilcnt64T
main.go:382:6: don't use underscores in Go names; type pthread_t should be pthreadT
main.go:383:6: don't use underscores in Go names; type pthread_attr_t should be pthreadAttrT
main.go:388:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:391:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:395:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:399:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:399:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:403:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:403:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:408:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:408:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:412:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:412:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:418:6: don't use underscores in Go names; type __pthread_internal_list should be _PthreadInternalList
main.go:419:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:420:2: don't use underscores in Go names; struct field __next should be _Next
main.go:422:6: don't use underscores in Go names; type __pthread_list_t should be _PthreadListT
main.go:423:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:424:2: don't use underscores in Go names; struct field __next should be _Next
main.go:426:6: don't use underscores in Go names; type __pthread_mutex_s should be _PthreadMutexS
main.go:427:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:428:2: don't use underscores in Go names; struct field __count should be _Count
main.go:429:2: don't use underscores in Go names; struct field __owner should be _Owner
main.go:430:2: don't use underscores in Go names; struct field __nusers should be _Nusers
main.go:431:2: don't use underscores in Go names; struct field __kind should be _Kind
main.go:432:2: don't use underscores in Go names; struct field __spins should be _Spins
main.go:433:2: don't use underscores in Go names; struct field __elision should be _Elision
main.go:434:2: don't use underscores in Go names; struct field __list should be _List
main.go:436:6: don't use underscores in Go names; type pthread_mutex_t should be pthreadMutexT
main.go:441:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:444:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:448:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:452:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:452:30: don't use underscores in Go names; method Get__data should be GetData
main.go:456:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:456:30: don't use underscores in Go names; method Set__data should be SetData
main.go:461:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:461:30: don't use underscores in Go names; method Get__size should be GetSize
main.go:465:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:465:30: don't use underscores in Go names; method Set__size should be SetSize
main.go:470:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:470:30: don't use underscores in Go names; method Get__align should be GetAlign
main.go:474:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:474:30: don't use underscores in Go names; method Set__align should be SetAlign
main.go:480:6: don't use underscores in Go names; type pthread_mutexattr_t should be pthreadMutexattrT
main.go:485:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:488:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:492:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:496:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:496:34: don't use underscores in Go names; method Get__size should be GetSize
main.go:500:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:500:34: don't use underscores in Go names; method Set__size should be SetSize
main.go:505:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:505:34: don't use underscores in Go names; method Get__align should be GetAlign
main.go:509:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:509:34: don't use underscores in Go names; method Set__align should be SetAlign
main.go:515:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD141D3E should have comment or be unexported
main.go:516:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:517:2: don't use underscores in Go names; struct field __futex should be _Futex
main.go:518:2: don't use underscores in Go names; struct field __total_seq should be _TotalSeq
main.go:519:2: don't use underscores in Go names; struct field __wakeup_seq should be _WakeupSeq
main.go:520:2: don't use underscores in Go names; struct field __woken_seq should be _WokenSeq
main.go:521:2: don't use underscores in Go names; struct field __mutex should be _Mutex
main.go:522:2: don't use underscores in Go names; struct field __nwaiters should be _Nwaiters
main.go:523:2: don't use underscores in Go names; struct field __broadcast_seq should be _BroadcastSeq
main.go:525:6: don't use underscores in Go names; type pthread_cond_t should be pthreadCondT
main.go:530:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:533:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:537:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:541:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:541:29: don't use underscores in Go names; method Get__data should be GetData
main.go:545:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:545:29: don't use underscores in Go names; method Set__data should be SetData
main.go:550:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:550:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:554:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:554:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:559:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:559:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:563:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:563:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:569:6: don't use underscores in Go names; type pthread_condattr_t should be pthreadCondattrT
main.go:574:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:577:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:581:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:585:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:585:33: don't use underscores in Go names; method Get__size should be GetSize
main.go:589:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:589:33: don't use underscores in Go names; method Set__size should be SetSize
main.go:594:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:594:33: don't use underscores in Go names; method Get__align should be GetAlign
main.go:598:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:598:33: don't use underscores in Go names; method Set__align should be SetAlign
main.go:604:6: don't use underscores in Go names; type pthread_key_t should be pthreadKeyT
main.go:605:6: don't use underscores in Go names; type pthread_once_t should be pthreadOnceT
main.go:606:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD177D3E should have comment or be unexported
main.go:607:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:608:2: don't use underscores in Go names; struct field __nr_readers should be _NrReaders
main.go:609:2: don't use underscores in Go names; struct field __readers_wakeup should be _ReadersWakeup
main.go:610:2: don't use underscores in Go names; struct field __writer_wakeup should be _WriterWakeup
main.go:611:2: don't use underscores in Go names; struct field __nr_readers_queued should be _NrReadersQueued
main.go:612:2: don't use underscores in Go names; struct field __nr_writers_queued should be _NrWritersQueued
main.go:613:2: don't use underscores in Go names; struct field __writer should be _Writer
main.go:614:2: don't use underscores in Go names; struct field __shared should be _Shared
main.go:615:2: don't use underscores in Go names; struct field __rwelision should be _Rwelision
main.go:616:2: don't use underscores in Go names; struct field __pad1 should be _Pad1
main.go:617:2: don't use underscores in Go names; struct field __pad2 should be _Pad2
main.go:618:2: don't use underscores in Go names; struct field __flags should be _Flags
main.go:620:6: don't use underscores in Go names; type pthread_rwlock_t should be pthreadRwlockT
main.go:625:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:628:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:632:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:636:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:636:31: don't use underscores in Go names; method Get__data should be GetData
main.go:640:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:640:31: don't use underscores in Go names; method Set__data should be SetData
main.go:645:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:645:31: don't use underscores in Go names; method Get__size should be GetSize
main.go:649:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:649:31: don't use underscores in Go names; method Set__size should be SetSize
main.go:654:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:654:31: don't use underscores in Go names; method Get__align should be GetAlign
main.go:658:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:658:31: don't use underscores in Go names; method Set__align should be SetAlign
main.go:664:6: don't use underscores in Go names; type pthread_rwlockattr_t should be pthreadRwlockattrT
main.go:669:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:672:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:676:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:680:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:680:35: don't use underscores in Go names; method Get__size should be GetSize
main.go:684:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:684:35: don't use underscores in Go names; method Set__size should be SetSize
main.go:689:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:689:35: don't use underscores in Go names; method Get__align should be GetAlign
main.go:693:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:693:35: don't use underscores in Go names; method Set__align should be SetAlign
main.go:699:6: don't use underscores in Go names; type pthread_spinlock_t should be pthreadSpinlockT
main.go:700:6: don't use underscores in Go names; type pthread_barrier_t should be pthreadBarrierT
main.go:705:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:708:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:712:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:716:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:716:32: don't use underscores in Go names; method Get__size should be GetSize
main.go:720:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:720:32: don't use underscores in Go names; method Set__size should be SetSize
main.go:725:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:725:32: don't use underscores in Go names; method Get__align should be GetAlign
main.go:729:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:729:32: don't use underscores in Go names; method Set__align should be SetAlign
main.go:735:6: don't use underscores in Go names; type pthread_barrierattr_t should be pthreadBarrierattrT
main.go:740:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:743:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:747:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:751:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:751:36: don't use underscores in Go names; method Get__size should be GetSize
main.go:755:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:755:36: don't use underscores in Go names; method Set__size should be SetSize
main.go:760:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:760:36: don't use underscores in Go names; method Get__align should be GetAlign
main.go:764:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:764:36: don't use underscores in Go names; method Set__align should be SetAlign
main.go:770:6: don't use underscores in Go names; type random_data should be randomData
main.go:774:2: don't use underscores in Go names; struct field rand_type should be randType
main.go:775:2: don't use underscores in Go names; struct field rand_deg should be randDeg
main.go:776:2: don't use underscores in Go names; struct field rand_sep should be randSep
main.go:777:2: don't use underscores in Go names; struct field end_ptr should be endPtr
main.go:779:6: don't use underscores in Go names; type drand48_data should be drand48Data
main.go:780:2: don't use underscores in Go names; struct field __x should be _X
main.go:781:2: don't use underscores in Go names; struct field __old_x should be _OldX
main.go:782:2: don't use underscores in Go names; struct field __c should be _C
main.go:783:2: don't use underscores in Go names; struct field __init should be _Init
main.go:784:2: don't use underscores in Go names; struct field __a should be _A
main.go:786:6: don't use underscores in Go names; type __compar_fn_t should be _ComparFnT
main.go:787:6: don't use underscores in Go names; type comparison_fn_t should be comparisonFnT
main.go:788:6: don't use underscores in Go names; type __compar_d_fn_t should be _ComparDFnT
main.go:789:6: don't use underscores in Go names; type vec3_struct should be vec3Struct
main.go:822:2: don't use underscores in Go names; struct field tm_sec should be tmSec
main.go:823:2: don't use underscores in Go names; struct field tm_min should be tmMin
main.go:824:2: don't use underscores in Go names; struct field tm_hour should be tmHour
main.go:825:2: don't use underscores in Go names; struct field tm_mday should be tmMday
main.go:826:2: don't use underscores in Go names; struct field tm_mon should be tmMon
main.go:827:2: don't use underscores in Go names; struct field tm_year should be tmYear
main.go:828:2: don't use underscores in Go names; struct field tm_wday should be tmWday
main.go:829:2: don't use underscores in Go names; struct field tm_yday should be tmYday
main.go:830:2: don't use underscores in Go names; struct field tm_isdst should be tmIsdst
main.go:831:2: don't use underscores in Go names; struct field tm_gmtoff should be tmGmtoff
main.go:832:2: don't use underscores in Go names; struct field tm_zone should be tmZone
main.go:835:2: don't use underscores in Go names; struct field it_interval should be itInterval
main.go:836:2: don't use underscores in Go names; struct field it_value should be itValue
main.go:840:6: don't use underscores in Go names; type intptr_t should be intptrT
main.go:841:6: don't use underscores in Go names; type socklen_t should be socklenT
main.go:843:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:844:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:845:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:846:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:847:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:848:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:849:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:850:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:851:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:852:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:853:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:854:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:855:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:856:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:857:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:858:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:859:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:860:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:861:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:862:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:863:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:864:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:865:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:866:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:867:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:868:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:869:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:870:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:871:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:872:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:873:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:874:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:875:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:876:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:877:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:878:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:879:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:880:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:881:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:882:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:883:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:884:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:885:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:886:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:887:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:888:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:889:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:890:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:891:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:892:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:893:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:894:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:895:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:896:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:897:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:898:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:899:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:900:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:901:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:902:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:903:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:904:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:905:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:906:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:907:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:908:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:909:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:910:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:911:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:912:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:913:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:914:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:915:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:916:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:917:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:918:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:919:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:920:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:921:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:922:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:923:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:924:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:925:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:926:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:927:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:928:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:929:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:930:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:931:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:932:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:933:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:934:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:935:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:936:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:937:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:938:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:939:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:940:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:941:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:942:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:943:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:944:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:945:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:946:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:947:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:948:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:949:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:950:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:951:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:952:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:953:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:954:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:955:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:956:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:957:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:958:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:959:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:960:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:961:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:962:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:963:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:964:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:965:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:966:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:967:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:968:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:969:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:970:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:971:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:972:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:973:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:974:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:975:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:976:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:977:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:978:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:979:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:980:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:981:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:982:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:983:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:984:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:985:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:986:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:987:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:988:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:989:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:990:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:991:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:992:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:993:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:994:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:995:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:996:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:997:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:998:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:999:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1000:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1001:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1002:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1003:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1004:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1005:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1006:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1007:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1008:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1009:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1010:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1011:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1012:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1013:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1014:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1015:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1016:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1017:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1018:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1019:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1020:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1021:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1022:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1023:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1024:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1025:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1026:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1027:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1028:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1029:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1030:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1031:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1032:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1033:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1034:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1035:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1036:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1037:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1038:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1039:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1040:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1041:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1042:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1043:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1044:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1045:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1046:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1047:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1048:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1049:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1050:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1051:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1052:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1053:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1054:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1055:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1056:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1057:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1058:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1059:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1060:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1061:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1062:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1063:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1064:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1065:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1066:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1067:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1068:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1069:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1070:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1071:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1072:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1073:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1074:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1075:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1076:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1077:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1078:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1079:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1080:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1081:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1082:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1083:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1084:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1085:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1086:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1087:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1088:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1089:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1090:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1091:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1092:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1093:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1094:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1095:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1096:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1097:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1098:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1099:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1100:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1101:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1102:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1103:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1104:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1105:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1106:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1107:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1108:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1109:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1110:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1111:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1112:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1113:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1114:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1115:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1116:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1117:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1118:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1119:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1120:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1121:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1122:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1123:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1124:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1125:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1126:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1127:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1128:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1129:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1130:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1131:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1132:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1133:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1134:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1135:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1136:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1137:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1138:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1139:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1140:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1141:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1142:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1144:6: exported type FCOMPLEX should have comment or be unexported
main.go:1344:6: don't use underscores in Go names; var IN_file should be INFile
main.go:1344:14: should omit type []byte from declaration of var IN_file; it will be inferred from the right-hand side
main.go:1345:6: don't use underscores in Go names; var OUT_file should be OUTFile
main.go:1345:15: should omit type []byte from declaration of var OUT_file; it will be inferred from the right-hand side
main.go:1346:12: should omit type []byte from declaration of var title; it will be inferred from the right-hand side
main.go:1347:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:1348:15: should omit type []byte from declaration of var meshpath; it will be inferred from the right-hand side
main.go:1349:15: should omit type []byte from declaration of var plotpath; it will be inferred from the right-hand side
main.go:1350:15: should omit type []byte from declaration of var infcpath; it will be inferred from the right-hand side
main.go:1351:15: should omit type []byte from declaration of var modepath; it will be inferred from the right-hand side
main.go:1352:24: should omit type []byte from declaration of var strippedInputFile; it will be inferred from the right-hand side
main.go:1355:21: should drop = nil from declaration of var rj; it is the zero value
main.go:1362:20: should drop = nil from declaration of var E; it is the zero value
main.go:1363:20: should drop = nil from declaration of var G; it is the zero value
main.go:1364:20: should drop = nil from declaration of var p; it is the zero value
main.go:1365:24: should drop = nil from declaration of var U; it is the zero value
main.go:1366:24: should drop = nil from declaration of var W; it is the zero value
main.go:1367:24: should drop = nil from declaration of var P; it is the zero value
main.go:1368:24: should drop = nil from declaration of var T; it is the zero value
main.go:1369:23: should drop = nil from declaration of var Dp; it is the zero value
main.go:1371:22: should drop = nil from declaration of var EMs; it is the zero value
main.go:1372:22: should drop = nil from declaration of var NMs; it is the zero value
main.go:1376:9: should omit type []float32 from declaration of var gX; it will be inferred from the right-hand side
main.go:1377:9: should omit type []float32 from declaration of var gY; it will be inferred from the right-hand side
main.go:1378:9: should omit type []float32 from declaration of var gZ; it will be inferred from the right-hand side
main.go:1379:10: should omit type float32 from declaration of var pan; it will be inferred from the right-hand side
main.go:1380:12: should omit type float32 from declaration of var scale; it will be inferred from the right-hand side
main.go:1381:9: should omit type float32 from declaration of var dx; it will be inferred from the right-hand side
main.go:1382:22: should drop = nil from declaration of var K; it is the zero value
main.go:1383:23: should drop = 0 from declaration of var traceK; it is the zero value
main.go:1384:22: should drop = nil from declaration of var M; it is the zero value
main.go:1385:23: should drop = 0 from declaration of var traceM; it is the zero value
main.go:1386:6: don't use underscores in Go names; var eqF_mech should be eqFMech
main.go:1386:31: should drop = nil from declaration of var eqF_mech; it is the zero value
main.go:1387:6: don't use underscores in Go names; var eqF_temp should be eqFTemp
main.go:1387:31: should drop = nil from declaration of var eqF_temp; it is the zero value
main.go:1388:6: don't use underscores in Go names; var F_mech should be FMech
main.go:1388:27: should drop = nil from declaration of var F_mech; it is the zero value
main.go:1389:6: don't use underscores in Go names; var F_temp should be FTemp
main.go:1389:27: should drop = nil from declaration of var F_temp; it is the zero value
main.go:1390:20: should drop = nil from declaration of var F; it is the zero value
main.go:1391:20: should drop = nil from declaration of var R; it is the zero value
main.go:1392:21: should drop = nil from declaration of var dR; it is the zero value
main.go:1393:20: should drop = nil from declaration of var D; it is the zero value
main.go:1394:21: should drop = nil from declaration of var dD; it is the zero value
main.go:1395:21: should drop = nil from declaration of var dF; it is the zero value
main.go:1396:20: should drop = nil from declaration of var L; it is the zero value
main.go:1397:21: should drop = nil from declaration of var Le; it is the zero value
main.go:1398:22: should drop = nil from declaration of var Q; it is the zero value
main.go:1399:10: should omit type float64 from declaration of var tol; it will be inferred from the right-hand side
main.go:1400:22: should drop = 0 from declaration of var shift; it is the zero value
main.go:1401:6: don't use underscores in Go names; var struct_mass should be structMass
main.go:1402:6: don't use underscores in Go names; var total_mass should be totalMass
main.go:1403:20: should drop = nil from declaration of var f; it is the zero value
main.go:1404:22: should drop = nil from declaration of var V; it is the zero value
main.go:1405:6: don't use underscores in Go names; var rms_resid should be rmsResid
main.go:1407:22: should drop = 0 from declaration of var Cfreq; it is the zero value
main.go:1410:6: don't use underscores in Go names; var exagg_static should be exaggStatic
main.go:1410:19: should omit type float64 from declaration of var exagg_static; it will be inferred from the right-hand side
main.go:1411:6: don't use underscores in Go names; var exagg_modal should be exaggModal
main.go:1411:18: should omit type float64 from declaration of var exagg_modal; it will be inferred from the right-hand side
main.go:1424:15: should drop = 0 from declaration of var nN; it is the zero value
main.go:1425:15: should drop = 0 from declaration of var nE; it is the zero value
main.go:1426:15: should drop = 0 from declaration of var nL; it is the zero value
main.go:1427:15: should drop = 0 from declaration of var lc; it is the zero value
main.go:1428:16: should drop = 0 from declaration of var DoF; it is the zero value
main.go:1431:15: should drop = 0 from declaration of var nR; it is the zero value
main.go:1432:9: should omit type []int from declaration of var nD; it will be inferred from the right-hand side
main.go:1433:9: should omit type []int from declaration of var nF; it will be inferred from the right-hand side
main.go:1434:9: should omit type []int from declaration of var nU; it will be inferred from the right-hand side
main.go:1435:9: should omit type []int from declaration of var nW; it will be inferred from the right-hand side
main.go:1436:9: should omit type []int from declaration of var nP; it will be inferred from the right-hand side
main.go:1437:9: should omit type []int from declaration of var nT; it will be inferred from the right-hand side
main.go:1438:15: should drop = 0 from declaration of var nI; it is the zero value
main.go:1439:15: should drop = 0 from declaration of var nX; it is the zero value
main.go:1440:15: should drop = 0 from declaration of var nC; it is the zero value
main.go:1443:18: should drop = 0 from declaration of var shear; it is the zero value
main.go:1444:17: should drop = 0 from declaration of var geom; it is the zero value
main.go:1445:12: should omit type int from declaration of var anlyz; it will be inferred from the right-hand side
main.go:1446:16: should drop = nil from declaration of var q; it is the zero value
main.go:1447:16: should drop = nil from declaration of var r; it is the zero value
main.go:1449:15: should drop = 0 from declaration of var nM; it is the zero value
main.go:1451:6: don't use underscores in Go names; var nM_calc should be nMCalc
main.go:1452:11: should omit type int from declaration of var lump; it will be inferred from the right-hand side
main.go:1453:17: should drop = 0 from declaration of var iter; it is the zero value
main.go:1454:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:1455:11: should omit type []int from declaration of var anim; it will be inferred from the right-hand side
main.go:1456:17: should drop = 0 from declaration of var Cdof; it is the zero value
main.go:1457:20: should drop = 0 from declaration of var Cmethod; it is the zero value
main.go:1458:16: should drop = nil from declaration of var c; it is the zero value
main.go:1459:16: should drop = nil from declaration of var m; it is the zero value
main.go:1460:21: should drop = 0 from declaration of var filetype; it is the zero value
main.go:1461:18: should drop = 0 from declaration of var debug; it is the zero value
main.go:1462:14: should omit type int from declaration of var verbose; it will be inferred from the right-hand side
main.go:1463:6: don't use underscores in Go names; var axial_strain_warning should be axialStrainWarning
main.go:1463:33: should drop = 0 from declaration of var axial_strain_warning; it is the zero value
main.go:1464:21: should drop = 0 from declaration of var ExitCode; it is the zero value
main.go:1465:6: don't use underscores in Go names; var shear_flag should be shearFlag
main.go:1465:17: should omit type int from declaration of var shear_flag; it will be inferred from the right-hand side
main.go:1466:6: don't use underscores in Go names; var geom_flag should be geomFlag
main.go:1466:16: should omit type int from declaration of var geom_flag; it will be inferred from the right-hand side
main.go:1467:6: don't use underscores in Go names; var anlyz_flag should be anlyzFlag
main.go:1467:17: should omit type int from declaration of var anlyz_flag; it will be inferred from the right-hand side
main.go:1468:6: don't use underscores in Go names; var D3_flag should be D3Flag
main.go:1468:14: should omit type int from declaration of var D3_flag; it will be inferred from the right-hand side
main.go:1469:6: don't use underscores in Go names; var lump_flag should be lumpFlag
main.go:1469:16: should omit type int from declaration of var lump_flag; it will be inferred from the right-hand side
main.go:1470:6: don't use underscores in Go names; var modal_flag should be modalFlag
main.go:1470:17: should omit type int from declaration of var modal_flag; it will be inferred from the right-hand side
main.go:1471:6: don't use underscores in Go names; var write_matrix should be writeMatrix
main.go:1471:19: should omit type int from declaration of var write_matrix; it will be inferred from the right-hand side
main.go:1472:6: don't use underscores in Go names; var axial_sign should be axialSign
main.go:1472:17: should omit type int from declaration of var axial_sign; it will be inferred from the right-hand side
main.go:1473:6: don't use underscores in Go names; var condense_flag should be condenseFlag
main.go:1473:20: should omit type int from declaration of var condense_flag; it will be inferred from the right-hand side
main.go:1474:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:1475:6: don't use underscores in Go names; var exagg_flag should be exaggFlag
main.go:1476:6: don't use underscores in Go names; var tol_flag should be tolFlag
main.go:1477:6: don't use underscores in Go names; var shift_flag should be shiftFlag
main.go:1478:6: don't use underscores in Go names; var pan_flag should be panFlag
main.go:1478:15: should omit type float32 from declaration of var pan_flag; it will be inferred from the right-hand side
main.go:1479:11: should omit type []byte from declaration of var extn; it will be inferred from the right-hand side
main.go:1739:5: should replace iter += 1 with iter++
main.go:1799:11: if block ends with a return statement, so drop this else and outdent its block
main.go:1929:6: don't use underscores in Go names; func assemble_K should be assembleK
main.go:1932:16: should drop = 0 from declaration of var res; it is the zero value
main.go:1939:6: don't use underscores in Go names; var stiffness_fn should be stiffnessFn
main.go:1939:19: should omit type []byte from declaration of var stiffness_fn; it will be inferred from the right-hand side
main.go:1987:6: don't use underscores in Go names; func elastic_K should be elasticK
main.go:2079:6: don't use underscores in Go names; func geometric_K should be geometricK
main.go:2187:6: don't use underscores in Go names; func solve_system should be solveSystem
main.go:2187:123: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:2228:6: don't use underscores in Go names; func equilibrium_error should be equilibriumError
main.go:2229:6: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2229:22: should drop = 0 from declaration of var ss_dF; it is the zero value
main.go:2230:6: don't use underscores in Go names; var ss_F should be ssF
main.go:2230:21: should drop = 0 from declaration of var ss_F; it is the zero value
main.go:2231:21: should drop = 0 from declaration of var errF; it is the zero value
main.go:2257:4: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2262:4: don't use underscores in Go names; var ss_F should be ssF
main.go:2274:6: don't use underscores in Go names; func element_end_forces should be elementEndForces
main.go:2274:232: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:2274:254: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:2274:310: don't use underscores in Go names; func parameter axial_strain_warning should be axialStrainWarning
main.go:2276:6: don't use underscores in Go names; var axial_strain should be axialStrain
main.go:2276:19: should omit type float64 from declaration of var axial_strain; it will be inferred from the right-hand side
main.go:2288:4: should replace axial_strain_warning[0] += 1 with axial_strain_warning[0]++
main.go:2322:6: don't use underscores in Go names; func frame_element_force should be frameElementForce
main.go:2322:196: don't use underscores in Go names; func parameter f_t should be fT
main.go:2322:211: don't use underscores in Go names; func parameter f_m should be fM
main.go:2322:260: don't use underscores in Go names; func parameter axial_strain should be axialStrain
main.go:2344:22: should drop = 0 from declaration of var delta; it is the zero value
main.go:2349:18: should drop = 0 from declaration of var T; it is the zero value
main.go:2350:9: should omit type float64 from declaration of var f1; it will be inferred from the right-hand side
main.go:2351:9: should omit type float64 from declaration of var f2; it will be inferred from the right-hand side
main.go:2352:9: should omit type float64 from declaration of var f3; it will be inferred from the right-hand side
main.go:2353:9: should omit type float64 from declaration of var f4; it will be inferred from the right-hand side
main.go:2354:9: should omit type float64 from declaration of var f5; it will be inferred from the right-hand side
main.go:2355:9: should omit type float64 from declaration of var f6; it will be inferred from the right-hand side
main.go:2356:9: should omit type float64 from declaration of var f7; it will be inferred from the right-hand side
main.go:2357:9: should omit type float64 from declaration of var f8; it will be inferred from the right-hand side
main.go:2358:9: should omit type float64 from declaration of var f9; it will be inferred from the right-hand side
main.go:2359:10: should omit type float64 from declaration of var f10; it will be inferred from the right-hand side
main.go:2360:10: should omit type float64 from declaration of var f11; it will be inferred from the right-hand side
main.go:2361:10: should omit type float64 from declaration of var f12; it will be inferred from the right-hand side
main.go:2478:6: don't use underscores in Go names; func compute_reaction_forces should be computeReactionForces
main.go:2496:6: don't use underscores in Go names; func assemble_M should be assembleM
main.go:2499:16: should drop = 0 from declaration of var res; it is the zero value
main.go:2506:6: don't use underscores in Go names; var mass_fn should be massFn
main.go:2506:14: should omit type []byte from declaration of var mass_fn; it will be inferred from the right-hand side
main.go:2569:6: don't use underscores in Go names; func lumped_M should be lumpedM
main.go:2626:6: don't use underscores in Go names; func consistent_M should be consistentM
main.go:2721:6: don't use underscores in Go names; func static_condensation should be staticCondensation
main.go:2748:6: should replace k += 1 with k++
main.go:2796:6: don't use underscores in Go names; func paz_condensation should be pazCondensation
main.go:2833:6: should replace k += 1 with k++
main.go:2891:6: don't use underscores in Go names; func modal_condensation should be modalCondensation
main.go:2894:13: should omit type float64 from declaration of var traceM; it will be inferred from the right-hand side
main.go:2895:14: should omit type float64 from declaration of var traceMc; it will be inferred from the right-hand side
main.go:2962:407: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:2962:427: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:2962:447: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:2962:471: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:3072:6: don't use underscores in Go names; func parse_options should be parseOptions
main.go:3072:45: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:3072:61: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:3072:78: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:3072:96: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:3072:113: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:3072:131: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:3072:153: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:3072:168: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:3072:185: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:3072:203: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:3072:223: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:3072:245: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:3072:265: don't use underscores in Go names; func parameter write_matrix should be writeMatrix
main.go:3072:285: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:3072:303: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:3074:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:3075:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:3262:9: don't use underscores in Go names; func display_help should be displayHelp
main.go:3305:9: don't use underscores in Go names; func display_usage should be displayUsage
main.go:3318:6: don't use underscores in Go names; func display_version should be displayVersion
main.go:3334:6: don't use underscores in Go names; func display_version_about should be displayVersionAbout
main.go:3350:6: don't use underscores in Go names; func read_node_data should be readNodeData
main.go:3353:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:3354:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:3379:6: don't use underscores in Go names; func read_frame_element_data should be readFrameElementData
main.go:3386:17: should drop = 0 from declaration of var epn0; it is the zero value
main.go:3387:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:3388:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:3404:3: should replace epn[N1[b]] += 1 with epn[N1[b]]++
main.go:3405:3: should replace epn[N2[b]] += 1 with epn[N2[b]]++
main.go:3492:4: should replace epn0 += 1 with epn0++
main.go:3507:6: don't use underscores in Go names; func read_run_data should be readRunData
main.go:3507:37: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:3507:67: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:3507:95: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:3507:161: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:3507:185: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:3507:249: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:3508:6: don't use underscores in Go names; var full_len should be fullLen
main.go:3508:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:3509:16: should drop = 0 from declaration of var len; it is the zero value
main.go:3511:6: don't use underscores in Go names; var base_file should be baseFile
main.go:3511:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:3512:6: don't use underscores in Go names; var mesh_file should be meshFile
main.go:3512:16: should omit type []byte from declaration of var mesh_file; it will be inferred from the right-hand side
main.go:3513:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:3517:4: should replace len += 1 with len++
main.go:3525:4: should replace len -= 1 with len--
main.go:3534:3: should replace len += 1 with len++
main.go:3542:3: should replace len -= 1 with len--
main.go:3548:5: should replace i += 1 with i++
main.go:3553:5: should replace len += 1 with len++
main.go:3607:6: don't use underscores in Go names; func frame3dd_getline should be frame3ddGetline
main.go:3608:14: should drop = 0 from declaration of var c; it is the zero value
main.go:3609:14: should drop = 0 from declaration of var i; it is the zero value
main.go:3611:3: should replace lim -= 1 with lim--
main.go:3619:5: should replace i += 1 with i++
main.go:3636:6: don't use underscores in Go names; func temp_dir should be tempDir
main.go:3637:10: should omit type []byte from declaration of var tmp; it will be inferred from the right-hand side
main.go:3658:6: don't use underscores in Go names; func output_path should be outputPath
main.go:3658:58: don't use underscores in Go names; func parameter default_outdir should be defaultOutdir
main.go:3688:6: don't use underscores in Go names; func parse_input should be parseInput
main.go:3690:11: should omit type []byte from declaration of var line; it will be inferred from the right-hand side
main.go:3691:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:3720:6: don't use underscores in Go names; func getline_no_comment should be getlineNoComment
main.go:3721:14: should drop = 0 from declaration of var c; it is the zero value
main.go:3722:14: should drop = 0 from declaration of var i; it is the zero value
main.go:3724:3: should replace lim -= 1 with lim--
main.go:3733:6: should replace i += 1 with i++
main.go:3740:6: should replace i += 1 with i++
main.go:3749:4: should replace lim -= 1 with lim--
main.go:3768:6: don't use underscores in Go names; func read_reaction_data should be readReactionData
main.go:3772:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:3773:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:3908:6: don't use underscores in Go names; func read_and_assemble_loads should be readAndAssembleLoads
main.go:3908:400: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:3908:420: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:3908:538: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:3908:562: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:3923:20: should drop = 0 from declaration of var Mx1; it is the zero value
main.go:3924:20: should drop = 0 from declaration of var My1; it is the zero value
main.go:3925:20: should drop = 0 from declaration of var Mz1; it is the zero value
main.go:3929:20: should drop = 0 from declaration of var Mx2; it is the zero value
main.go:3930:20: should drop = 0 from declaration of var My2; it is the zero value
main.go:3931:20: should drop = 0 from declaration of var Mz2; it is the zero value
main.go:3952:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:3953:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4436:6: don't use underscores in Go names; func read_mass_data should be readMassData
main.go:4436:38: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:4436:206: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:4436:228: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:4436:276: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:4436:304: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:4436:334: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:4436:369: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:4436:389: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:4436:456: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:4443:6: don't use underscores in Go names; var full_len should be fullLen
main.go:4443:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:4444:16: should drop = 0 from declaration of var len; it is the zero value
main.go:4445:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4446:6: don't use underscores in Go names; var base_file should be baseFile
main.go:4446:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:4447:6: don't use underscores in Go names; var mode_file should be modeFile
main.go:4447:16: should omit type []byte from declaration of var mode_file; it will be inferred from the right-hand side
main.go:4448:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4617:4: should replace len += 1 with len++
main.go:4625:4: should replace len -= 1 with len--
main.go:4634:3: should replace len += 1 with len++
main.go:4638:3: should replace len -= 1 with len--
main.go:4644:5: should replace i += 1 with i++
main.go:4649:5: should replace len += 1 with len++
main.go:4664:6: don't use underscores in Go names; func read_condensation_data should be readCondensationData
main.go:4664:99: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:4669:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4670:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4752:5: should replace Cdof[0] += 1 with Cdof[0]++
main.go:4761:5: should replace k += 1 with k++
main.go:4788:6: don't use underscores in Go names; func write_input_data should be writeInputData
main.go:4989:6: don't use underscores in Go names; func write_static_results should be writeStaticResults
main.go:4989:189: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:5101:6: don't use underscores in Go names; func CSV_filename should be CSVFilename
main.go:5101:19: don't use underscores in Go names; func parameter CSV_file should be CSVFile
main.go:5101:47: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:5112:3: should replace i += 1 with i++
main.go:5113:3: should replace j += 1 with j++
main.go:5116:3: should replace j += 1 with j++
main.go:5134:6: don't use underscores in Go names; func write_static_csv should be writeStaticCsv
main.go:5134:23: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:5139:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:5140:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:5140:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:5142:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5273:6: don't use underscores in Go names; func write_static_mfile should be writeStaticMfile
main.go:5273:25: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:5279:6: don't use underscores in Go names; var M_file should be MFile
main.go:5279:13: should omit type []byte from declaration of var M_file; it will be inferred from the right-hand side
main.go:5281:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5291:3: should replace i += 1 with i++
main.go:5292:3: should replace j += 1 with j++
main.go:5295:3: should replace j += 1 with j++
main.go:5489:6: don't use underscores in Go names; func peak_internal_forces should be peakInternalForces
main.go:5523:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:5524:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:5525:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:5526:6: don't use underscores in Go names; var wx_ should be wx
main.go:5526:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:5527:6: don't use underscores in Go names; var wy_ should be wy
main.go:5527:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:5528:6: don't use underscores in Go names; var wz_ should be wz
main.go:5528:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:5529:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:5530:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:5531:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:5532:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:5533:6: don't use underscores in Go names; var tx_ should be tx
main.go:5533:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:5536:6: don't use underscores in Go names; var Nx_ should be Nx
main.go:5538:6: don't use underscores in Go names; var Vy_ should be Vy
main.go:5540:6: don't use underscores in Go names; var Vz_ should be Vz
main.go:5542:6: don't use underscores in Go names; var Tx_ should be Tx
main.go:5544:6: don't use underscores in Go names; var My_ should be My
main.go:5546:6: don't use underscores in Go names; var Mz_ should be Mz
main.go:5548:6: don't use underscores in Go names; var Sy_ should be Sy
main.go:5550:6: don't use underscores in Go names; var Sz_ should be Sz
main.go:5558:9: should omit type int from declaration of var nx; it will be inferred from the right-hand side
main.go:5559:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:5560:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:5561:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:5597:5: should replace cU += 1 with cU++
main.go:5648:7: should replace cW += 1 with cW++
main.go:5684:7: should replace cP += 1 with cP++
main.go:5722:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5729:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5736:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5743:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5750:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5757:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5764:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5771:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5778:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5785:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5792:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5799:12: if block ends with a return statement, so drop this else and outdent its block
main.go:5903:6: don't use underscores in Go names; func write_internal_forces should be writeInternalForces
main.go:5903:28: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:5937:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:5938:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:5939:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:5940:6: don't use underscores in Go names; var wx_ should be wx
main.go:5940:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:5941:6: don't use underscores in Go names; var wy_ should be wy
main.go:5941:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:5942:6: don't use underscores in Go names; var wz_ should be wz
main.go:5942:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:5943:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:5944:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:5945:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:5946:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:5947:6: don't use underscores in Go names; var tx_ should be tx
main.go:5947:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:5950:6: don't use underscores in Go names; var dx_ should be dx
main.go:5990:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:5991:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:5992:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:5999:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:6000:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:6000:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:6001:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6002:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:6080:5: should replace cU += 1 with cU++
main.go:6103:7: should replace cW += 1 with cW++
main.go:6142:7: should replace cP += 1 with cP++
main.go:6274:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6281:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6288:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6295:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6302:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6309:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6316:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6323:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6330:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6337:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6344:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6351:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6360:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6367:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6374:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6381:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6388:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6395:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6402:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6409:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6416:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6423:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6430:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6437:12: if block ends with a return statement, so drop this else and outdent its block
main.go:6480:6: don't use underscores in Go names; func write_modal_results should be writeModalResults
main.go:6480:119: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:6480:139: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:6485:6: don't use underscores in Go names; var num_modes should be numModes
main.go:6619:8: don't use underscores in Go names; func static_mesh should be staticMesh
main.go:6619:20: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:6619:213: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:6619:235: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:6620:26: should drop = nil from declaration of var fpif; it is the zero value
main.go:6621:25: should drop = nil from declaration of var fpm; it is the zero value
main.go:6625:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:6626:13: should omit type []byte from declaration of var meshfl; it will be inferred from the right-hand side
main.go:6629:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6631:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:6642:14: should drop = 0 from declaration of var j; it is the zero value
main.go:6643:14: should drop = 0 from declaration of var m; it is the zero value
main.go:6644:14: should drop = 0 from declaration of var n; it is the zero value
main.go:6645:14: should drop = 0 from declaration of var X; it is the zero value
main.go:6646:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:6647:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:6648:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:6846:6: don't use underscores in Go names; func modal_mesh should be modalMesh
main.go:6846:17: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:6846:232: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:6846:253: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:6859:14: should drop = 0 from declaration of var X; it is the zero value
main.go:6860:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:6861:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:6862:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:6865:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:6866:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7006:14: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:7006:226: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:7006:247: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:7008:6: don't use underscores in Go names; var x_min should be xMin
main.go:7008:12: should omit type float32 from declaration of var x_min; it will be inferred from the right-hand side
main.go:7009:6: don't use underscores in Go names; var x_max should be xMax
main.go:7009:12: should omit type float32 from declaration of var x_max; it will be inferred from the right-hand side
main.go:7010:6: don't use underscores in Go names; var y_min should be yMin
main.go:7010:12: should omit type float32 from declaration of var y_min; it will be inferred from the right-hand side
main.go:7011:6: don't use underscores in Go names; var y_max should be yMax
main.go:7011:12: should omit type float32 from declaration of var y_max; it will be inferred from the right-hand side
main.go:7012:6: don't use underscores in Go names; var z_min should be zMin
main.go:7012:12: should omit type float32 from declaration of var z_min; it will be inferred from the right-hand side
main.go:7013:6: don't use underscores in Go names; var z_max should be zMax
main.go:7013:12: should omit type float32 from declaration of var z_max; it will be inferred from the right-hand side
main.go:7014:11: should omit type float32 from declaration of var Dxyz; it will be inferred from the right-hand side
main.go:7015:6: don't use underscores in Go names; var rot_x_init should be rotXInit
main.go:7015:17: should omit type float32 from declaration of var rot_x_init; it will be inferred from the right-hand side
main.go:7016:6: don't use underscores in Go names; var rot_x_final should be rotXFinal
main.go:7016:18: should omit type float32 from declaration of var rot_x_final; it will be inferred from the right-hand side
main.go:7017:6: don't use underscores in Go names; var rot_z_init should be rotZInit
main.go:7017:17: should omit type float32 from declaration of var rot_z_init; it will be inferred from the right-hand side
main.go:7018:6: don't use underscores in Go names; var rot_z_final should be rotZFinal
main.go:7018:18: should omit type float32 from declaration of var rot_z_final; it will be inferred from the right-hand side
main.go:7019:6: don't use underscores in Go names; var zoom_init should be zoomInit
main.go:7019:16: should omit type float32 from declaration of var zoom_init; it will be inferred from the right-hand side
main.go:7020:6: don't use underscores in Go names; var zoom_final should be zoomFinal
main.go:7020:17: should omit type float32 from declaration of var zoom_final; it will be inferred from the right-hand side
main.go:7021:13: should omit type float32 from declaration of var frames; it will be inferred from the right-hand side
main.go:7022:9: should omit type float64 from declaration of var ex; it will be inferred from the right-hand side
main.go:7029:14: should drop = 0 from declaration of var X; it is the zero value
main.go:7030:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:7031:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:7033:13: should omit type int from declaration of var CYCLES; it will be inferred from the right-hand side
main.go:7034:6: don't use underscores in Go names; var frame_number should be frameNumber
main.go:7034:25: should drop = 0 from declaration of var frame_number; it is the zero value
main.go:7035:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:7036:6: don't use underscores in Go names; var total_frames should be totalFrames
main.go:7040:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:7041:14: should omit type []byte from declaration of var framefl; it will be inferred from the right-hand side
main.go:7042:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7137:5: don't use underscores in Go names; var frame_number should be frameNumber
main.go:7137:5: should replace frame_number += 1 with frame_number++
main.go:7156:5: don't use underscores in Go names; var frame_number should be frameNumber
main.go:7156:5: should replace frame_number += 1 with frame_number++
main.go:7177:3: should replace i += 1 with i++
main.go:7213:3: should replace i += 1 with i++
main.go:7230:6: don't use underscores in Go names; func cubic_bent_beam should be cubicBentBeam
main.go:7264:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7342:6: don't use underscores in Go names; func force_bent_beam should be forceBentBeam
main.go:7371:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:7384:4: should replace n += 1 with n++
main.go:7409:6: don't use underscores in Go names; func my_itoa should be myItoa
main.go:7424:5: should replace i += 1 with i++
main.go:7438:5: should replace i += 1 with i++
main.go:7446:5: should replace i += 1 with i++
main.go:7454:3: should replace j += 1 with j++
main.go:7456:2: should replace j -= 1 with j--
main.go:7461:3: should replace i += 1 with i++
main.go:7462:3: should replace j -= 1 with j--
main.go:7477:8: don't use underscores in Go names; func get_file_ext should be getFileExt
main.go:7478:14: should drop = 0 from declaration of var i; it is the zero value
main.go:7479:6: don't use underscores in Go names; var full_len should be fullLen
main.go:7479:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:7480:16: should drop = 0 from declaration of var len; it is the zero value
main.go:7483:4: should replace len += 1 with len++
main.go:7491:4: should replace len -= 1 with len--
main.go:7499:2: should replace len += 1 with len++
main.go:7502:3: should replace i += 1 with i++
main.go:7503:3: should replace len += 1 with len++
main.go:7527:33: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:7724:6: don't use underscores in Go names; func coord_trans should be coordTrans
main.go:7892:6: don't use underscores in Go names; var km_old should be kmOld
main.go:7894:6: don't use underscores in Go names; var w_old should be wOld
main.go:7894:22: should drop = 0 from declaration of var w_old; it is the zero value
main.go:7895:14: should drop = 0 from declaration of var i; it is the zero value
main.go:7896:14: should drop = 0 from declaration of var j; it is the zero value
main.go:7897:14: should drop = 0 from declaration of var k; it is the zero value
main.go:7899:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:7901:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7935:10: if block ends with a return statement, so drop this else and outdent its block
main.go:8047:3: should replace iter[0] += 1 with iter[0]++
main.go:8118:20: should drop = 0 from declaration of var tol; it is the zero value
main.go:8231:6: don't use underscores in Go names; var d_min should be dMin
main.go:8231:22: should drop = 0 from declaration of var d_min; it is the zero value
main.go:8232:6: don't use underscores in Go names; var d_max should be dMax
main.go:8232:22: should drop = 0 from declaration of var d_max; it is the zero value
main.go:8233:6: don't use underscores in Go names; var d_old should be dOld
main.go:8233:22: should drop = 0 from declaration of var d_old; it is the zero value
main.go:8240:22: should drop = 0 from declaration of var RQold; it is the zero value
main.go:8242:6: don't use underscores in Go names; var i_ex should be iEx
main.go:8242:11: should omit type int from declaration of var i_ex; it will be inferred from the right-hand side
main.go:8244:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:8248:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:8257:10: if block ends with a return statement, so drop this else and outdent its block
main.go:8370:4: should replace iter[0] += 1 with iter[0]++
main.go:8413:8: should omit type float64 from declaration of var p; it will be inferred from the right-hand side
main.go:8454:6: don't use underscores in Go names; var ws_shift should be wsShift
main.go:8456:15: should drop = 0 from declaration of var ok; it is the zero value
main.go:8464:10: if block ends with a return statement, so drop this else and outdent its block
main.go:8499:85: don't use underscores in Go names; func check_non_negative should be checkNonNegative
main.go:8562:11: should omit type int from declaration of var icol; it will be inferred from the right-hand side
main.go:8563:11: should omit type int from declaration of var irow; it will be inferred from the right-hand side
main.go:8597:3: should replace ipiv[icol] += 1 with ipiv[icol]++
main.go:8670:6: don't use underscores in Go names; func lu_dcmp should be luDcmp
main.go:8739:6: don't use underscores in Go names; func ldl_dcmp should be ldlDcmp
main.go:8752:7: should replace m += 1 with m++
main.go:8777:5: should replace pd[0] -= 1 with pd[0]--
main.go:8815:6: don't use underscores in Go names; func ldl_mprove should be ldlMprove
main.go:8815:78: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:8818:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:8818:20: should omit type float64 from declaration of var rms_resid_new; it will be inferred from the right-hand side
main.go:8836:3: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:8879:6: don't use underscores in Go names; func ldl_dcmp_pm should be ldlDcmpPm
main.go:8894:8: should replace m += 1 with m++
main.go:8927:6: should replace pd[0] -= 1 with pd[0]--
main.go:9015:6: don't use underscores in Go names; func ldl_mprove_pm should be ldlMprovePm
main.go:9015:112: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:9019:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:9019:30: should drop = 0 from declaration of var rms_resid_new; it is the zero value
main.go:9051:4: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:9082:6: don't use underscores in Go names; func PSB_update should be PSBUpdate
main.go:9085:20: should drop = 0 from declaration of var dtd; it is the zero value
main.go:9086:20: should drop = 0 from declaration of var ftd; it is the zero value
main.go:9087:21: should drop = 0 from declaration of var dtd2; it is the zero value
main.go:9112:6: don't use underscores in Go names; func pseudo_inv should be pseudoInv
main.go:9119:6: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:9119:23: should drop = 0 from declaration of var tr_AtA; it is the zero value
main.go:9159:3: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:9376:9: don't use underscores in Go names; func coord_xfrm should be coordXfrm
main.go:9444:21: should drop = 0 from declaration of var xtAy; it is the zero value
main.go:9568:9: don't use underscores in Go names; func relative_norm should be relativeNorm
main.go:9569:19: should drop = 0 from declaration of var nN; it is the zero value
main.go:9570:19: should drop = 0 from declaration of var nD; it is the zero value
main.go:9760:17: should omit type []byte from declaration of var pathToFile; it will be inferred from the right-hand side
main.go:9761:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9795:14: should drop = 0 from declaration of var c; it is the zero value
main.go:9796:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:9798:3: should replace lim -= 1 with lim--
main.go:9805:4: should replace i += 1 with i++
main.go:9810:3: should replace i += 1 with i++
main.go:9822:14: should drop = 0 from declaration of var c; it is the zero value
main.go:9823:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:9825:3: should replace lim -= 1 with lim--
main.go:9833:3: should replace lim -= 1 with lim--
main.go:9840:4: should replace i += 1 with i++
main.go:9845:3: should replace i += 1 with i++
main.go:9858:32: don't use underscores in Go names; func parameter head_lines should be headLines
main.go:9858:48: don't use underscores in Go names; func parameter start_chnl should be startChnl
main.go:9858:64: don't use underscores in Go names; func parameter stop_chnl should be stopChnl
main.go:9859:19: should drop = 0 from declaration of var points; it is the zero value
main.go:9862:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:9863:6: don't use underscores in Go names; var data_value should be dataValue
main.go:9876:5: should replace points += 1 with points++
main.go:9901:14: should drop = 0 from declaration of var c; it is the zero value
main.go:9902:14: should drop = 0 from declaration of var i; it is the zero value
main.go:9904:3: should replace lim -= 1 with lim--
main.go:9912:5: should replace i += 1 with i++
main.go:9919:4: should replace i += 1 with i++
main.go:9935:11: should omit type []byte from declaration of var temp; it will be inferred from the right-hand side
main.go:9936:6: don't use underscores in Go names; var t_tm should be tTm
main.go:9937:6: don't use underscores in Go names; var t_time should be tTime
main.go:9956:6: don't use underscores in Go names; var line_length should be lineLength
main.go:9956:18: should omit type int from declaration of var line_length; it will be inferred from the right-hand side
main.go:9957:6: don't use underscores in Go names; var percent_done should be percentDone
main.go:9979:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9985:6: don't use underscores in Go names; type ptrdiff_t should be ptrdiffT
main.go:9986:6: don't use underscores in Go names; type max_align_t should be maxAlignT
main.go:9987:2: don't use underscores in Go names; struct field __clang_max_align_nonce1 should be _ClangMaxAlignNonce1
main.go:9988:2: don't use underscores in Go names; struct field __clang_max_align_nonce2 should be _ClangMaxAlignNonce2
main.go:9997:14: don't use underscores in Go names; func parameter error_text should be errorText
main.go:10063:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:10064:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:10088:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:10089:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:10113:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:10114:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:10139:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:10140:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:10153:4: should replace i += 1 with i++
main.go:10154:4: should replace j += 1 with j++
main.go:10165:6: don't use underscores in Go names; func convert_matrix should be convertMatrix
main.go:10168:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:10169:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:10183:4: should replace i += 1 with i++
main.go:10184:4: should replace j += 1 with j++
main.go:10195:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:10196:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:10197:11: should omit type int32 from declaration of var ndep; it will be inferred from the right-hand side
main.go:10232:6: don't use underscores in Go names; func free_vector should be freeVector
main.go:10238:6: don't use underscores in Go names; func free_ivector should be freeIvector
main.go:10244:6: don't use underscores in Go names; func free_cvector should be freeCvector
main.go:10250:6: don't use underscores in Go names; func free_lvector should be freeLvector
main.go:10256:6: don't use underscores in Go names; func free_dvector should be freeDvector
main.go:10262:6: don't use underscores in Go names; func free_matrix should be freeMatrix
main.go:10269:6: don't use underscores in Go names; func free_dmatrix should be freeDmatrix
main.go:10276:6: don't use underscores in Go names; func free_imatrix should be freeImatrix
main.go:10283:6: don't use underscores in Go names; func free_subMatrix should be freeSubMatrix
main.go:10289:6: don't use underscores in Go names; func free_convert_matrix should be freeConvertMatrix
main.go:10295:6: don't use underscores in Go names; func free_f3tensor should be freeF3tensor
main.go:10303:30: exported func Cvector returns unexported type []main.fcomplex, which can be annoying to use
main.go:10314:50: exported func Cmatrix returns unexported type [][]main.fcomplex, which can be annoying to use
main.go:10390:6: don't use underscores in Go names; func free_Cvector should be freeCvector
main.go:10396:6: don't use underscores in Go names; func free_Cmatrix should be freeCmatrix
main.go:10406:6: don't use underscores in Go names; func free_D3matrix should be freeD3matrix
main.go:10418:6: don't use underscores in Go names; func free_D3dmatrix should be freeD3dmatrix
main.go:10431:9: don't use underscores in Go names; func show_vector should be showVector
main.go:10447:9: don't use underscores in Go names; func show_dvector should be showDvector
main.go:10463:9: don't use underscores in Go names; func show_ivector should be showIvector
main.go:10479:9: don't use underscores in Go names; func show_matrix should be showMatrix
main.go:10502:9: don't use underscores in Go names; func show_dmatrix should be showDmatrix
main.go:10525:9: don't use underscores in Go names; func save_vector should be saveVector
main.go:10526:6: don't use underscores in Go names; var fp_v should be fpV
main.go:10556:9: don't use underscores in Go names; func save_dvector should be saveDvector
main.go:10557:6: don't use underscores in Go names; var fp_v should be fpV
main.go:10587:9: don't use underscores in Go names; func save_ivector should be saveIvector
main.go:10588:6: don't use underscores in Go names; var fp_v should be fpV
main.go:10618:9: don't use underscores in Go names; func save_matrix should be saveMatrix
main.go:10619:6: don't use underscores in Go names; var fp_m should be fpM
main.go:10677:9: don't use underscores in Go names; func save_dmatrix should be saveDmatrix
main.go:10678:6: don't use underscores in Go names; var fp_m should be fpM
main.go:10738:9: don't use underscores in Go names; func save_ut_matrix should be saveUtMatrix
main.go:10739:6: don't use underscores in Go names; var fp_m should be fpM
main.go:10782:9: don't use underscores in Go names; func save_ut_dmatrix should be saveUtDmatrix
main.go:10783:6: don't use underscores in Go names; var fp_m should be fpM
