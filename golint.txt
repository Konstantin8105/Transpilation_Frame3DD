main.go:61:6: don't use underscores in Go names; type float_t should be floatT
main.go:62:6: don't use underscores in Go names; type double_t should be doubleT
main.go:64:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:64:7: exported const FP_NAN should have comment or be unexported
main.go:65:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:65:7: exported const FP_INFINITE should have comment or be unexported
main.go:66:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:66:7: exported const FP_ZERO should have comment or be unexported
main.go:67:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:67:7: exported const FP_SUBNORMAL should have comment or be unexported
main.go:68:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:68:7: exported const FP_NORMAL should have comment or be unexported
main.go:69:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:70:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:71:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:72:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:73:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:75:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:77:2: don't use underscores in Go names; struct field type_ should be type
main.go:83:6: don't use underscores in Go names; type size_t should be sizeT
main.go:84:6: don't use underscores in Go names; type __u_char should be _UChar
main.go:85:6: don't use underscores in Go names; type __u_short should be _UShort
main.go:86:6: don't use underscores in Go names; type __u_int should be _UInt
main.go:87:6: don't use underscores in Go names; type __u_long should be _ULong
main.go:88:6: don't use underscores in Go names; type __int8_t should be _Int8T
main.go:89:6: don't use underscores in Go names; type __uint8_t should be _Uint8T
main.go:90:6: don't use underscores in Go names; type __int16_t should be _Int16T
main.go:91:6: don't use underscores in Go names; type __uint16_t should be _Uint16T
main.go:92:6: don't use underscores in Go names; type __int32_t should be _Int32T
main.go:93:6: don't use underscores in Go names; type __uint32_t should be _Uint32T
main.go:94:6: don't use underscores in Go names; type __int64_t should be _Int64T
main.go:95:6: don't use underscores in Go names; type __uint64_t should be _Uint64T
main.go:96:6: don't use underscores in Go names; type __quad_t should be _QuadT
main.go:97:6: don't use underscores in Go names; type __u_quad_t should be _UQuadT
main.go:98:6: don't use underscores in Go names; type __dev_t should be _DevT
main.go:99:6: don't use underscores in Go names; type __uid_t should be _UIDT
main.go:100:6: don't use underscores in Go names; type __gid_t should be _GidT
main.go:101:6: don't use underscores in Go names; type __ino_t should be _InoT
main.go:102:6: don't use underscores in Go names; type __ino64_t should be _Ino64T
main.go:103:6: don't use underscores in Go names; type __mode_t should be _ModeT
main.go:104:6: don't use underscores in Go names; type __nlink_t should be _NlinkT
main.go:105:6: don't use underscores in Go names; type __off_t should be _OffT
main.go:106:6: don't use underscores in Go names; type __off64_t should be _Off64T
main.go:107:6: don't use underscores in Go names; type __pid_t should be _PidT
main.go:108:6: don't use underscores in Go names; type __fsid_t should be _FsidT
main.go:109:2: don't use underscores in Go names; struct field __val should be _Val
main.go:111:6: don't use underscores in Go names; type __clock_t should be _ClockT
main.go:112:6: don't use underscores in Go names; type __rlim_t should be _RlimT
main.go:113:6: don't use underscores in Go names; type __rlim64_t should be _Rlim64T
main.go:114:6: don't use underscores in Go names; type __id_t should be _IDT
main.go:115:6: don't use underscores in Go names; type __time_t should be _TimeT
main.go:116:6: don't use underscores in Go names; type __useconds_t should be _UsecondsT
main.go:117:6: don't use underscores in Go names; type __suseconds_t should be _SusecondsT
main.go:118:6: don't use underscores in Go names; type __daddr_t should be _DaddrT
main.go:119:6: don't use underscores in Go names; type __key_t should be _KeyT
main.go:120:6: don't use underscores in Go names; type __clockid_t should be _ClockidT
main.go:121:6: don't use underscores in Go names; type __timer_t should be _TimerT
main.go:122:6: don't use underscores in Go names; type __blksize_t should be _BlksizeT
main.go:123:6: don't use underscores in Go names; type __blkcnt_t should be _BlkcntT
main.go:124:6: don't use underscores in Go names; type __blkcnt64_t should be _Blkcnt64T
main.go:125:6: don't use underscores in Go names; type __fsblkcnt_t should be _FsblkcntT
main.go:126:6: don't use underscores in Go names; type __fsblkcnt64_t should be _Fsblkcnt64T
main.go:127:6: don't use underscores in Go names; type __fsfilcnt_t should be _FsfilcntT
main.go:128:6: don't use underscores in Go names; type __fsfilcnt64_t should be _Fsfilcnt64T
main.go:129:6: don't use underscores in Go names; type __fsword_t should be _FswordT
main.go:130:6: don't use underscores in Go names; type __ssize_t should be _SsizeT
main.go:131:6: don't use underscores in Go names; type __syscall_slong_t should be _SyscallSlongT
main.go:132:6: don't use underscores in Go names; type __syscall_ulong_t should be _SyscallUlongT
main.go:133:6: don't use underscores in Go names; type __loff_t should be _LoffT
main.go:134:6: don't use underscores in Go names; type __qaddr_t should be _QaddrT
main.go:135:6: don't use underscores in Go names; type __caddr_t should be _CaddrT
main.go:136:6: don't use underscores in Go names; type __intptr_t should be _IntptrT
main.go:137:6: don't use underscores in Go names; type __socklen_t should be _SocklenT
main.go:138:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:140:6: exported type FILE should have comment or be unexported
main.go:142:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:143:6: exported type BSunionSatSSusrSincludeSwcharPhD85D3E should have comment or be unexported
main.go:148:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:151:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:155:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.UntypedSet should have comment or be unexported
main.go:155:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:159:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wch should have comment or be unexported
main.go:159:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:159:52: don't use underscores in Go names; method Get__wch should be GetWch
main.go:163:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wch should have comment or be unexported
main.go:163:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:163:52: don't use underscores in Go names; method Set__wch should be SetWch
main.go:168:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wchb should have comment or be unexported
main.go:168:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:168:52: don't use underscores in Go names; method Get__wchb should be GetWchb
main.go:172:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wchb should have comment or be unexported
main.go:172:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:172:52: don't use underscores in Go names; method Set__wchb should be SetWchb
main.go:178:6: don't use underscores in Go names; type __mbstate_t should be _MbstateT
main.go:179:2: don't use underscores in Go names; struct field __count should be _Count
main.go:180:2: don't use underscores in Go names; struct field __value should be _Value
main.go:182:6: don't use underscores in Go names; type _G_fpos_t should be _GFposT
main.go:183:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:184:2: don't use underscores in Go names; struct field __state should be _State
main.go:186:6: don't use underscores in Go names; type _G_fpos64_t should be _GFpos64T
main.go:187:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:188:2: don't use underscores in Go names; struct field __state should be _State
main.go:190:6: don't use underscores in Go names; type va_list should be vaList
main.go:191:6: don't use underscores in Go names; type __gnuc_va_list should be _GnucVaList
main.go:192:6: don't use underscores in Go names; type _IO_jump_t should be _IOJumpT
main.go:194:6: don't use underscores in Go names; type _IO_lock_t should be _IOLockT
main.go:196:6: don't use underscores in Go names; type _IO_marker should be _IOMarker
main.go:201:6: don't use underscores in Go names; type __codecvt_result should be _CodecvtResult
main.go:204:2: don't use underscores in Go names; const __codecvt_ok should be _CodecvtOk
main.go:205:2: don't use underscores in Go names; const __codecvt_partial should be _CodecvtPartial
main.go:206:2: don't use underscores in Go names; const __codecvt_error should be _CodecvtError
main.go:207:2: don't use underscores in Go names; const __codecvt_noconv should be _CodecvtNoconv
main.go:210:6: don't use underscores in Go names; type _IO_FILE_plus should be _IOFILEPlus
main.go:212:6: don't use underscores in Go names; type __io_read_fn should be _IoReadFn
main.go:213:6: don't use underscores in Go names; type __io_write_fn should be _IoWriteFn
main.go:214:6: don't use underscores in Go names; type __io_seek_fn should be _IoSeekFn
main.go:215:6: don't use underscores in Go names; type __io_close_fn should be _IoCloseFn
main.go:216:6: don't use underscores in Go names; type cookie_read_function_t should be cookieReadFunctionT
main.go:217:6: don't use underscores in Go names; type cookie_write_function_t should be cookieWriteFunctionT
main.go:218:6: don't use underscores in Go names; type cookie_seek_function_t should be cookieSeekFunctionT
main.go:219:6: don't use underscores in Go names; type cookie_close_function_t should be cookieCloseFunctionT
main.go:220:6: don't use underscores in Go names; type _IO_cookie_io_functions_t should be _IOCookieIoFunctionsT
main.go:226:6: don't use underscores in Go names; type cookie_io_functions_t should be cookieIoFunctionsT
main.go:227:6: don't use underscores in Go names; type _IO_cookie_file should be _IOCookieFile
main.go:229:6: don't use underscores in Go names; type off_t should be offT
main.go:230:6: don't use underscores in Go names; type off64_t should be off64T
main.go:231:6: don't use underscores in Go names; type ssize_t should be ssizeT
main.go:232:6: don't use underscores in Go names; type fpos_t should be fposT
main.go:233:6: don't use underscores in Go names; type fpos64_t should be fpos64T
main.go:251:6: don't use underscores in Go names; type wchar_t should be wcharT
main.go:253:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:253:7: exported const P_ALL should have comment or be unexported
main.go:254:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:254:7: exported const P_PID should have comment or be unexported
main.go:255:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:255:7: exported const P_PGID should have comment or be unexported
main.go:257:6: don't use underscores in Go names; type idtype_t should be idtypeT
main.go:258:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD69D5E should have comment or be unexported
main.go:259:2: don't use underscores in Go names; struct field __w_termsig should be _WTermsig
main.go:260:2: don't use underscores in Go names; struct field __w_coredump should be _WCoredump
main.go:261:2: don't use underscores in Go names; struct field __w_retcode should be _WRetcode
main.go:263:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD84D5E should have comment or be unexported
main.go:264:2: don't use underscores in Go names; struct field __w_stopval should be _WStopval
main.go:265:2: don't use underscores in Go names; struct field __w_stopsig should be _WStopsig
main.go:272:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:275:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:279:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:283:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:283:19: don't use underscores in Go names; method GetW_status should be GetWStatus
main.go:287:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:287:19: don't use underscores in Go names; method SetW_status should be SetWStatus
main.go:292:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:292:19: don't use underscores in Go names; method Get__wait_terminated should be GetWaitTerminated
main.go:296:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:296:19: don't use underscores in Go names; method Set__wait_terminated should be SetWaitTerminated
main.go:301:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:301:19: don't use underscores in Go names; method Get__wait_stopped should be GetWaitStopped
main.go:305:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:305:19: don't use underscores in Go names; method Set__wait_stopped should be SetWaitStopped
main.go:311:6: don't use underscores in Go names; type div_t should be divT
main.go:315:6: don't use underscores in Go names; type ldiv_t should be ldivT
main.go:319:6: don't use underscores in Go names; type lldiv_t should be lldivT
main.go:323:6: don't use underscores in Go names; type __locale_data should be _LocaleData
main.go:325:6: don't use underscores in Go names; type __locale_t should be _LocaleT
main.go:326:2: don't use underscores in Go names; struct field __locales should be _Locales
main.go:327:2: don't use underscores in Go names; struct field __ctype_b should be _CtypeB
main.go:328:2: don't use underscores in Go names; struct field __ctype_tolower should be _CtypeTolower
main.go:329:2: don't use underscores in Go names; struct field __ctype_toupper should be _CtypeToupper
main.go:330:2: don't use underscores in Go names; struct field __names should be _Names
main.go:332:6: don't use underscores in Go names; type locale_t should be localeT
main.go:333:6: don't use underscores in Go names; type u_char should be uChar
main.go:334:6: don't use underscores in Go names; type u_short should be uShort
main.go:335:6: don't use underscores in Go names; type u_int should be uInt
main.go:336:6: don't use underscores in Go names; type u_long should be uLong
main.go:337:6: don't use underscores in Go names; type quad_t should be quadT
main.go:338:6: don't use underscores in Go names; type u_quad_t should be uQuadT
main.go:339:6: don't use underscores in Go names; type fsid_t should be fsidT
main.go:340:6: don't use underscores in Go names; type loff_t should be loffT
main.go:341:6: don't use underscores in Go names; type ino_t should be inoT
main.go:342:6: don't use underscores in Go names; type ino64_t should be ino64T
main.go:343:6: don't use underscores in Go names; type dev_t should be devT
main.go:344:6: don't use underscores in Go names; type gid_t should be gidT
main.go:345:6: don't use underscores in Go names; type mode_t should be modeT
main.go:346:6: don't use underscores in Go names; type nlink_t should be nlinkT
main.go:347:6: don't use underscores in Go names; type uid_t should be uidT
main.go:348:6: don't use underscores in Go names; type pid_t should be pidT
main.go:349:6: don't use underscores in Go names; type id_t should be idT
main.go:350:6: don't use underscores in Go names; type daddr_t should be daddrT
main.go:351:6: don't use underscores in Go names; type caddr_t should be caddrT
main.go:352:6: don't use underscores in Go names; type key_t should be keyT
main.go:353:6: don't use underscores in Go names; type clock_t should be clockT
main.go:354:6: don't use underscores in Go names; type time_t should be timeT
main.go:355:6: don't use underscores in Go names; type clockid_t should be clockidT
main.go:356:6: don't use underscores in Go names; type timer_t should be timerT
main.go:357:6: don't use underscores in Go names; type useconds_t should be usecondsT
main.go:358:6: don't use underscores in Go names; type suseconds_t should be susecondsT
main.go:362:6: don't use underscores in Go names; type int8_t should be int8T
main.go:363:6: don't use underscores in Go names; type int16_t should be int16T
main.go:364:6: don't use underscores in Go names; type int32_t should be int32T
main.go:365:6: don't use underscores in Go names; type int64_t should be int64T
main.go:366:6: don't use underscores in Go names; type u_int8_t should be uInt8T
main.go:367:6: don't use underscores in Go names; type u_int16_t should be uInt16T
main.go:368:6: don't use underscores in Go names; type u_int32_t should be uInt32T
main.go:369:6: don't use underscores in Go names; type u_int64_t should be uInt64T
main.go:370:6: don't use underscores in Go names; type register_t should be registerT
main.go:371:6: don't use underscores in Go names; type __sig_atomic_t should be _SigAtomicT
main.go:372:6: don't use underscores in Go names; type __sigset_t should be _SigsetT
main.go:373:2: don't use underscores in Go names; struct field __val should be _Val
main.go:375:6: don't use underscores in Go names; type sigset_t should be sigsetT
main.go:377:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:378:2: don't use underscores in Go names; struct field tv_nsec should be tvNsec
main.go:381:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:382:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:384:6: don't use underscores in Go names; type __fd_mask should be _FdMask
main.go:385:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:386:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:388:6: don't use underscores in Go names; type fd_set should be fdSet
main.go:389:2: don't use underscores in Go names; struct field fds_bits should be fdsBits
main.go:391:6: don't use underscores in Go names; type fd_mask should be fdMask
main.go:392:6: don't use underscores in Go names; type blksize_t should be blksizeT
main.go:393:6: don't use underscores in Go names; type blkcnt_t should be blkcntT
main.go:394:6: don't use underscores in Go names; type fsblkcnt_t should be fsblkcntT
main.go:395:6: don't use underscores in Go names; type fsfilcnt_t should be fsfilcntT
main.go:396:6: don't use underscores in Go names; type blkcnt64_t should be blkcnt64T
main.go:397:6: don't use underscores in Go names; type fsblkcnt64_t should be fsblkcnt64T
main.go:398:6: don't use underscores in Go names; type fsfilcnt64_t should be fsfilcnt64T
main.go:399:6: don't use underscores in Go names; type pthread_t should be pthreadT
main.go:400:6: don't use underscores in Go names; type pthread_attr_t should be pthreadAttrT
main.go:405:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:408:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:412:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:416:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:416:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:420:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:420:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:425:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:425:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:429:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:429:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:435:6: don't use underscores in Go names; type __pthread_internal_list should be _PthreadInternalList
main.go:436:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:437:2: don't use underscores in Go names; struct field __next should be _Next
main.go:439:6: don't use underscores in Go names; type __pthread_list_t should be _PthreadListT
main.go:440:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:441:2: don't use underscores in Go names; struct field __next should be _Next
main.go:443:6: don't use underscores in Go names; type __pthread_mutex_s should be _PthreadMutexS
main.go:444:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:445:2: don't use underscores in Go names; struct field __count should be _Count
main.go:446:2: don't use underscores in Go names; struct field __owner should be _Owner
main.go:447:2: don't use underscores in Go names; struct field __nusers should be _Nusers
main.go:448:2: don't use underscores in Go names; struct field __kind should be _Kind
main.go:449:2: don't use underscores in Go names; struct field __spins should be _Spins
main.go:450:2: don't use underscores in Go names; struct field __elision should be _Elision
main.go:451:2: don't use underscores in Go names; struct field __list should be _List
main.go:453:6: don't use underscores in Go names; type pthread_mutex_t should be pthreadMutexT
main.go:458:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:461:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:465:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:469:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:469:30: don't use underscores in Go names; method Get__data should be GetData
main.go:473:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:473:30: don't use underscores in Go names; method Set__data should be SetData
main.go:478:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:478:30: don't use underscores in Go names; method Get__size should be GetSize
main.go:482:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:482:30: don't use underscores in Go names; method Set__size should be SetSize
main.go:487:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:487:30: don't use underscores in Go names; method Get__align should be GetAlign
main.go:491:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:491:30: don't use underscores in Go names; method Set__align should be SetAlign
main.go:497:6: don't use underscores in Go names; type pthread_mutexattr_t should be pthreadMutexattrT
main.go:502:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:505:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:509:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:513:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:513:34: don't use underscores in Go names; method Get__size should be GetSize
main.go:517:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:517:34: don't use underscores in Go names; method Set__size should be SetSize
main.go:522:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:522:34: don't use underscores in Go names; method Get__align should be GetAlign
main.go:526:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:526:34: don't use underscores in Go names; method Set__align should be SetAlign
main.go:532:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD141D3E should have comment or be unexported
main.go:533:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:534:2: don't use underscores in Go names; struct field __futex should be _Futex
main.go:535:2: don't use underscores in Go names; struct field __total_seq should be _TotalSeq
main.go:536:2: don't use underscores in Go names; struct field __wakeup_seq should be _WakeupSeq
main.go:537:2: don't use underscores in Go names; struct field __woken_seq should be _WokenSeq
main.go:538:2: don't use underscores in Go names; struct field __mutex should be _Mutex
main.go:539:2: don't use underscores in Go names; struct field __nwaiters should be _Nwaiters
main.go:540:2: don't use underscores in Go names; struct field __broadcast_seq should be _BroadcastSeq
main.go:542:6: don't use underscores in Go names; type pthread_cond_t should be pthreadCondT
main.go:547:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:550:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:554:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:558:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:558:29: don't use underscores in Go names; method Get__data should be GetData
main.go:562:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:562:29: don't use underscores in Go names; method Set__data should be SetData
main.go:567:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:567:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:571:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:571:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:576:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:576:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:580:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:580:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:586:6: don't use underscores in Go names; type pthread_condattr_t should be pthreadCondattrT
main.go:591:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:594:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:598:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:602:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:602:33: don't use underscores in Go names; method Get__size should be GetSize
main.go:606:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:606:33: don't use underscores in Go names; method Set__size should be SetSize
main.go:611:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:611:33: don't use underscores in Go names; method Get__align should be GetAlign
main.go:615:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:615:33: don't use underscores in Go names; method Set__align should be SetAlign
main.go:621:6: don't use underscores in Go names; type pthread_key_t should be pthreadKeyT
main.go:622:6: don't use underscores in Go names; type pthread_once_t should be pthreadOnceT
main.go:623:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD177D3E should have comment or be unexported
main.go:624:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:625:2: don't use underscores in Go names; struct field __nr_readers should be _NrReaders
main.go:626:2: don't use underscores in Go names; struct field __readers_wakeup should be _ReadersWakeup
main.go:627:2: don't use underscores in Go names; struct field __writer_wakeup should be _WriterWakeup
main.go:628:2: don't use underscores in Go names; struct field __nr_readers_queued should be _NrReadersQueued
main.go:629:2: don't use underscores in Go names; struct field __nr_writers_queued should be _NrWritersQueued
main.go:630:2: don't use underscores in Go names; struct field __writer should be _Writer
main.go:631:2: don't use underscores in Go names; struct field __shared should be _Shared
main.go:632:2: don't use underscores in Go names; struct field __rwelision should be _Rwelision
main.go:633:2: don't use underscores in Go names; struct field __pad1 should be _Pad1
main.go:634:2: don't use underscores in Go names; struct field __pad2 should be _Pad2
main.go:635:2: don't use underscores in Go names; struct field __flags should be _Flags
main.go:637:6: don't use underscores in Go names; type pthread_rwlock_t should be pthreadRwlockT
main.go:642:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:645:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:649:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:653:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:653:31: don't use underscores in Go names; method Get__data should be GetData
main.go:657:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:657:31: don't use underscores in Go names; method Set__data should be SetData
main.go:662:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:662:31: don't use underscores in Go names; method Get__size should be GetSize
main.go:666:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:666:31: don't use underscores in Go names; method Set__size should be SetSize
main.go:671:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:671:31: don't use underscores in Go names; method Get__align should be GetAlign
main.go:675:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:675:31: don't use underscores in Go names; method Set__align should be SetAlign
main.go:681:6: don't use underscores in Go names; type pthread_rwlockattr_t should be pthreadRwlockattrT
main.go:686:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:689:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:693:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:697:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:697:35: don't use underscores in Go names; method Get__size should be GetSize
main.go:701:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:701:35: don't use underscores in Go names; method Set__size should be SetSize
main.go:706:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:706:35: don't use underscores in Go names; method Get__align should be GetAlign
main.go:710:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:710:35: don't use underscores in Go names; method Set__align should be SetAlign
main.go:716:6: don't use underscores in Go names; type pthread_spinlock_t should be pthreadSpinlockT
main.go:717:6: don't use underscores in Go names; type pthread_barrier_t should be pthreadBarrierT
main.go:722:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:725:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:729:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:733:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:733:32: don't use underscores in Go names; method Get__size should be GetSize
main.go:737:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:737:32: don't use underscores in Go names; method Set__size should be SetSize
main.go:742:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:742:32: don't use underscores in Go names; method Get__align should be GetAlign
main.go:746:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:746:32: don't use underscores in Go names; method Set__align should be SetAlign
main.go:752:6: don't use underscores in Go names; type pthread_barrierattr_t should be pthreadBarrierattrT
main.go:757:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:760:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:764:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:768:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:768:36: don't use underscores in Go names; method Get__size should be GetSize
main.go:772:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:772:36: don't use underscores in Go names; method Set__size should be SetSize
main.go:777:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:777:36: don't use underscores in Go names; method Get__align should be GetAlign
main.go:781:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:781:36: don't use underscores in Go names; method Set__align should be SetAlign
main.go:787:6: don't use underscores in Go names; type random_data should be randomData
main.go:791:2: don't use underscores in Go names; struct field rand_type should be randType
main.go:792:2: don't use underscores in Go names; struct field rand_deg should be randDeg
main.go:793:2: don't use underscores in Go names; struct field rand_sep should be randSep
main.go:794:2: don't use underscores in Go names; struct field end_ptr should be endPtr
main.go:796:6: don't use underscores in Go names; type drand48_data should be drand48Data
main.go:797:2: don't use underscores in Go names; struct field __x should be _X
main.go:798:2: don't use underscores in Go names; struct field __old_x should be _OldX
main.go:799:2: don't use underscores in Go names; struct field __c should be _C
main.go:800:2: don't use underscores in Go names; struct field __init should be _Init
main.go:801:2: don't use underscores in Go names; struct field __a should be _A
main.go:803:6: don't use underscores in Go names; type __compar_fn_t should be _ComparFnT
main.go:804:6: don't use underscores in Go names; type comparison_fn_t should be comparisonFnT
main.go:805:6: don't use underscores in Go names; type __compar_d_fn_t should be _ComparDFnT
main.go:806:6: don't use underscores in Go names; type vec3_struct should be vec3Struct
main.go:839:2: don't use underscores in Go names; struct field tm_sec should be tmSec
main.go:840:2: don't use underscores in Go names; struct field tm_min should be tmMin
main.go:841:2: don't use underscores in Go names; struct field tm_hour should be tmHour
main.go:842:2: don't use underscores in Go names; struct field tm_mday should be tmMday
main.go:843:2: don't use underscores in Go names; struct field tm_mon should be tmMon
main.go:844:2: don't use underscores in Go names; struct field tm_year should be tmYear
main.go:845:2: don't use underscores in Go names; struct field tm_wday should be tmWday
main.go:846:2: don't use underscores in Go names; struct field tm_yday should be tmYday
main.go:847:2: don't use underscores in Go names; struct field tm_isdst should be tmIsdst
main.go:848:2: don't use underscores in Go names; struct field tm_gmtoff should be tmGmtoff
main.go:849:2: don't use underscores in Go names; struct field tm_zone should be tmZone
main.go:852:2: don't use underscores in Go names; struct field it_interval should be itInterval
main.go:853:2: don't use underscores in Go names; struct field it_value should be itValue
main.go:857:6: don't use underscores in Go names; type intptr_t should be intptrT
main.go:858:6: don't use underscores in Go names; type socklen_t should be socklenT
main.go:860:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:861:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:862:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:863:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:864:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:865:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:866:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:867:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:868:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:869:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:870:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:871:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:872:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:873:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:874:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:875:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:876:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:877:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:878:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:879:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:880:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:881:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:882:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:883:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:884:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:885:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:886:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:887:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:888:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:889:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:890:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:891:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:892:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:893:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:894:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:895:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:896:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:897:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:898:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:899:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:900:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:901:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:902:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:903:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:904:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:905:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:906:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:907:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:908:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:909:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:910:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:911:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:912:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:913:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:914:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:915:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:916:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:917:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:918:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:919:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:920:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:921:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:922:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:923:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:924:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:925:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:926:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:927:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:928:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:929:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:930:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:931:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:932:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:933:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:934:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:935:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:936:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:937:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:938:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:939:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:940:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:941:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:942:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:943:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:944:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:945:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:946:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:947:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:948:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:949:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:950:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:951:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:952:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:953:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:954:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:955:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:956:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:957:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:958:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:959:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:960:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:961:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:962:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:963:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:964:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:965:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:966:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:967:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:968:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:969:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:970:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:971:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:972:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:973:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:974:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:975:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:976:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:977:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:978:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:979:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:980:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:981:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:982:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:983:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:984:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:985:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:986:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:987:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:988:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:989:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:990:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:991:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:992:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:993:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:994:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:995:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:996:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:997:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:998:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:999:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1000:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1001:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1002:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1003:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1004:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1005:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1006:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1007:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1008:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1009:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1010:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1011:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1012:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1013:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1014:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1015:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1016:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1017:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1018:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1019:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1020:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1021:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1022:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1023:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1024:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1025:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1026:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1027:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1028:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1029:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1030:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1031:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1032:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1033:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1034:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1035:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1036:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1037:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1038:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1039:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1040:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1041:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1042:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1043:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1044:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1045:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1046:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1047:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1048:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1049:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1050:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1051:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1052:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1053:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1054:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1055:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1056:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1057:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1058:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1059:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1060:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1061:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1062:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1063:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1064:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1065:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1066:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1067:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1068:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1069:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1070:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1071:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1072:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1073:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1074:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1075:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1076:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1077:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1078:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1079:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1080:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1081:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1082:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1083:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1084:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1085:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1086:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1087:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1088:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1089:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1090:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1091:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1092:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1093:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1094:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1095:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1096:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1097:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1098:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1099:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1100:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1101:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1102:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1103:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1104:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1105:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1106:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1107:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1108:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1109:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1110:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1111:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1112:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1113:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1114:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1115:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1116:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1117:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1118:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1119:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1120:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1121:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1122:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1123:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1124:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1125:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1126:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1127:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1128:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1129:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1130:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1131:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1132:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1133:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1134:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1135:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1136:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1137:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1138:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1139:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1140:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1141:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1142:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1143:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1144:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1145:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1146:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1147:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1148:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1149:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1150:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1151:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1152:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1153:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1154:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1155:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1156:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1157:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1158:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1159:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1161:6: exported type FCOMPLEX should have comment or be unexported
main.go:1361:6: don't use underscores in Go names; var IN_file should be INFile
main.go:1361:14: should omit type []byte from declaration of var IN_file; it will be inferred from the right-hand side
main.go:1362:6: don't use underscores in Go names; var OUT_file should be OUTFile
main.go:1362:15: should omit type []byte from declaration of var OUT_file; it will be inferred from the right-hand side
main.go:1363:12: should omit type []byte from declaration of var title; it will be inferred from the right-hand side
main.go:1364:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:1365:15: should omit type []byte from declaration of var meshpath; it will be inferred from the right-hand side
main.go:1366:15: should omit type []byte from declaration of var plotpath; it will be inferred from the right-hand side
main.go:1367:15: should omit type []byte from declaration of var infcpath; it will be inferred from the right-hand side
main.go:1368:15: should omit type []byte from declaration of var modepath; it will be inferred from the right-hand side
main.go:1369:24: should omit type []byte from declaration of var strippedInputFile; it will be inferred from the right-hand side
main.go:1372:21: should drop = nil from declaration of var rj; it is the zero value
main.go:1379:20: should drop = nil from declaration of var E; it is the zero value
main.go:1380:20: should drop = nil from declaration of var G; it is the zero value
main.go:1381:20: should drop = nil from declaration of var p; it is the zero value
main.go:1382:24: should drop = nil from declaration of var U; it is the zero value
main.go:1383:24: should drop = nil from declaration of var W; it is the zero value
main.go:1384:24: should drop = nil from declaration of var P; it is the zero value
main.go:1385:24: should drop = nil from declaration of var T; it is the zero value
main.go:1386:23: should drop = nil from declaration of var Dp; it is the zero value
main.go:1388:22: should drop = nil from declaration of var EMs; it is the zero value
main.go:1389:22: should drop = nil from declaration of var NMs; it is the zero value
main.go:1393:9: should omit type []float32 from declaration of var gX; it will be inferred from the right-hand side
main.go:1394:9: should omit type []float32 from declaration of var gY; it will be inferred from the right-hand side
main.go:1395:9: should omit type []float32 from declaration of var gZ; it will be inferred from the right-hand side
main.go:1396:10: should omit type float32 from declaration of var pan; it will be inferred from the right-hand side
main.go:1397:12: should omit type float32 from declaration of var scale; it will be inferred from the right-hand side
main.go:1398:9: should omit type float32 from declaration of var dx; it will be inferred from the right-hand side
main.go:1399:22: should drop = nil from declaration of var K; it is the zero value
main.go:1400:23: should drop = 0 from declaration of var traceK; it is the zero value
main.go:1401:22: should drop = nil from declaration of var M; it is the zero value
main.go:1402:23: should drop = 0 from declaration of var traceM; it is the zero value
main.go:1403:6: don't use underscores in Go names; var eqF_mech should be eqFMech
main.go:1403:31: should drop = nil from declaration of var eqF_mech; it is the zero value
main.go:1404:6: don't use underscores in Go names; var eqF_temp should be eqFTemp
main.go:1404:31: should drop = nil from declaration of var eqF_temp; it is the zero value
main.go:1405:6: don't use underscores in Go names; var F_mech should be FMech
main.go:1405:27: should drop = nil from declaration of var F_mech; it is the zero value
main.go:1406:6: don't use underscores in Go names; var F_temp should be FTemp
main.go:1406:27: should drop = nil from declaration of var F_temp; it is the zero value
main.go:1407:20: should drop = nil from declaration of var F; it is the zero value
main.go:1408:20: should drop = nil from declaration of var R; it is the zero value
main.go:1409:21: should drop = nil from declaration of var dR; it is the zero value
main.go:1410:20: should drop = nil from declaration of var D; it is the zero value
main.go:1411:21: should drop = nil from declaration of var dD; it is the zero value
main.go:1412:21: should drop = nil from declaration of var dF; it is the zero value
main.go:1413:20: should drop = nil from declaration of var L; it is the zero value
main.go:1414:21: should drop = nil from declaration of var Le; it is the zero value
main.go:1415:22: should drop = nil from declaration of var Q; it is the zero value
main.go:1416:10: should omit type float64 from declaration of var tol; it will be inferred from the right-hand side
main.go:1417:22: should drop = 0 from declaration of var shift; it is the zero value
main.go:1418:6: don't use underscores in Go names; var struct_mass should be structMass
main.go:1419:6: don't use underscores in Go names; var total_mass should be totalMass
main.go:1420:20: should drop = nil from declaration of var f; it is the zero value
main.go:1421:22: should drop = nil from declaration of var V; it is the zero value
main.go:1422:6: don't use underscores in Go names; var rms_resid should be rmsResid
main.go:1424:22: should drop = 0 from declaration of var Cfreq; it is the zero value
main.go:1427:6: don't use underscores in Go names; var exagg_static should be exaggStatic
main.go:1427:19: should omit type float64 from declaration of var exagg_static; it will be inferred from the right-hand side
main.go:1428:6: don't use underscores in Go names; var exagg_modal should be exaggModal
main.go:1428:18: should omit type float64 from declaration of var exagg_modal; it will be inferred from the right-hand side
main.go:1441:15: should drop = 0 from declaration of var nN; it is the zero value
main.go:1442:15: should drop = 0 from declaration of var nE; it is the zero value
main.go:1443:15: should drop = 0 from declaration of var nL; it is the zero value
main.go:1444:15: should drop = 0 from declaration of var lc; it is the zero value
main.go:1445:16: should drop = 0 from declaration of var DoF; it is the zero value
main.go:1448:15: should drop = 0 from declaration of var nR; it is the zero value
main.go:1449:9: should omit type []int from declaration of var nD; it will be inferred from the right-hand side
main.go:1450:9: should omit type []int from declaration of var nF; it will be inferred from the right-hand side
main.go:1451:9: should omit type []int from declaration of var nU; it will be inferred from the right-hand side
main.go:1452:9: should omit type []int from declaration of var nW; it will be inferred from the right-hand side
main.go:1453:9: should omit type []int from declaration of var nP; it will be inferred from the right-hand side
main.go:1454:9: should omit type []int from declaration of var nT; it will be inferred from the right-hand side
main.go:1455:15: should drop = 0 from declaration of var nI; it is the zero value
main.go:1456:15: should drop = 0 from declaration of var nX; it is the zero value
main.go:1457:15: should drop = 0 from declaration of var nC; it is the zero value
main.go:1460:18: should drop = 0 from declaration of var shear; it is the zero value
main.go:1461:17: should drop = 0 from declaration of var geom; it is the zero value
main.go:1462:12: should omit type int from declaration of var anlyz; it will be inferred from the right-hand side
main.go:1463:16: should drop = nil from declaration of var q; it is the zero value
main.go:1464:16: should drop = nil from declaration of var r; it is the zero value
main.go:1466:15: should drop = 0 from declaration of var nM; it is the zero value
main.go:1468:6: don't use underscores in Go names; var nM_calc should be nMCalc
main.go:1469:11: should omit type int from declaration of var lump; it will be inferred from the right-hand side
main.go:1470:17: should drop = 0 from declaration of var iter; it is the zero value
main.go:1471:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:1472:11: should omit type []int from declaration of var anim; it will be inferred from the right-hand side
main.go:1473:17: should drop = 0 from declaration of var Cdof; it is the zero value
main.go:1474:20: should drop = 0 from declaration of var Cmethod; it is the zero value
main.go:1475:16: should drop = nil from declaration of var c; it is the zero value
main.go:1476:16: should drop = nil from declaration of var m; it is the zero value
main.go:1477:21: should drop = 0 from declaration of var filetype; it is the zero value
main.go:1478:18: should drop = 0 from declaration of var debug; it is the zero value
main.go:1479:14: should omit type int from declaration of var verbose; it will be inferred from the right-hand side
main.go:1480:6: don't use underscores in Go names; var axial_strain_warning should be axialStrainWarning
main.go:1480:33: should drop = 0 from declaration of var axial_strain_warning; it is the zero value
main.go:1481:21: should drop = 0 from declaration of var ExitCode; it is the zero value
main.go:1482:6: don't use underscores in Go names; var shear_flag should be shearFlag
main.go:1482:17: should omit type int from declaration of var shear_flag; it will be inferred from the right-hand side
main.go:1483:6: don't use underscores in Go names; var geom_flag should be geomFlag
main.go:1483:16: should omit type int from declaration of var geom_flag; it will be inferred from the right-hand side
main.go:1484:6: don't use underscores in Go names; var anlyz_flag should be anlyzFlag
main.go:1484:17: should omit type int from declaration of var anlyz_flag; it will be inferred from the right-hand side
main.go:1485:6: don't use underscores in Go names; var D3_flag should be D3Flag
main.go:1485:14: should omit type int from declaration of var D3_flag; it will be inferred from the right-hand side
main.go:1486:6: don't use underscores in Go names; var lump_flag should be lumpFlag
main.go:1486:16: should omit type int from declaration of var lump_flag; it will be inferred from the right-hand side
main.go:1487:6: don't use underscores in Go names; var modal_flag should be modalFlag
main.go:1487:17: should omit type int from declaration of var modal_flag; it will be inferred from the right-hand side
main.go:1488:6: don't use underscores in Go names; var write_matrix should be writeMatrix
main.go:1488:19: should omit type int from declaration of var write_matrix; it will be inferred from the right-hand side
main.go:1489:6: don't use underscores in Go names; var axial_sign should be axialSign
main.go:1489:17: should omit type int from declaration of var axial_sign; it will be inferred from the right-hand side
main.go:1490:6: don't use underscores in Go names; var condense_flag should be condenseFlag
main.go:1490:20: should omit type int from declaration of var condense_flag; it will be inferred from the right-hand side
main.go:1491:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:1492:6: don't use underscores in Go names; var exagg_flag should be exaggFlag
main.go:1493:6: don't use underscores in Go names; var tol_flag should be tolFlag
main.go:1494:6: don't use underscores in Go names; var shift_flag should be shiftFlag
main.go:1495:6: don't use underscores in Go names; var pan_flag should be panFlag
main.go:1495:15: should omit type float32 from declaration of var pan_flag; it will be inferred from the right-hand side
main.go:1496:11: should omit type []byte from declaration of var extn; it will be inferred from the right-hand side
main.go:1680:5: should replace lc += 1 with lc++
main.go:1694:7: should replace i += 1 with i++
main.go:1717:7: should replace i += 1 with i++
main.go:1721:8: should replace j += 1 with j++
main.go:1736:8: should replace i += 1 with i++
main.go:1746:8: should replace i += 1 with i++
main.go:1765:8: should replace i += 1 with i++
main.go:1776:8: should replace i += 1 with i++
main.go:1789:8: should replace i += 1 with i++
main.go:1800:7: should replace i += 1 with i++
main.go:1819:8: should replace iter += 1 with iter++
main.go:1833:9: should replace i += 1 with i++
main.go:1888:11: if block ends with a return statement, so drop this else and outdent its block
main.go:1898:5: should replace j += 1 with j++
main.go:1909:5: should replace i += 1 with i++
main.go:1917:8: should replace j += 1 with j++
main.go:1954:6: should replace j += 1 with j++
main.go:2052:6: don't use underscores in Go names; func assemble_K should be assembleK
main.go:2055:16: should drop = 0 from declaration of var res; it is the zero value
main.go:2062:6: don't use underscores in Go names; var stiffness_fn should be stiffnessFn
main.go:2062:19: should omit type []byte from declaration of var stiffness_fn; it will be inferred from the right-hand side
main.go:2065:4: should replace i += 1 with i++
main.go:2069:5: should replace j += 1 with j++
main.go:2080:4: should replace i += 1 with i++
main.go:2099:4: should replace i += 1 with i++
main.go:2112:6: should replace l += 1 with l++
main.go:2118:8: should replace ll += 1 with ll++
main.go:2138:6: don't use underscores in Go names; func elastic_K should be elasticK
main.go:2155:4: should replace i += 1 with i++
main.go:2159:5: should replace j += 1 with j++
main.go:2342:4: should replace i += 1 with i++
main.go:2347:6: should replace j += 1 with j++
main.go:2380:6: don't use underscores in Go names; func geometric_K should be geometricK
main.go:2401:4: should replace i += 1 with i++
main.go:2405:5: should replace j += 1 with j++
main.go:2598:4: should replace i += 1 with i++
main.go:2603:6: should replace j += 1 with j++
main.go:2630:4: should replace i += 1 with i++
main.go:2634:5: should replace j += 1 with j++
main.go:2652:6: don't use underscores in Go names; func solve_system should be solveSystem
main.go:2652:123: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:2695:6: don't use underscores in Go names; func equilibrium_error should be equilibriumError
main.go:2696:6: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2696:22: should drop = 0 from declaration of var ss_dF; it is the zero value
main.go:2697:6: don't use underscores in Go names; var ss_F should be ssF
main.go:2697:21: should drop = 0 from declaration of var ss_F; it is the zero value
main.go:2698:21: should drop = 0 from declaration of var errF; it is the zero value
main.go:2703:4: should replace i += 1 with i++
main.go:2711:7: should replace j += 1 with j++
main.go:2725:7: should replace j += 1 with j++
main.go:2739:4: should replace i += 1 with i++
main.go:2743:5: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2749:4: should replace i += 1 with i++
main.go:2753:5: don't use underscores in Go names; var ss_F should be ssF
main.go:2766:6: don't use underscores in Go names; func element_end_forces should be elementEndForces
main.go:2766:232: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:2766:254: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:2766:310: don't use underscores in Go names; func parameter axial_strain_warning should be axialStrainWarning
main.go:2768:6: don't use underscores in Go names; var axial_strain should be axialStrain
main.go:2768:19: should omit type float64 from declaration of var axial_strain; it will be inferred from the right-hand side
main.go:2775:4: should replace m += 1 with m++
main.go:2781:6: should replace j += 1 with j++
main.go:2790:6: should replace (axial_strain_warning[0]) += 1 with (axial_strain_warning[0])++
main.go:2827:6: don't use underscores in Go names; func frame_element_force should be frameElementForce
main.go:2827:196: don't use underscores in Go names; func parameter f_t should be fT
main.go:2827:211: don't use underscores in Go names; func parameter f_m should be fM
main.go:2827:260: don't use underscores in Go names; func parameter axial_strain should be axialStrain
main.go:2849:22: should drop = 0 from declaration of var delta; it is the zero value
main.go:2854:18: should drop = 0 from declaration of var T; it is the zero value
main.go:2855:9: should omit type float64 from declaration of var f1; it will be inferred from the right-hand side
main.go:2856:9: should omit type float64 from declaration of var f2; it will be inferred from the right-hand side
main.go:2857:9: should omit type float64 from declaration of var f3; it will be inferred from the right-hand side
main.go:2858:9: should omit type float64 from declaration of var f4; it will be inferred from the right-hand side
main.go:2859:9: should omit type float64 from declaration of var f5; it will be inferred from the right-hand side
main.go:2860:9: should omit type float64 from declaration of var f6; it will be inferred from the right-hand side
main.go:2861:9: should omit type float64 from declaration of var f7; it will be inferred from the right-hand side
main.go:2862:9: should omit type float64 from declaration of var f8; it will be inferred from the right-hand side
main.go:2863:9: should omit type float64 from declaration of var f9; it will be inferred from the right-hand side
main.go:2864:10: should omit type float64 from declaration of var f10; it will be inferred from the right-hand side
main.go:2865:10: should omit type float64 from declaration of var f11; it will be inferred from the right-hand side
main.go:2866:10: should omit type float64 from declaration of var f12; it will be inferred from the right-hand side
main.go:2995:6: don't use underscores in Go names; func compute_reaction_forces should be computeReactionForces
main.go:3000:4: should replace i += 1 with i++
main.go:3008:7: should replace j += 1 with j++
main.go:3023:6: don't use underscores in Go names; func assemble_M should be assembleM
main.go:3026:16: should drop = 0 from declaration of var res; it is the zero value
main.go:3033:6: don't use underscores in Go names; var mass_fn should be massFn
main.go:3033:14: should omit type []byte from declaration of var mass_fn; it will be inferred from the right-hand side
main.go:3036:4: should replace i += 1 with i++
main.go:3040:5: should replace j += 1 with j++
main.go:3051:4: should replace i += 1 with i++
main.go:3070:4: should replace i += 1 with i++
main.go:3084:6: should replace l += 1 with l++
main.go:3090:8: should replace ll += 1 with ll++
main.go:3103:4: should replace j += 1 with j++
main.go:3117:4: should replace i += 1 with i++
main.go:3134:6: don't use underscores in Go names; func lumped_M should be lumpedM
main.go:3157:4: should replace i += 1 with i++
main.go:3161:5: should replace j += 1 with j++
main.go:3271:6: don't use underscores in Go names; func consistent_M should be consistentM
main.go:3294:4: should replace i += 1 with i++
main.go:3298:5: should replace j += 1 with j++
main.go:3467:4: should replace i += 1 with i++
main.go:3475:4: should replace i += 1 with i++
main.go:3484:4: should replace i += 1 with i++
main.go:3489:6: should replace j += 1 with j++
main.go:3520:6: don't use underscores in Go names; func static_condensation should be staticCondensation
main.go:3538:4: should replace i += 1 with i++
main.go:3544:6: should replace j += 1 with j++
main.go:3555:6: should replace k += 1 with k++
main.go:3563:4: should replace i += 1 with i++
main.go:3568:6: should replace j += 1 with j++
main.go:3589:4: should replace i += 1 with i++
main.go:3594:6: should replace j += 1 with j++
main.go:3611:4: should replace i += 1 with i++
main.go:3616:6: should replace j += 1 with j++
main.go:3645:6: don't use underscores in Go names; func paz_condensation should be pazCondensation
main.go:3673:4: should replace i += 1 with i++
main.go:3679:6: should replace j += 1 with j++
main.go:3690:6: should replace k += 1 with k++
main.go:3698:4: should replace i += 1 with i++
main.go:3703:6: should replace j += 1 with j++
main.go:3733:4: should replace i += 1 with i++
main.go:3738:6: should replace j += 1 with j++
main.go:3755:4: should replace i += 1 with i++
main.go:3760:6: should replace j += 1 with j++
main.go:3771:4: should replace i += 1 with i++
main.go:3775:5: should replace j += 1 with j++
main.go:3798:6: don't use underscores in Go names; func modal_condensation should be modalCondensation
main.go:3801:13: should omit type float64 from declaration of var traceM; it will be inferred from the right-hand side
main.go:3802:14: should omit type float64 from declaration of var traceMc; it will be inferred from the right-hand side
main.go:3811:4: should replace i += 1 with i++
main.go:3815:5: should replace j += 1 with j++
main.go:3825:4: should replace i += 1 with i++
main.go:3835:4: should replace i += 1 with i++
main.go:3840:6: should replace j += 1 with j++
main.go:3846:8: should replace k += 1 with k++
main.go:3859:4: should replace i += 1 with i++
main.go:3867:4: should replace i += 1 with i++
main.go:3872:6: should replace j += 1 with j++
main.go:3878:8: should replace k += 1 with k++
main.go:3891:4: should replace i += 1 with i++
main.go:3895:5: should replace j += 1 with j++
main.go:3904:4: should replace i += 1 with i++
main.go:3908:5: should replace j += 1 with j++
main.go:3933:407: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:3933:427: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:3933:447: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:3933:471: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:4043:6: don't use underscores in Go names; func parse_options should be parseOptions
main.go:4043:45: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:4043:61: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:4043:78: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:4043:96: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:4043:113: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:4043:131: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:4043:153: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:4043:168: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:4043:185: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:4043:203: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:4043:223: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:4043:245: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:4043:265: don't use underscores in Go names; func parameter write_matrix should be writeMatrix
main.go:4043:285: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:4043:303: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:4045:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4046:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4328:9: don't use underscores in Go names; func display_help should be displayHelp
main.go:4371:9: don't use underscores in Go names; func display_usage should be displayUsage
main.go:4384:6: don't use underscores in Go names; func display_version should be displayVersion
main.go:4400:6: don't use underscores in Go names; func display_version_about should be displayVersionAbout
main.go:4416:6: don't use underscores in Go names; func read_node_data should be readNodeData
main.go:4419:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4420:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4423:4: should replace i += 1 with i++
main.go:4450:6: don't use underscores in Go names; func read_frame_element_data should be readFrameElementData
main.go:4457:17: should drop = 0 from declaration of var epn0; it is the zero value
main.go:4458:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4459:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4463:4: should replace n += 1 with n++
main.go:4471:4: should replace i += 1 with i++
main.go:4484:4: should replace epn[N1[b]] += 1 with epn[N1[b]]++
main.go:4485:4: should replace epn[N2[b]] += 1 with epn[N2[b]]++
main.go:4554:4: should replace b += 1 with b++
main.go:4576:4: should replace n += 1 with n++
main.go:4582:5: should replace epn0 += 1 with epn0++
main.go:4598:6: don't use underscores in Go names; func read_run_data should be readRunData
main.go:4598:37: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:4598:67: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:4598:95: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:4598:161: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:4598:185: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:4598:249: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:4599:6: don't use underscores in Go names; var full_len should be fullLen
main.go:4599:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:4600:16: should drop = 0 from declaration of var len; it is the zero value
main.go:4602:6: don't use underscores in Go names; var base_file should be baseFile
main.go:4602:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:4603:6: don't use underscores in Go names; var mesh_file should be meshFile
main.go:4603:16: should omit type []byte from declaration of var mesh_file; it will be inferred from the right-hand side
main.go:4604:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4608:4: should replace len += 1 with len++
main.go:4616:4: should replace len -= 1 with len--
main.go:4625:3: should replace len += 1 with len++
main.go:4635:5: should replace len -= 1 with len--
main.go:4644:5: should replace i += 1 with i++
main.go:4647:5: should replace len += 1 with len++
main.go:4701:6: don't use underscores in Go names; func frame3dd_getline should be frame3ddGetline
main.go:4702:14: should drop = 0 from declaration of var c; it is the zero value
main.go:4703:14: should drop = 0 from declaration of var i; it is the zero value
main.go:4706:4: should replace lim -= 1 with lim--
main.go:4713:5: should replace i += 1 with i++
main.go:4730:6: don't use underscores in Go names; func temp_dir should be tempDir
main.go:4731:10: should omit type []byte from declaration of var tmp; it will be inferred from the right-hand side
main.go:4752:6: don't use underscores in Go names; func output_path should be outputPath
main.go:4752:58: don't use underscores in Go names; func parameter default_outdir should be defaultOutdir
main.go:4782:6: don't use underscores in Go names; func parse_input should be parseInput
main.go:4784:11: should omit type []byte from declaration of var line; it will be inferred from the right-hand side
main.go:4785:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4816:6: don't use underscores in Go names; func getline_no_comment should be getlineNoComment
main.go:4817:14: should drop = 0 from declaration of var c; it is the zero value
main.go:4818:14: should drop = 0 from declaration of var i; it is the zero value
main.go:4821:4: should replace lim -= 1 with lim--
main.go:4829:6: should replace i += 1 with i++
main.go:4834:6: should replace i += 1 with i++
main.go:4843:4: should replace lim -= 1 with lim--
main.go:4862:6: don't use underscores in Go names; func read_reaction_data should be readReactionData
main.go:4866:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4867:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4870:4: should replace i += 1 with i++
main.go:4895:4: should replace i += 1 with i++
main.go:4904:6: should replace l -= 1 with l--
main.go:4926:6: should replace l -= 1 with l--
main.go:4942:4: should replace i += 1 with i++
main.go:4959:4: should replace i += 1 with i++
main.go:5032:6: don't use underscores in Go names; func read_and_assemble_loads should be readAndAssembleLoads
main.go:5032:400: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:5032:420: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:5032:538: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:5032:562: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:5047:20: should drop = 0 from declaration of var Mx1; it is the zero value
main.go:5048:20: should drop = 0 from declaration of var My1; it is the zero value
main.go:5049:20: should drop = 0 from declaration of var Mz1; it is the zero value
main.go:5053:20: should drop = 0 from declaration of var Mx2; it is the zero value
main.go:5054:20: should drop = 0 from declaration of var My2; it is the zero value
main.go:5055:20: should drop = 0 from declaration of var Mz2; it is the zero value
main.go:5076:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:5077:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5080:4: should replace j += 1 with j++
main.go:5088:4: should replace j += 1 with j++
main.go:5092:5: should replace lc += 1 with lc++
main.go:5108:4: should replace i += 1 with i++
main.go:5112:5: should replace n += 1 with n++
main.go:5116:6: should replace lc += 1 with lc++
main.go:5133:4: should replace i += 1 with i++
main.go:5137:5: should replace lc += 1 with lc++
main.go:5146:4: should replace i += 1 with i++
main.go:5150:5: should replace j += 1 with j++
main.go:5159:4: should replace lc += 1 with lc++
main.go:5176:6: should replace n += 1 with n++
main.go:5207:6: should replace i += 1 with i++
main.go:5221:8: should replace l -= 1 with l--
main.go:5254:6: should replace i += 1 with i++
main.go:5269:8: should replace l += 1 with l++
main.go:5350:6: should replace i += 1 with i++
main.go:5365:8: should replace l += 1 with l++
main.go:5503:6: should replace i += 1 with i++
main.go:5518:8: should replace l += 1 with l++
main.go:5602:6: should replace i += 1 with i++
main.go:5617:8: should replace l += 1 with l++
main.go:5683:6: should replace n += 1 with n++
main.go:5690:8: should replace i += 1 with i++
main.go:5698:8: should replace i += 1 with i++
main.go:5706:8: should replace i += 1 with i++
main.go:5714:8: should replace i += 1 with i++
main.go:5733:6: should replace i += 1 with i++
main.go:5742:8: should replace l -= 1 with l--
main.go:5767:6: don't use underscores in Go names; func read_mass_data should be readMassData
main.go:5767:38: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:5767:206: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:5767:228: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:5767:276: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:5767:304: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:5767:334: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:5767:369: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:5767:389: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:5767:456: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:5774:6: don't use underscores in Go names; var full_len should be fullLen
main.go:5774:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:5775:16: should drop = 0 from declaration of var len; it is the zero value
main.go:5776:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:5777:6: don't use underscores in Go names; var base_file should be baseFile
main.go:5777:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:5778:6: don't use underscores in Go names; var mode_file should be modeFile
main.go:5778:16: should omit type []byte from declaration of var mode_file; it will be inferred from the right-hand side
main.go:5779:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5855:4: should replace j += 1 with j++
main.go:5891:4: should replace m += 1 with m++
main.go:5911:4: should replace b += 1 with b++
main.go:5920:4: should replace m += 1 with m++
main.go:5952:4: should replace m += 1 with m++
main.go:5960:4: should replace m += 1 with m++
main.go:5984:4: should replace len += 1 with len++
main.go:5992:4: should replace len -= 1 with len--
main.go:6001:3: should replace len += 1 with len++
main.go:6007:5: should replace len -= 1 with len--
main.go:6016:5: should replace i += 1 with i++
main.go:6019:5: should replace len += 1 with len++
main.go:6034:6: don't use underscores in Go names; func read_condensation_data should be readCondensationData
main.go:6034:99: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:6039:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:6040:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6146:4: should replace i += 1 with i++
main.go:6162:4: should replace i += 1 with i++
main.go:6166:5: should replace j += 1 with j++
main.go:6171:7: should replace (Cdof[0]) += 1 with (Cdof[0])++
main.go:6181:4: should replace i += 1 with i++
main.go:6186:6: should replace j += 1 with j++
main.go:6192:8: should replace k += 1 with k++
main.go:6202:4: should replace i += 1 with i++
main.go:6228:6: don't use underscores in Go names; func write_input_data should be writeInputData
main.go:6237:4: should replace i += 1 with i++
main.go:6252:4: should replace i += 1 with i++
main.go:6263:4: should replace i += 1 with i++
main.go:6274:4: should replace i += 1 with i++
main.go:6287:4: should replace i += 1 with i++
main.go:6300:4: should replace i += 1 with i++
main.go:6312:4: should replace i += 1 with i++
main.go:6331:4: should replace lc += 1 with lc++
main.go:6367:7: should replace j += 1 with j++
main.go:6375:10: should replace i -= 1 with i--
main.go:6392:7: should replace n += 1 with n++
main.go:6398:9: should replace i += 1 with i++
main.go:6414:7: should replace n += 1 with n++
main.go:6420:9: should replace i += 1 with i++
main.go:6430:9: should replace i += 1 with i++
main.go:6440:9: should replace i += 1 with i++
main.go:6456:7: should replace n += 1 with n++
main.go:6462:9: should replace i += 1 with i++
main.go:6479:7: should replace n += 1 with n++
main.go:6486:9: should replace i += 1 with i++
main.go:6503:7: should replace j += 1 with j++
main.go:6511:10: should replace i -= 1 with i--
main.go:6539:6: don't use underscores in Go names; func write_static_results should be writeStaticResults
main.go:6539:189: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:6556:4: should replace j += 1 with j++
main.go:6562:6: should replace i -= 1 with i--
main.go:6572:7: should replace i -= 1 with i--
main.go:6592:4: should replace n += 1 with n++
main.go:6612:6: should replace i += 1 with i++
main.go:6640:6: should replace i += 1 with i++
main.go:6658:4: should replace j += 1 with j++
main.go:6666:7: should replace i -= 1 with i--
main.go:6691:6: don't use underscores in Go names; func CSV_filename should be CSVFilename
main.go:6691:19: don't use underscores in Go names; func parameter CSV_file should be CSVFile
main.go:6691:47: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6704:5: should replace i += 1 with i++
main.go:6708:5: should replace j += 1 with j++
main.go:6714:3: should replace j += 1 with j++
main.go:6732:6: don't use underscores in Go names; func write_static_csv should be writeStaticCsv
main.go:6732:23: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6737:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:6738:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:6738:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:6740:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6765:5: should replace i += 1 with i++
main.go:6785:4: should replace j += 1 with j++
main.go:6791:6: should replace i -= 1 with i--
main.go:6810:4: should replace n += 1 with n++
main.go:6821:6: should replace i += 1 with i++
main.go:6840:6: should replace i += 1 with i++
main.go:6858:4: should replace j += 1 with j++
main.go:6865:6: should replace i -= 1 with i--
main.go:6911:6: don't use underscores in Go names; func write_static_mfile should be writeStaticMfile
main.go:6911:25: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6917:6: don't use underscores in Go names; var M_file should be MFile
main.go:6917:13: should omit type []byte from declaration of var M_file; it will be inferred from the right-hand side
main.go:6919:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6931:5: should replace i += 1 with i++
main.go:6935:5: should replace j += 1 with j++
main.go:6941:3: should replace j += 1 with j++
main.go:6982:4: should replace j += 1 with j++
main.go:6987:6: should replace i -= 1 with i--
main.go:7011:4: should replace n += 1 with n++
main.go:7021:6: should replace i += 1 with i++
main.go:7038:6: should replace i += 1 with i++
main.go:7060:4: should replace j += 1 with j++
main.go:7066:6: should replace i -= 1 with i--
main.go:7170:6: don't use underscores in Go names; func peak_internal_forces should be peakInternalForces
main.go:7204:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:7205:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:7206:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:7207:6: don't use underscores in Go names; var wx_ should be wx
main.go:7207:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:7208:6: don't use underscores in Go names; var wy_ should be wy
main.go:7208:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:7209:6: don't use underscores in Go names; var wz_ should be wz
main.go:7209:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:7210:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:7211:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:7212:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:7213:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:7214:6: don't use underscores in Go names; var tx_ should be tx
main.go:7214:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:7217:6: don't use underscores in Go names; var Nx_ should be Nx
main.go:7219:6: don't use underscores in Go names; var Vy_ should be Vy
main.go:7221:6: don't use underscores in Go names; var Vz_ should be Vz
main.go:7223:6: don't use underscores in Go names; var Tx_ should be Tx
main.go:7225:6: don't use underscores in Go names; var My_ should be My
main.go:7227:6: don't use underscores in Go names; var Mz_ should be Mz
main.go:7229:6: don't use underscores in Go names; var Sy_ should be Sy
main.go:7231:6: don't use underscores in Go names; var Sz_ should be Sz
main.go:7239:9: should omit type int from declaration of var nx; it will be inferred from the right-hand side
main.go:7240:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:7241:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:7242:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:7253:4: should replace m += 1 with m++
main.go:7308:4: should replace m += 1 with m++
main.go:7320:6: should replace n += 1 with n++
main.go:7328:8: should replace cU += 1 with cU++
main.go:7418:6: should replace i += 1 with i++
main.go:7433:8: should replace n += 1 with n++
main.go:7439:11: should replace cW += 1 with cW++
main.go:7477:8: should replace n += 1 with n++
main.go:7483:11: should replace cP += 1 with cP++
main.go:7524:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7531:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7538:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7545:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7552:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7559:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7566:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7573:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7580:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7587:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7594:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7601:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7615:4: should replace m += 1 with m++
main.go:7626:4: should replace m += 1 with m++
main.go:7717:6: don't use underscores in Go names; func write_internal_forces should be writeInternalForces
main.go:7717:28: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:7751:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:7752:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:7753:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:7754:6: don't use underscores in Go names; var wx_ should be wx
main.go:7754:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:7755:6: don't use underscores in Go names; var wy_ should be wy
main.go:7755:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:7756:6: don't use underscores in Go names; var wz_ should be wz
main.go:7756:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:7757:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:7758:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:7759:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:7760:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:7761:6: don't use underscores in Go names; var tx_ should be tx
main.go:7761:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:7764:6: don't use underscores in Go names; var dx_ should be dx
main.go:7804:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:7805:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:7806:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:7813:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:7814:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:7814:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:7815:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7816:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:7860:4: should replace m += 1 with m++
main.go:7884:6: should replace i += 1 with i++
main.go:7900:6: should replace n += 1 with n++
main.go:7908:8: should replace cU += 1 with cU++
main.go:7923:6: should replace i += 1 with i++
main.go:7937:8: should replace n += 1 with n++
main.go:7943:11: should replace cW += 1 with cW++
main.go:7984:8: should replace n += 1 with n++
main.go:7990:11: should replace cP += 1 with cP++
main.go:8012:6: should replace i += 1 with i++
main.go:8024:6: should replace i += 1 with i++
main.go:8036:6: should replace i += 1 with i++
main.go:8066:6: should replace i += 1 with i++
main.go:8077:6: should replace i += 1 with i++
main.go:8086:6: should replace i += 1 with i++
main.go:8097:6: should replace i += 1 with i++
main.go:8106:6: should replace i += 1 with i++
main.go:8118:6: should replace i += 1 with i++
main.go:8128:7: should replace i += 1 with i++
main.go:8139:6: should replace i += 1 with i++
main.go:8151:6: should replace i += 1 with i++
main.go:8256:6: should replace i += 1 with i++
main.go:8262:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8269:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8276:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8283:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8290:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8297:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8304:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8311:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8318:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8325:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8332:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8339:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8347:6: should replace i += 1 with i++
main.go:8353:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8360:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8367:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8374:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8381:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8388:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8395:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8402:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8409:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8416:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8423:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8430:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8442:6: should replace i += 1 with i++
main.go:8480:6: don't use underscores in Go names; func write_modal_results should be writeModalResults
main.go:8480:119: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:8480:139: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:8485:6: don't use underscores in Go names; var num_modes should be numModes
main.go:8498:4: should replace i += 1 with i++
main.go:8544:4: should replace j += 1 with j++
main.go:8551:6: should replace i += 1 with i++
main.go:8570:4: should replace m += 1 with m++
main.go:8576:6: should replace i += 1 with i++
main.go:8585:6: should replace i += 1 with i++
main.go:8594:6: should replace i += 1 with i++
main.go:8608:6: should replace j += 1 with j++
main.go:8614:8: should replace i -= 1 with i--
main.go:8679:8: don't use underscores in Go names; func static_mesh should be staticMesh
main.go:8679:20: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:8679:213: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:8679:235: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:8680:26: should drop = nil from declaration of var fpif; it is the zero value
main.go:8681:25: should drop = nil from declaration of var fpm; it is the zero value
main.go:8685:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:8686:13: should omit type []byte from declaration of var meshfl; it will be inferred from the right-hand side
main.go:8689:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:8691:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:8702:14: should drop = 0 from declaration of var j; it is the zero value
main.go:8703:14: should drop = 0 from declaration of var m; it is the zero value
main.go:8704:14: should drop = 0 from declaration of var n; it is the zero value
main.go:8705:14: should drop = 0 from declaration of var X; it is the zero value
main.go:8706:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:8707:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:8708:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:8713:4: should replace j += 1 with j++
main.go:8774:5: should replace j += 1 with j++
main.go:8783:5: should replace m += 1 with m++
main.go:8845:5: should replace m += 1 with m++
main.go:8889:4: should replace m += 1 with m++
main.go:8935:6: don't use underscores in Go names; func modal_mesh should be modalMesh
main.go:8935:17: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:8935:232: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:8935:253: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:8948:14: should drop = 0 from declaration of var X; it is the zero value
main.go:8949:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:8950:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:8951:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:8954:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:8955:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:8962:4: should replace i += 1 with i++
main.go:8999:4: should replace m += 1 with m++
main.go:9020:6: should replace i += 1 with i++
main.go:9029:6: should replace i += 1 with i++
main.go:9038:6: should replace i += 1 with i++
main.go:9050:6: should replace i += 1 with i++
main.go:9059:6: should replace n += 1 with n++
main.go:9069:6: should replace j += 1 with j++
main.go:9150:14: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:9150:226: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:9150:247: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:9152:6: don't use underscores in Go names; var x_min should be xMin
main.go:9152:12: should omit type float32 from declaration of var x_min; it will be inferred from the right-hand side
main.go:9153:6: don't use underscores in Go names; var x_max should be xMax
main.go:9153:12: should omit type float32 from declaration of var x_max; it will be inferred from the right-hand side
main.go:9154:6: don't use underscores in Go names; var y_min should be yMin
main.go:9154:12: should omit type float32 from declaration of var y_min; it will be inferred from the right-hand side
main.go:9155:6: don't use underscores in Go names; var y_max should be yMax
main.go:9155:12: should omit type float32 from declaration of var y_max; it will be inferred from the right-hand side
main.go:9156:6: don't use underscores in Go names; var z_min should be zMin
main.go:9156:12: should omit type float32 from declaration of var z_min; it will be inferred from the right-hand side
main.go:9157:6: don't use underscores in Go names; var z_max should be zMax
main.go:9157:12: should omit type float32 from declaration of var z_max; it will be inferred from the right-hand side
main.go:9158:11: should omit type float32 from declaration of var Dxyz; it will be inferred from the right-hand side
main.go:9159:6: don't use underscores in Go names; var rot_x_init should be rotXInit
main.go:9159:17: should omit type float32 from declaration of var rot_x_init; it will be inferred from the right-hand side
main.go:9160:6: don't use underscores in Go names; var rot_x_final should be rotXFinal
main.go:9160:18: should omit type float32 from declaration of var rot_x_final; it will be inferred from the right-hand side
main.go:9161:6: don't use underscores in Go names; var rot_z_init should be rotZInit
main.go:9161:17: should omit type float32 from declaration of var rot_z_init; it will be inferred from the right-hand side
main.go:9162:6: don't use underscores in Go names; var rot_z_final should be rotZFinal
main.go:9162:18: should omit type float32 from declaration of var rot_z_final; it will be inferred from the right-hand side
main.go:9163:6: don't use underscores in Go names; var zoom_init should be zoomInit
main.go:9163:16: should omit type float32 from declaration of var zoom_init; it will be inferred from the right-hand side
main.go:9164:6: don't use underscores in Go names; var zoom_final should be zoomFinal
main.go:9164:17: should omit type float32 from declaration of var zoom_final; it will be inferred from the right-hand side
main.go:9165:13: should omit type float32 from declaration of var frames; it will be inferred from the right-hand side
main.go:9166:9: should omit type float64 from declaration of var ex; it will be inferred from the right-hand side
main.go:9173:14: should drop = 0 from declaration of var X; it is the zero value
main.go:9174:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:9175:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:9177:13: should omit type int from declaration of var CYCLES; it will be inferred from the right-hand side
main.go:9178:6: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9178:25: should drop = 0 from declaration of var frame_number; it is the zero value
main.go:9179:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:9180:6: don't use underscores in Go names; var total_frames should be totalFrames
main.go:9184:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:9185:14: should omit type []byte from declaration of var framefl; it will be inferred from the right-hand side
main.go:9186:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9189:4: should replace j += 1 with j++
main.go:9305:6: should replace c += 1 with c++
main.go:9310:8: should replace fr += 1 with fr++
main.go:9314:9: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9314:9: should replace frame_number += 1 with frame_number++
main.go:9337:8: should replace fr -= 1 with fr--
main.go:9341:9: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9341:9: should replace frame_number += 1 with frame_number++
main.go:9367:5: should replace i += 1 with i++
main.go:9382:6: should replace fr += 1 with fr++
main.go:9403:8: should replace j += 1 with j++
main.go:9412:8: should replace n += 1 with n++
main.go:9423:5: should replace i += 1 with i++
main.go:9443:6: don't use underscores in Go names; func cubic_bent_beam should be cubicBentBeam
main.go:9477:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9557:6: don't use underscores in Go names; func force_bent_beam should be forceBentBeam
main.go:9586:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:9602:7: should replace n += 1 with n++
main.go:9631:6: don't use underscores in Go names; func my_itoa should be myItoa
main.go:9646:5: should replace i += 1 with i++
main.go:9660:5: should replace i += 1 with i++
main.go:9667:4: should replace i += 1 with i++
main.go:9676:5: should replace j += 1 with j++
main.go:9682:3: should replace j -= 1 with j--
main.go:9691:5: should replace i += 1 with i++
main.go:9695:5: should replace j -= 1 with j--
main.go:9713:8: don't use underscores in Go names; func get_file_ext should be getFileExt
main.go:9714:14: should drop = 0 from declaration of var i; it is the zero value
main.go:9715:6: don't use underscores in Go names; var full_len should be fullLen
main.go:9715:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:9716:16: should drop = 0 from declaration of var len; it is the zero value
main.go:9719:4: should replace len += 1 with len++
main.go:9727:4: should replace len -= 1 with len--
main.go:9736:3: should replace len += 1 with len++
main.go:9743:5: should replace i += 1 with i++
main.go:9747:5: should replace len += 1 with len++
main.go:9768:4: should replace i += 1 with i++
main.go:9779:33: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:10120:6: don't use underscores in Go names; func coord_trans should be coordTrans
main.go:10218:4: should replace i += 1 with i++
main.go:10222:5: should replace j += 1 with j++
main.go:10246:4: should replace i += 1 with i++
main.go:10262:4: should replace j += 1 with j++
main.go:10266:5: should replace i += 1 with i++
main.go:10270:6: should replace k += 1 with k++
main.go:10280:4: should replace i += 1 with i++
main.go:10284:5: should replace j += 1 with j++
main.go:10300:4: should replace j += 1 with j++
main.go:10304:5: should replace i += 1 with i++
main.go:10308:6: should replace k += 1 with k++
main.go:10376:6: don't use underscores in Go names; var km_old should be kmOld
main.go:10378:6: don't use underscores in Go names; var w_old should be wOld
main.go:10378:22: should drop = 0 from declaration of var w_old; it is the zero value
main.go:10379:14: should drop = 0 from declaration of var i; it is the zero value
main.go:10380:14: should drop = 0 from declaration of var j; it is the zero value
main.go:10381:14: should drop = 0 from declaration of var k; it is the zero value
main.go:10383:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:10385:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:10401:4: should replace i += 1 with i++
main.go:10407:6: should replace j += 1 with j++
main.go:10440:4: should replace i += 1 with i++
main.go:10444:5: should replace j += 1 with j++
main.go:10461:10: if block ends with a return statement, so drop this else and outdent its block
main.go:10467:4: should replace i += 1 with i++
main.go:10471:5: should replace j += 1 with j++
main.go:10481:4: should replace i += 1 with i++
main.go:10495:4: should replace k += 1 with k++
main.go:10501:6: should replace i += 1 with i++
main.go:10508:9: should replace j += 1 with j++
main.go:10527:7: should replace j += 1 with j++
main.go:10543:4: should replace k += 1 with k++
main.go:10600:6: should replace k += 1 with k++
main.go:10625:8: should replace i += 1 with i++
main.go:10645:5: should replace (iter[0]) += 1 with (iter[0])++
main.go:10664:4: should replace k += 1 with k++
main.go:10678:5: should replace k += 1 with k++
main.go:10688:4: should replace i += 1 with i++
main.go:10692:5: should replace j += 1 with j++
main.go:10737:20: should drop = 0 from declaration of var tol; it is the zero value
main.go:10772:4: should replace i += 1 with i++
main.go:10776:5: should replace j += 1 with j++
main.go:10792:4: should replace d += 1 with d++
main.go:10800:4: should replace iter += 1 with iter++
main.go:10807:6: should replace d += 1 with d++
main.go:10812:8: should replace i += 1 with i++
main.go:10833:11: should replace k += 1 with k++
main.go:10851:4: should replace j += 1 with j++
main.go:10857:6: should replace i += 1 with i++
main.go:10867:4: should replace j += 1 with j++
main.go:10893:4: should replace k += 1 with k++
main.go:10907:4: should replace k += 1 with k++
main.go:10956:6: don't use underscores in Go names; var d_min should be dMin
main.go:10956:22: should drop = 0 from declaration of var d_min; it is the zero value
main.go:10957:6: don't use underscores in Go names; var d_max should be dMax
main.go:10957:22: should drop = 0 from declaration of var d_max; it is the zero value
main.go:10958:6: don't use underscores in Go names; var d_old should be dOld
main.go:10958:22: should drop = 0 from declaration of var d_old; it is the zero value
main.go:10965:22: should drop = 0 from declaration of var RQold; it is the zero value
main.go:10967:6: don't use underscores in Go names; var i_ex should be iEx
main.go:10967:11: should omit type int from declaration of var i_ex; it will be inferred from the right-hand side
main.go:10969:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:10973:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:10982:10: if block ends with a return statement, so drop this else and outdent its block
main.go:10988:4: should replace i += 1 with i++
main.go:10992:5: should replace j += 1 with j++
main.go:11007:4: should replace j += 1 with j++
main.go:11012:6: should replace i += 1 with i++
main.go:11039:6: should replace i += 1 with i++
main.go:11050:4: should replace i += 1 with i++
main.go:11068:4: should replace i += 1 with i++
main.go:11078:4: should replace k += 1 with k++
main.go:11084:6: should replace i += 1 with i++
main.go:11100:6: should replace i += 1 with i++
main.go:11108:6: should replace j += 1 with j++
main.go:11113:8: should replace i += 1 with i++
main.go:11124:6: should replace j += 1 with j++
main.go:11128:7: should replace i += 1 with i++
main.go:11138:6: should replace i += 1 with i++
main.go:11149:8: should replace i += 1 with i++
main.go:11155:10: should replace j += 1 with j++
main.go:11166:8: should replace i += 1 with i++
main.go:11174:8: should replace j += 1 with j++
main.go:11179:10: should replace i += 1 with i++
main.go:11190:8: should replace j += 1 with j++
main.go:11194:9: should replace i += 1 with i++
main.go:11204:8: should replace i += 1 with i++
main.go:11213:7: should replace (iter[0]) += 1 with (iter[0])++
main.go:11228:6: should replace i += 1 with i++
main.go:11265:8: should omit type float64 from declaration of var p; it will be inferred from the right-hand side
main.go:11268:4: should replace i += 1 with i++
main.go:11275:6: should replace j += 1 with j++
main.go:11291:7: should replace j += 1 with j++
main.go:11321:6: don't use underscores in Go names; var ws_shift should be wsShift
main.go:11323:15: should drop = 0 from declaration of var ok; it is the zero value
main.go:11331:10: if block ends with a return statement, so drop this else and outdent its block
main.go:11338:4: should replace i += 1 with i++
main.go:11342:5: should replace j += 1 with j++
main.go:11364:4: should replace i += 1 with i++
main.go:11368:5: should replace j += 1 with j++
main.go:11382:85: don't use underscores in Go names; func check_non_negative should be checkNonNegative
main.go:11445:11: should omit type int from declaration of var icol; it will be inferred from the right-hand side
main.go:11446:11: should omit type int from declaration of var irow; it will be inferred from the right-hand side
main.go:11460:4: should replace j += 1 with j++
main.go:11468:4: should replace i += 1 with i++
main.go:11474:6: should replace j += 1 with j++
main.go:11479:8: should replace k += 1 with k++
main.go:11498:5: should replace (ipiv[icol]) += 1 with (ipiv[icol])++
main.go:11504:7: should replace l += 1 with l++
main.go:11514:7: should replace l += 1 with l++
main.go:11532:6: should replace l += 1 with l++
main.go:11540:6: should replace l += 1 with l++
main.go:11548:6: should replace ll += 1 with ll++
main.go:11556:9: should replace l += 1 with l++
main.go:11564:9: should replace l += 1 with l++
main.go:11577:4: should replace l -= 1 with l--
main.go:11582:6: should replace k += 1 with k++
main.go:11617:6: don't use underscores in Go names; func lu_dcmp should be luDcmp
main.go:11626:5: should replace k += 1 with k++
main.go:11640:7: should replace i += 1 with i++
main.go:11646:9: should replace j += 1 with j++
main.go:11660:5: should replace k += 1 with k++
main.go:11664:6: should replace i += 1 with i++
main.go:11673:5: should replace j -= 1 with j--
main.go:11677:6: should replace i += 1 with i++
main.go:11686:5: should replace i += 1 with i++
main.go:11722:6: don't use underscores in Go names; func ldl_dcmp should be ldlDcmp
main.go:11731:5: should replace j += 1 with j++
main.go:11738:7: should replace i += 1 with i++
main.go:11743:9: should replace m += 1 with m++
main.go:11753:7: should replace i += 1 with i++
main.go:11759:9: should replace k += 1 with k++
main.go:11770:7: should replace i += 1 with i++
main.go:11778:7: should replace i += 1 with i++
main.go:11791:7: should replace (pd[0]) -= 1 with (pd[0])--
main.go:11801:5: should replace i += 1 with i++
main.go:11807:7: should replace j += 1 with j++
main.go:11817:5: should replace i += 1 with i++
main.go:11825:5: should replace i -= 1 with i--
main.go:11829:6: should replace j += 1 with j++
main.go:11855:6: don't use underscores in Go names; func ldl_mprove should be ldlMprove
main.go:11855:78: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:11858:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:11858:20: should omit type float64 from declaration of var rms_resid_new; it will be inferred from the right-hand side
main.go:11865:4: should replace i += 1 with i++
main.go:11871:6: should replace j += 1 with j++
main.go:11887:4: should replace i += 1 with i++
main.go:11890:4: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:11898:5: should replace i += 1 with i++
main.go:11939:6: don't use underscores in Go names; func ldl_dcmp_pm should be ldlDcmpPm
main.go:11948:5: should replace j += 1 with j++
main.go:11957:8: should replace i += 1 with i++
main.go:11962:10: should replace m += 1 with m++
main.go:11972:8: should replace i += 1 with i++
main.go:11979:11: should replace k += 1 with k++
main.go:11993:8: should replace i += 1 with i++
main.go:12003:8: should replace i += 1 with i++
main.go:12018:8: should replace (pd[0]) -= 1 with (pd[0])--
main.go:12029:5: should replace i += 1 with i++
main.go:12036:8: should replace j += 1 with j++
main.go:12049:5: should replace i += 1 with i++
main.go:12054:7: should replace j += 1 with j++
main.go:12066:5: should replace i += 1 with i++
main.go:12076:5: should replace i -= 1 with i--
main.go:12081:7: should replace j += 1 with j++
main.go:12093:5: should replace i += 1 with i++
main.go:12101:8: should replace j += 1 with j++
main.go:12150:6: don't use underscores in Go names; func ldl_mprove_pm should be ldlMprovePm
main.go:12150:112: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:12154:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12154:30: should drop = 0 from declaration of var rms_resid_new; it is the zero value
main.go:12162:4: should replace i += 1 with i++
main.go:12170:4: should replace i += 1 with i++
main.go:12177:7: should replace j += 1 with j++
main.go:12191:7: should replace j += 1 with j++
main.go:12206:4: should replace i += 1 with i++
main.go:12210:5: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12219:5: should replace i += 1 with i++
main.go:12247:6: don't use underscores in Go names; func PSB_update should be PSBUpdate
main.go:12250:20: should drop = 0 from declaration of var dtd; it is the zero value
main.go:12251:20: should drop = 0 from declaration of var ftd; it is the zero value
main.go:12252:21: should drop = 0 from declaration of var dtd2; it is the zero value
main.go:12255:4: should replace i += 1 with i++
main.go:12264:4: should replace i += 1 with i++
main.go:12272:4: should replace i += 1 with i++
main.go:12276:5: should replace j += 1 with j++
main.go:12295:6: don't use underscores in Go names; func pseudo_inv should be pseudoInv
main.go:12302:6: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:12302:23: should drop = 0 from declaration of var tr_AtA; it is the zero value
main.go:12318:4: should replace i += 1 with i++
main.go:12335:6: should replace j += 1 with j++
main.go:12352:4: should replace i += 1 with i++
main.go:12357:6: should replace j += 1 with j++
main.go:12363:8: should replace k += 1 with k++
main.go:12376:4: should replace i += 1 with i++
main.go:12380:5: should replace j += 1 with j++
main.go:12397:4: should replace i += 1 with i++
main.go:12400:4: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:12405:4: should replace i += 1 with i++
main.go:12414:4: should replace j += 1 with j++
main.go:12419:6: should replace k += 1 with k++
main.go:12445:6: should replace k += 1 with k++
main.go:12455:4: should replace i += 1 with i++
main.go:12459:5: should replace j += 1 with j++
main.go:12475:4: should replace i += 1 with i++
main.go:12480:6: should replace j += 1 with j++
main.go:12486:8: should replace k += 1 with k++
main.go:12514:4: should replace i += 1 with i++
main.go:12522:4: should replace i += 1 with i++
main.go:12527:6: should replace k += 1 with k++
main.go:12551:4: should replace i += 1 with i++
main.go:12555:5: should replace k += 1 with k++
main.go:12564:4: should replace i += 1 with i++
main.go:12568:5: should replace k += 1 with k++
main.go:12572:6: should replace j += 1 with j++
main.go:12604:4: should replace i += 1 with i++
main.go:12624:4: should replace j += 1 with j++
main.go:12629:6: should replace k += 1 with k++
main.go:12656:6: should replace i += 1 with i++
main.go:12691:4: should replace i += 1 with i++
main.go:12707:4: should replace j += 1 with j++
main.go:12712:6: should replace k += 1 with k++
main.go:12739:6: should replace i += 1 with i++
main.go:12745:8: should replace k += 1 with k++
main.go:12764:9: don't use underscores in Go names; func coord_xfrm should be coordXfrm
main.go:12770:4: should replace i += 1 with i++
main.go:12795:4: should replace i += 1 with i++
main.go:12799:5: should replace j += 1 with j++
main.go:12808:4: should replace i += 1 with i++
main.go:12812:5: should replace j += 1 with j++
main.go:12821:4: should replace i += 1 with i++
main.go:12826:6: should replace j += 1 with j++
main.go:12831:8: should replace k += 1 with k++
main.go:12847:4: should replace i += 1 with i++
main.go:12851:5: should replace j += 1 with j++
main.go:12855:6: should replace k += 1 with k++
main.go:12865:4: should replace i += 1 with i++
main.go:12869:5: should replace j += 1 with j++
main.go:12893:21: should drop = 0 from declaration of var xtAy; it is the zero value
main.go:12898:4: should replace i += 1 with i++
main.go:12904:6: should replace j += 1 with j++
main.go:12918:4: should replace i += 1 with i++
main.go:12955:4: should replace i += 1 with i++
main.go:12972:6: should replace j += 1 with j++
main.go:12990:4: should replace j += 1 with j++
main.go:12995:6: should replace k += 1 with k++
main.go:13023:6: should replace k += 1 with k++
main.go:13033:4: should replace i += 1 with i++
main.go:13037:5: should replace j += 1 with j++
main.go:13053:4: should replace i += 1 with i++
main.go:13058:6: should replace j += 1 with j++
main.go:13064:8: should replace k += 1 with k++
main.go:13077:4: should replace i += 1 with i++
main.go:13082:6: should replace j += 1 with j++
main.go:13088:8: should replace k += 1 with k++
main.go:13101:4: should replace i += 1 with i++
main.go:13105:5: should replace j += 1 with j++
main.go:13132:9: don't use underscores in Go names; func relative_norm should be relativeNorm
main.go:13133:19: should drop = 0 from declaration of var nN; it is the zero value
main.go:13134:19: should drop = 0 from declaration of var nD; it is the zero value
main.go:13138:4: should replace i += 1 with i++
main.go:13146:4: should replace i += 1 with i++
main.go:13165:4: should replace p += 1 with p++
main.go:13182:6: should replace k += 1 with k++
main.go:13344:17: should omit type []byte from declaration of var pathToFile; it will be inferred from the right-hand side
main.go:13345:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:13391:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13392:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:13395:4: should replace lim -= 1 with lim--
main.go:13402:5: should replace i += 1 with i++
main.go:13408:3: should replace i += 1 with i++
main.go:13420:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13421:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:13424:4: should replace lim -= 1 with lim--
main.go:13434:4: should replace lim -= 1 with lim--
main.go:13441:5: should replace i += 1 with i++
main.go:13447:3: should replace i += 1 with i++
main.go:13460:32: don't use underscores in Go names; func parameter head_lines should be headLines
main.go:13460:48: don't use underscores in Go names; func parameter start_chnl should be startChnl
main.go:13460:64: don't use underscores in Go names; func parameter stop_chnl should be stopChnl
main.go:13461:19: should drop = 0 from declaration of var points; it is the zero value
main.go:13464:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:13465:6: don't use underscores in Go names; var data_value should be dataValue
main.go:13469:4: should replace i += 1 with i++
main.go:13483:6: should replace chn += 1 with chn++
main.go:13489:8: should replace points += 1 with points++
main.go:13518:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13519:14: should drop = 0 from declaration of var i; it is the zero value
main.go:13522:4: should replace lim -= 1 with lim--
main.go:13529:5: should replace i += 1 with i++
main.go:13535:3: should replace i += 1 with i++
main.go:13550:11: should omit type []byte from declaration of var temp; it will be inferred from the right-hand side
main.go:13551:6: don't use underscores in Go names; var t_tm should be tTm
main.go:13552:6: don't use underscores in Go names; var t_time should be tTime
main.go:13571:6: don't use underscores in Go names; var line_length should be lineLength
main.go:13571:18: should omit type int from declaration of var line_length; it will be inferred from the right-hand side
main.go:13572:6: don't use underscores in Go names; var percent_done should be percentDone
main.go:13577:4: should replace k += 1 with k++
main.go:13585:4: should replace k += 1 with k++
main.go:13593:4: should replace k += 1 with k++
main.go:13609:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:13615:6: don't use underscores in Go names; type ptrdiff_t should be ptrdiffT
main.go:13616:6: don't use underscores in Go names; type max_align_t should be maxAlignT
main.go:13617:2: don't use underscores in Go names; struct field __clang_max_align_nonce1 should be _ClangMaxAlignNonce1
main.go:13618:2: don't use underscores in Go names; struct field __clang_max_align_nonce2 should be _ClangMaxAlignNonce2
main.go:13627:14: don't use underscores in Go names; func parameter error_text should be errorText
main.go:13693:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13694:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13710:4: should replace i += 1 with i++
main.go:13723:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13724:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13740:4: should replace i += 1 with i++
main.go:13753:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13754:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13770:4: should replace i += 1 with i++
main.go:13784:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13785:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13799:5: should replace i += 1 with i++
main.go:13803:5: should replace j += 1 with j++
main.go:13816:6: don't use underscores in Go names; func convert_matrix should be convertMatrix
main.go:13819:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13820:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13835:5: should replace i += 1 with i++
main.go:13839:5: should replace j += 1 with j++
main.go:13852:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13853:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13854:11: should omit type int32 from declaration of var ndep; it will be inferred from the right-hand side
main.go:13876:4: should replace j += 1 with j++
main.go:13884:4: should replace i += 1 with i++
main.go:13891:6: should replace j += 1 with j++
main.go:13904:6: don't use underscores in Go names; func free_vector should be freeVector
main.go:13910:6: don't use underscores in Go names; func free_ivector should be freeIvector
main.go:13916:6: don't use underscores in Go names; func free_cvector should be freeCvector
main.go:13922:6: don't use underscores in Go names; func free_lvector should be freeLvector
main.go:13928:6: don't use underscores in Go names; func free_dvector should be freeDvector
main.go:13934:6: don't use underscores in Go names; func free_matrix should be freeMatrix
main.go:13941:6: don't use underscores in Go names; func free_dmatrix should be freeDmatrix
main.go:13948:6: don't use underscores in Go names; func free_imatrix should be freeImatrix
main.go:13955:6: don't use underscores in Go names; func free_subMatrix should be freeSubMatrix
main.go:13961:6: don't use underscores in Go names; func free_convert_matrix should be freeConvertMatrix
main.go:13967:6: don't use underscores in Go names; func free_f3tensor should be freeF3tensor
main.go:13975:30: exported func Cvector returns unexported type []main.fcomplex, which can be annoying to use
main.go:13986:50: exported func Cmatrix returns unexported type [][]main.fcomplex, which can be annoying to use
main.go:13996:4: should replace i += 1 with i++
main.go:14022:4: should replace i += 1 with i++
main.go:14032:6: should replace j += 1 with j++
main.go:14060:4: should replace i += 1 with i++
main.go:14070:6: should replace j += 1 with j++
main.go:14086:6: don't use underscores in Go names; func free_Cvector should be freeCvector
main.go:14091:6: don't use underscores in Go names; func free_Cmatrix should be freeCmatrix
main.go:14095:4: should replace i -= 1 with i--
main.go:14105:6: don't use underscores in Go names; func free_D3matrix should be freeD3matrix
main.go:14110:4: should replace i -= 1 with i--
main.go:14115:6: should replace j -= 1 with j--
main.go:14126:6: don't use underscores in Go names; func free_D3dmatrix should be freeD3dmatrix
main.go:14131:4: should replace i -= 1 with i--
main.go:14136:6: should replace j -= 1 with j--
main.go:14149:9: don't use underscores in Go names; func show_vector should be showVector
main.go:14153:4: should replace j += 1 with j++
main.go:14170:9: don't use underscores in Go names; func show_dvector should be showDvector
main.go:14174:4: should replace j += 1 with j++
main.go:14191:9: don't use underscores in Go names; func show_ivector should be showIvector
main.go:14195:4: should replace j += 1 with j++
main.go:14212:9: don't use underscores in Go names; func show_matrix should be showMatrix
main.go:14217:4: should replace i += 1 with i++
main.go:14222:6: should replace j += 1 with j++
main.go:14245:9: don't use underscores in Go names; func show_dmatrix should be showDmatrix
main.go:14250:4: should replace i += 1 with i++
main.go:14255:6: should replace j += 1 with j++
main.go:14278:9: don't use underscores in Go names; func save_vector should be saveVector
main.go:14279:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14296:4: should replace i += 1 with i++
main.go:14314:9: don't use underscores in Go names; func save_dvector should be saveDvector
main.go:14315:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14332:4: should replace i += 1 with i++
main.go:14350:9: don't use underscores in Go names; func save_ivector should be saveIvector
main.go:14351:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14368:4: should replace i += 1 with i++
main.go:14386:9: don't use underscores in Go names; func save_matrix should be saveMatrix
main.go:14387:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14418:5: should replace j += 1 with j++
main.go:14423:7: should replace i += 1 with i++
main.go:14439:5: should replace i += 1 with i++
main.go:14444:7: should replace j += 1 with j++
main.go:14465:9: don't use underscores in Go names; func save_dmatrix should be saveDmatrix
main.go:14466:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14497:5: should replace j += 1 with j++
main.go:14502:7: should replace i += 1 with i++
main.go:14518:5: should replace i += 1 with i++
main.go:14523:7: should replace j += 1 with j++
main.go:14546:9: don't use underscores in Go names; func save_ut_matrix should be saveUtMatrix
main.go:14547:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14565:4: should replace i += 1 with i++
main.go:14570:6: should replace j += 1 with j++
main.go:14600:9: don't use underscores in Go names; func save_ut_dmatrix should be saveUtDmatrix
main.go:14601:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14619:4: should replace i += 1 with i++
main.go:14624:6: should replace j += 1 with j++
