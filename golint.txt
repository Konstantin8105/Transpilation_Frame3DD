main.go:245:6: don't use underscores in Go names; type float_t should be floatT
main.go:246:6: don't use underscores in Go names; type double_t should be doubleT
main.go:248:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:248:7: exported const FP_NAN should have comment or be unexported
main.go:249:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:249:7: exported const FP_INFINITE should have comment or be unexported
main.go:250:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:250:7: exported const FP_ZERO should have comment or be unexported
main.go:251:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:251:7: exported const FP_SUBNORMAL should have comment or be unexported
main.go:252:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:252:7: exported const FP_NORMAL should have comment or be unexported
main.go:253:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:254:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:255:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:256:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:257:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:259:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:261:2: don't use underscores in Go names; struct field type_ should be type
main.go:267:6: don't use underscores in Go names; type size_t should be sizeT
main.go:268:6: don't use underscores in Go names; type __u_char should be _UChar
main.go:269:6: don't use underscores in Go names; type __u_short should be _UShort
main.go:270:6: don't use underscores in Go names; type __u_int should be _UInt
main.go:271:6: don't use underscores in Go names; type __u_long should be _ULong
main.go:272:6: don't use underscores in Go names; type __int8_t should be _Int8T
main.go:273:6: don't use underscores in Go names; type __uint8_t should be _Uint8T
main.go:274:6: don't use underscores in Go names; type __int16_t should be _Int16T
main.go:275:6: don't use underscores in Go names; type __uint16_t should be _Uint16T
main.go:276:6: don't use underscores in Go names; type __int32_t should be _Int32T
main.go:277:6: don't use underscores in Go names; type __uint32_t should be _Uint32T
main.go:278:6: don't use underscores in Go names; type __int64_t should be _Int64T
main.go:279:6: don't use underscores in Go names; type __uint64_t should be _Uint64T
main.go:280:6: don't use underscores in Go names; type __quad_t should be _QuadT
main.go:281:6: don't use underscores in Go names; type __u_quad_t should be _UQuadT
main.go:282:6: don't use underscores in Go names; type __dev_t should be _DevT
main.go:283:6: don't use underscores in Go names; type __uid_t should be _UIDT
main.go:284:6: don't use underscores in Go names; type __gid_t should be _GidT
main.go:285:6: don't use underscores in Go names; type __ino_t should be _InoT
main.go:286:6: don't use underscores in Go names; type __ino64_t should be _Ino64T
main.go:287:6: don't use underscores in Go names; type __mode_t should be _ModeT
main.go:288:6: don't use underscores in Go names; type __nlink_t should be _NlinkT
main.go:289:6: don't use underscores in Go names; type __off_t should be _OffT
main.go:290:6: don't use underscores in Go names; type __off64_t should be _Off64T
main.go:291:6: don't use underscores in Go names; type __pid_t should be _PidT
main.go:292:6: don't use underscores in Go names; type __fsid_t should be _FsidT
main.go:293:2: don't use underscores in Go names; struct field __val should be _Val
main.go:295:6: don't use underscores in Go names; type __clock_t should be _ClockT
main.go:296:6: don't use underscores in Go names; type __rlim_t should be _RlimT
main.go:297:6: don't use underscores in Go names; type __rlim64_t should be _Rlim64T
main.go:298:6: don't use underscores in Go names; type __id_t should be _IDT
main.go:299:6: don't use underscores in Go names; type __time_t should be _TimeT
main.go:300:6: don't use underscores in Go names; type __useconds_t should be _UsecondsT
main.go:301:6: don't use underscores in Go names; type __suseconds_t should be _SusecondsT
main.go:302:6: don't use underscores in Go names; type __daddr_t should be _DaddrT
main.go:303:6: don't use underscores in Go names; type __key_t should be _KeyT
main.go:304:6: don't use underscores in Go names; type __clockid_t should be _ClockidT
main.go:305:6: don't use underscores in Go names; type __timer_t should be _TimerT
main.go:306:6: don't use underscores in Go names; type __blksize_t should be _BlksizeT
main.go:307:6: don't use underscores in Go names; type __blkcnt_t should be _BlkcntT
main.go:308:6: don't use underscores in Go names; type __blkcnt64_t should be _Blkcnt64T
main.go:309:6: don't use underscores in Go names; type __fsblkcnt_t should be _FsblkcntT
main.go:310:6: don't use underscores in Go names; type __fsblkcnt64_t should be _Fsblkcnt64T
main.go:311:6: don't use underscores in Go names; type __fsfilcnt_t should be _FsfilcntT
main.go:312:6: don't use underscores in Go names; type __fsfilcnt64_t should be _Fsfilcnt64T
main.go:313:6: don't use underscores in Go names; type __fsword_t should be _FswordT
main.go:314:6: don't use underscores in Go names; type __ssize_t should be _SsizeT
main.go:315:6: don't use underscores in Go names; type __syscall_slong_t should be _SyscallSlongT
main.go:316:6: don't use underscores in Go names; type __syscall_ulong_t should be _SyscallUlongT
main.go:317:6: don't use underscores in Go names; type __loff_t should be _LoffT
main.go:318:6: don't use underscores in Go names; type __qaddr_t should be _QaddrT
main.go:319:6: don't use underscores in Go names; type __caddr_t should be _CaddrT
main.go:320:6: don't use underscores in Go names; type __intptr_t should be _IntptrT
main.go:321:6: don't use underscores in Go names; type __socklen_t should be _SocklenT
main.go:322:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:324:6: exported type FILE should have comment or be unexported
main.go:326:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:327:6: exported type BSunionSatSSusrSincludeSwcharPhD85D3E should have comment or be unexported
main.go:332:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:335:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:339:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.UntypedSet should have comment or be unexported
main.go:339:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:343:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wch should have comment or be unexported
main.go:343:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:343:52: don't use underscores in Go names; method Get__wch should be GetWch
main.go:347:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wch should have comment or be unexported
main.go:347:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:347:52: don't use underscores in Go names; method Set__wch should be SetWch
main.go:352:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wchb should have comment or be unexported
main.go:352:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:352:52: don't use underscores in Go names; method Get__wchb should be GetWchb
main.go:356:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wchb should have comment or be unexported
main.go:356:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:356:52: don't use underscores in Go names; method Set__wchb should be SetWchb
main.go:362:6: don't use underscores in Go names; type __mbstate_t should be _MbstateT
main.go:363:2: don't use underscores in Go names; struct field __count should be _Count
main.go:364:2: don't use underscores in Go names; struct field __value should be _Value
main.go:366:6: don't use underscores in Go names; type _G_fpos_t should be _GFposT
main.go:367:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:368:2: don't use underscores in Go names; struct field __state should be _State
main.go:370:6: don't use underscores in Go names; type _G_fpos64_t should be _GFpos64T
main.go:371:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:372:2: don't use underscores in Go names; struct field __state should be _State
main.go:374:6: don't use underscores in Go names; type va_list should be vaList
main.go:375:6: don't use underscores in Go names; type __gnuc_va_list should be _GnucVaList
main.go:376:6: don't use underscores in Go names; type _IO_jump_t should be _IOJumpT
main.go:378:6: don't use underscores in Go names; type _IO_lock_t should be _IOLockT
main.go:380:6: don't use underscores in Go names; type _IO_marker should be _IOMarker
main.go:385:6: don't use underscores in Go names; type __codecvt_result should be _CodecvtResult
main.go:388:2: don't use underscores in Go names; const __codecvt_ok should be _CodecvtOk
main.go:389:2: don't use underscores in Go names; const __codecvt_partial should be _CodecvtPartial
main.go:390:2: don't use underscores in Go names; const __codecvt_error should be _CodecvtError
main.go:391:2: don't use underscores in Go names; const __codecvt_noconv should be _CodecvtNoconv
main.go:394:6: don't use underscores in Go names; type _IO_FILE_plus should be _IOFILEPlus
main.go:396:6: don't use underscores in Go names; type __io_read_fn should be _IoReadFn
main.go:397:6: don't use underscores in Go names; type __io_write_fn should be _IoWriteFn
main.go:398:6: don't use underscores in Go names; type __io_seek_fn should be _IoSeekFn
main.go:399:6: don't use underscores in Go names; type __io_close_fn should be _IoCloseFn
main.go:400:6: don't use underscores in Go names; type cookie_read_function_t should be cookieReadFunctionT
main.go:401:6: don't use underscores in Go names; type cookie_write_function_t should be cookieWriteFunctionT
main.go:402:6: don't use underscores in Go names; type cookie_seek_function_t should be cookieSeekFunctionT
main.go:403:6: don't use underscores in Go names; type cookie_close_function_t should be cookieCloseFunctionT
main.go:404:6: don't use underscores in Go names; type _IO_cookie_io_functions_t should be _IOCookieIoFunctionsT
main.go:410:6: don't use underscores in Go names; type cookie_io_functions_t should be cookieIoFunctionsT
main.go:411:6: don't use underscores in Go names; type _IO_cookie_file should be _IOCookieFile
main.go:413:6: don't use underscores in Go names; type off_t should be offT
main.go:414:6: don't use underscores in Go names; type off64_t should be off64T
main.go:415:6: don't use underscores in Go names; type ssize_t should be ssizeT
main.go:416:6: don't use underscores in Go names; type fpos_t should be fposT
main.go:417:6: don't use underscores in Go names; type fpos64_t should be fpos64T
main.go:435:6: don't use underscores in Go names; type wchar_t should be wcharT
main.go:437:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:437:7: exported const P_ALL should have comment or be unexported
main.go:438:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:438:7: exported const P_PID should have comment or be unexported
main.go:439:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:439:7: exported const P_PGID should have comment or be unexported
main.go:441:6: don't use underscores in Go names; type idtype_t should be idtypeT
main.go:442:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD69D5E should have comment or be unexported
main.go:443:2: don't use underscores in Go names; struct field __w_termsig should be _WTermsig
main.go:444:2: don't use underscores in Go names; struct field __w_coredump should be _WCoredump
main.go:445:2: don't use underscores in Go names; struct field __w_retcode should be _WRetcode
main.go:447:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD84D5E should have comment or be unexported
main.go:448:2: don't use underscores in Go names; struct field __w_stopval should be _WStopval
main.go:449:2: don't use underscores in Go names; struct field __w_stopsig should be _WStopsig
main.go:456:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:459:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:463:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:467:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:467:19: don't use underscores in Go names; method GetW_status should be GetWStatus
main.go:471:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:471:19: don't use underscores in Go names; method SetW_status should be SetWStatus
main.go:476:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:476:19: don't use underscores in Go names; method Get__wait_terminated should be GetWaitTerminated
main.go:480:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:480:19: don't use underscores in Go names; method Set__wait_terminated should be SetWaitTerminated
main.go:485:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:485:19: don't use underscores in Go names; method Get__wait_stopped should be GetWaitStopped
main.go:489:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:489:19: don't use underscores in Go names; method Set__wait_stopped should be SetWaitStopped
main.go:495:6: don't use underscores in Go names; type div_t should be divT
main.go:499:6: don't use underscores in Go names; type ldiv_t should be ldivT
main.go:503:6: don't use underscores in Go names; type lldiv_t should be lldivT
main.go:507:6: don't use underscores in Go names; type __locale_data should be _LocaleData
main.go:509:6: don't use underscores in Go names; type __locale_t should be _LocaleT
main.go:510:2: don't use underscores in Go names; struct field __locales should be _Locales
main.go:511:2: don't use underscores in Go names; struct field __ctype_b should be _CtypeB
main.go:512:2: don't use underscores in Go names; struct field __ctype_tolower should be _CtypeTolower
main.go:513:2: don't use underscores in Go names; struct field __ctype_toupper should be _CtypeToupper
main.go:514:2: don't use underscores in Go names; struct field __names should be _Names
main.go:516:6: don't use underscores in Go names; type locale_t should be localeT
main.go:517:6: don't use underscores in Go names; type u_char should be uChar
main.go:518:6: don't use underscores in Go names; type u_short should be uShort
main.go:519:6: don't use underscores in Go names; type u_int should be uInt
main.go:520:6: don't use underscores in Go names; type u_long should be uLong
main.go:521:6: don't use underscores in Go names; type quad_t should be quadT
main.go:522:6: don't use underscores in Go names; type u_quad_t should be uQuadT
main.go:523:6: don't use underscores in Go names; type fsid_t should be fsidT
main.go:524:6: don't use underscores in Go names; type loff_t should be loffT
main.go:525:6: don't use underscores in Go names; type ino_t should be inoT
main.go:526:6: don't use underscores in Go names; type ino64_t should be ino64T
main.go:527:6: don't use underscores in Go names; type dev_t should be devT
main.go:528:6: don't use underscores in Go names; type gid_t should be gidT
main.go:529:6: don't use underscores in Go names; type mode_t should be modeT
main.go:530:6: don't use underscores in Go names; type nlink_t should be nlinkT
main.go:531:6: don't use underscores in Go names; type uid_t should be uidT
main.go:532:6: don't use underscores in Go names; type pid_t should be pidT
main.go:533:6: don't use underscores in Go names; type id_t should be idT
main.go:534:6: don't use underscores in Go names; type daddr_t should be daddrT
main.go:535:6: don't use underscores in Go names; type caddr_t should be caddrT
main.go:536:6: don't use underscores in Go names; type key_t should be keyT
main.go:537:6: don't use underscores in Go names; type clock_t should be clockT
main.go:538:6: don't use underscores in Go names; type time_t should be timeT
main.go:539:6: don't use underscores in Go names; type clockid_t should be clockidT
main.go:540:6: don't use underscores in Go names; type timer_t should be timerT
main.go:541:6: don't use underscores in Go names; type useconds_t should be usecondsT
main.go:542:6: don't use underscores in Go names; type suseconds_t should be susecondsT
main.go:546:6: don't use underscores in Go names; type int8_t should be int8T
main.go:547:6: don't use underscores in Go names; type int16_t should be int16T
main.go:548:6: don't use underscores in Go names; type int32_t should be int32T
main.go:549:6: don't use underscores in Go names; type int64_t should be int64T
main.go:550:6: don't use underscores in Go names; type u_int8_t should be uInt8T
main.go:551:6: don't use underscores in Go names; type u_int16_t should be uInt16T
main.go:552:6: don't use underscores in Go names; type u_int32_t should be uInt32T
main.go:553:6: don't use underscores in Go names; type u_int64_t should be uInt64T
main.go:554:6: don't use underscores in Go names; type register_t should be registerT
main.go:555:6: don't use underscores in Go names; type __sig_atomic_t should be _SigAtomicT
main.go:556:6: don't use underscores in Go names; type __sigset_t should be _SigsetT
main.go:557:2: don't use underscores in Go names; struct field __val should be _Val
main.go:559:6: don't use underscores in Go names; type sigset_t should be sigsetT
main.go:561:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:562:2: don't use underscores in Go names; struct field tv_nsec should be tvNsec
main.go:565:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:566:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:568:6: don't use underscores in Go names; type __fd_mask should be _FdMask
main.go:569:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:570:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:572:6: don't use underscores in Go names; type fd_set should be fdSet
main.go:573:2: don't use underscores in Go names; struct field fds_bits should be fdsBits
main.go:575:6: don't use underscores in Go names; type fd_mask should be fdMask
main.go:576:6: don't use underscores in Go names; type blksize_t should be blksizeT
main.go:577:6: don't use underscores in Go names; type blkcnt_t should be blkcntT
main.go:578:6: don't use underscores in Go names; type fsblkcnt_t should be fsblkcntT
main.go:579:6: don't use underscores in Go names; type fsfilcnt_t should be fsfilcntT
main.go:580:6: don't use underscores in Go names; type blkcnt64_t should be blkcnt64T
main.go:581:6: don't use underscores in Go names; type fsblkcnt64_t should be fsblkcnt64T
main.go:582:6: don't use underscores in Go names; type fsfilcnt64_t should be fsfilcnt64T
main.go:583:6: don't use underscores in Go names; type pthread_t should be pthreadT
main.go:584:6: don't use underscores in Go names; type pthread_attr_t should be pthreadAttrT
main.go:589:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:592:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:596:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:600:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:600:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:604:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:604:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:609:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:609:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:613:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:613:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:619:6: don't use underscores in Go names; type __pthread_internal_list should be _PthreadInternalList
main.go:620:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:621:2: don't use underscores in Go names; struct field __next should be _Next
main.go:623:6: don't use underscores in Go names; type __pthread_list_t should be _PthreadListT
main.go:624:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:625:2: don't use underscores in Go names; struct field __next should be _Next
main.go:627:6: don't use underscores in Go names; type __pthread_mutex_s should be _PthreadMutexS
main.go:628:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:629:2: don't use underscores in Go names; struct field __count should be _Count
main.go:630:2: don't use underscores in Go names; struct field __owner should be _Owner
main.go:631:2: don't use underscores in Go names; struct field __nusers should be _Nusers
main.go:632:2: don't use underscores in Go names; struct field __kind should be _Kind
main.go:633:2: don't use underscores in Go names; struct field __spins should be _Spins
main.go:634:2: don't use underscores in Go names; struct field __elision should be _Elision
main.go:635:2: don't use underscores in Go names; struct field __list should be _List
main.go:637:6: don't use underscores in Go names; type pthread_mutex_t should be pthreadMutexT
main.go:642:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:645:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:649:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:653:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:653:30: don't use underscores in Go names; method Get__data should be GetData
main.go:657:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:657:30: don't use underscores in Go names; method Set__data should be SetData
main.go:662:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:662:30: don't use underscores in Go names; method Get__size should be GetSize
main.go:666:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:666:30: don't use underscores in Go names; method Set__size should be SetSize
main.go:671:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:671:30: don't use underscores in Go names; method Get__align should be GetAlign
main.go:675:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:675:30: don't use underscores in Go names; method Set__align should be SetAlign
main.go:681:6: don't use underscores in Go names; type pthread_mutexattr_t should be pthreadMutexattrT
main.go:686:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:689:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:693:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:697:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:697:34: don't use underscores in Go names; method Get__size should be GetSize
main.go:701:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:701:34: don't use underscores in Go names; method Set__size should be SetSize
main.go:706:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:706:34: don't use underscores in Go names; method Get__align should be GetAlign
main.go:710:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:710:34: don't use underscores in Go names; method Set__align should be SetAlign
main.go:716:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD141D3E should have comment or be unexported
main.go:717:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:718:2: don't use underscores in Go names; struct field __futex should be _Futex
main.go:719:2: don't use underscores in Go names; struct field __total_seq should be _TotalSeq
main.go:720:2: don't use underscores in Go names; struct field __wakeup_seq should be _WakeupSeq
main.go:721:2: don't use underscores in Go names; struct field __woken_seq should be _WokenSeq
main.go:722:2: don't use underscores in Go names; struct field __mutex should be _Mutex
main.go:723:2: don't use underscores in Go names; struct field __nwaiters should be _Nwaiters
main.go:724:2: don't use underscores in Go names; struct field __broadcast_seq should be _BroadcastSeq
main.go:726:6: don't use underscores in Go names; type pthread_cond_t should be pthreadCondT
main.go:731:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:734:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:738:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:742:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:742:29: don't use underscores in Go names; method Get__data should be GetData
main.go:746:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:746:29: don't use underscores in Go names; method Set__data should be SetData
main.go:751:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:751:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:755:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:755:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:760:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:760:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:764:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:764:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:770:6: don't use underscores in Go names; type pthread_condattr_t should be pthreadCondattrT
main.go:775:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:778:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:782:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:786:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:786:33: don't use underscores in Go names; method Get__size should be GetSize
main.go:790:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:790:33: don't use underscores in Go names; method Set__size should be SetSize
main.go:795:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:795:33: don't use underscores in Go names; method Get__align should be GetAlign
main.go:799:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:799:33: don't use underscores in Go names; method Set__align should be SetAlign
main.go:805:6: don't use underscores in Go names; type pthread_key_t should be pthreadKeyT
main.go:806:6: don't use underscores in Go names; type pthread_once_t should be pthreadOnceT
main.go:807:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD177D3E should have comment or be unexported
main.go:808:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:809:2: don't use underscores in Go names; struct field __nr_readers should be _NrReaders
main.go:810:2: don't use underscores in Go names; struct field __readers_wakeup should be _ReadersWakeup
main.go:811:2: don't use underscores in Go names; struct field __writer_wakeup should be _WriterWakeup
main.go:812:2: don't use underscores in Go names; struct field __nr_readers_queued should be _NrReadersQueued
main.go:813:2: don't use underscores in Go names; struct field __nr_writers_queued should be _NrWritersQueued
main.go:814:2: don't use underscores in Go names; struct field __writer should be _Writer
main.go:815:2: don't use underscores in Go names; struct field __shared should be _Shared
main.go:816:2: don't use underscores in Go names; struct field __rwelision should be _Rwelision
main.go:817:2: don't use underscores in Go names; struct field __pad1 should be _Pad1
main.go:818:2: don't use underscores in Go names; struct field __pad2 should be _Pad2
main.go:819:2: don't use underscores in Go names; struct field __flags should be _Flags
main.go:821:6: don't use underscores in Go names; type pthread_rwlock_t should be pthreadRwlockT
main.go:826:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:829:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:833:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:837:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:837:31: don't use underscores in Go names; method Get__data should be GetData
main.go:841:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:841:31: don't use underscores in Go names; method Set__data should be SetData
main.go:846:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:846:31: don't use underscores in Go names; method Get__size should be GetSize
main.go:850:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:850:31: don't use underscores in Go names; method Set__size should be SetSize
main.go:855:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:855:31: don't use underscores in Go names; method Get__align should be GetAlign
main.go:859:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:859:31: don't use underscores in Go names; method Set__align should be SetAlign
main.go:865:6: don't use underscores in Go names; type pthread_rwlockattr_t should be pthreadRwlockattrT
main.go:870:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:873:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:877:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:881:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:881:35: don't use underscores in Go names; method Get__size should be GetSize
main.go:885:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:885:35: don't use underscores in Go names; method Set__size should be SetSize
main.go:890:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:890:35: don't use underscores in Go names; method Get__align should be GetAlign
main.go:894:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:894:35: don't use underscores in Go names; method Set__align should be SetAlign
main.go:900:6: don't use underscores in Go names; type pthread_spinlock_t should be pthreadSpinlockT
main.go:901:6: don't use underscores in Go names; type pthread_barrier_t should be pthreadBarrierT
main.go:906:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:909:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:913:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:917:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:917:32: don't use underscores in Go names; method Get__size should be GetSize
main.go:921:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:921:32: don't use underscores in Go names; method Set__size should be SetSize
main.go:926:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:926:32: don't use underscores in Go names; method Get__align should be GetAlign
main.go:930:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:930:32: don't use underscores in Go names; method Set__align should be SetAlign
main.go:936:6: don't use underscores in Go names; type pthread_barrierattr_t should be pthreadBarrierattrT
main.go:941:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:944:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:948:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:952:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:952:36: don't use underscores in Go names; method Get__size should be GetSize
main.go:956:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:956:36: don't use underscores in Go names; method Set__size should be SetSize
main.go:961:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:961:36: don't use underscores in Go names; method Get__align should be GetAlign
main.go:965:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:965:36: don't use underscores in Go names; method Set__align should be SetAlign
main.go:971:6: don't use underscores in Go names; type random_data should be randomData
main.go:975:2: don't use underscores in Go names; struct field rand_type should be randType
main.go:976:2: don't use underscores in Go names; struct field rand_deg should be randDeg
main.go:977:2: don't use underscores in Go names; struct field rand_sep should be randSep
main.go:978:2: don't use underscores in Go names; struct field end_ptr should be endPtr
main.go:980:6: don't use underscores in Go names; type drand48_data should be drand48Data
main.go:981:2: don't use underscores in Go names; struct field __x should be _X
main.go:982:2: don't use underscores in Go names; struct field __old_x should be _OldX
main.go:983:2: don't use underscores in Go names; struct field __c should be _C
main.go:984:2: don't use underscores in Go names; struct field __init should be _Init
main.go:985:2: don't use underscores in Go names; struct field __a should be _A
main.go:987:6: don't use underscores in Go names; type __compar_fn_t should be _ComparFnT
main.go:988:6: don't use underscores in Go names; type comparison_fn_t should be comparisonFnT
main.go:989:6: don't use underscores in Go names; type __compar_d_fn_t should be _ComparDFnT
main.go:990:6: don't use underscores in Go names; type vec3_struct should be vec3Struct
main.go:1023:2: don't use underscores in Go names; struct field tm_sec should be tmSec
main.go:1024:2: don't use underscores in Go names; struct field tm_min should be tmMin
main.go:1025:2: don't use underscores in Go names; struct field tm_hour should be tmHour
main.go:1026:2: don't use underscores in Go names; struct field tm_mday should be tmMday
main.go:1027:2: don't use underscores in Go names; struct field tm_mon should be tmMon
main.go:1028:2: don't use underscores in Go names; struct field tm_year should be tmYear
main.go:1029:2: don't use underscores in Go names; struct field tm_wday should be tmWday
main.go:1030:2: don't use underscores in Go names; struct field tm_yday should be tmYday
main.go:1031:2: don't use underscores in Go names; struct field tm_isdst should be tmIsdst
main.go:1032:2: don't use underscores in Go names; struct field tm_gmtoff should be tmGmtoff
main.go:1033:2: don't use underscores in Go names; struct field tm_zone should be tmZone
main.go:1036:2: don't use underscores in Go names; struct field it_interval should be itInterval
main.go:1037:2: don't use underscores in Go names; struct field it_value should be itValue
main.go:1041:6: don't use underscores in Go names; type intptr_t should be intptrT
main.go:1042:6: don't use underscores in Go names; type socklen_t should be socklenT
main.go:1044:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1045:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1046:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1047:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1048:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1049:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1050:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1051:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1052:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1053:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1054:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1055:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1056:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1057:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1058:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1059:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1060:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1061:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1062:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1063:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1064:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1065:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1066:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1067:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1068:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1069:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1070:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1071:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1072:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1073:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1074:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1075:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1076:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1077:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1078:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1079:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1080:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1081:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1082:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1083:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1084:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1085:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1086:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1087:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1088:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1089:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1090:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1091:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1092:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1093:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1094:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1095:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1096:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1097:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1098:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1099:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1100:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1101:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1102:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1103:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1104:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1105:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1106:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1107:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1108:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1109:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1110:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1111:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1112:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1113:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1114:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1115:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1116:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1117:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1118:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1119:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1120:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1121:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1122:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1123:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1124:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1125:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1126:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1127:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1128:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1129:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1130:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1131:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1132:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1133:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1134:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1135:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1136:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1137:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1138:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1139:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1140:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1141:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1142:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1143:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1144:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1145:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1146:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1147:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1148:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1149:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1150:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1151:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1152:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1153:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1154:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1155:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1156:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1157:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1158:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1159:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1160:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1161:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1162:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1163:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1164:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1165:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1166:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1167:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1168:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1169:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1170:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1171:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1172:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1173:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1174:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1175:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1176:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1177:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1178:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1179:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1180:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1181:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1182:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1183:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1184:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1185:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1186:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1187:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1188:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1189:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1190:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1191:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1192:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1193:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1194:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1195:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1196:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1197:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1198:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1199:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1200:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1201:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1202:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1203:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1204:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1205:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1206:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1207:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1208:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1209:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1210:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1211:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1212:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1213:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1214:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1215:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1216:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1217:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1218:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1219:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1220:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1221:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1222:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1223:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1224:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1225:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1226:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1227:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1228:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1229:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1230:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1231:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1232:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1233:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1234:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1235:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1236:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1237:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1238:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1239:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1240:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1241:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1242:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1243:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1244:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1245:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1246:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1247:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1248:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1249:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1250:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1251:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1252:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1253:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1254:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1255:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1256:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1257:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1258:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1259:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1260:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1261:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1262:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1263:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1264:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1265:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1266:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1267:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1268:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1269:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1270:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1271:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1272:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1273:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1274:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1275:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1276:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1277:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1278:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1279:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1280:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1281:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1282:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1283:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1284:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1285:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1286:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1287:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1288:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1289:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1290:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1291:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1292:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1293:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1294:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1295:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1296:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1297:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1298:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1299:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1300:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1301:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1302:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1303:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1304:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1305:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1306:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1307:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1308:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1309:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1310:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1311:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1312:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1313:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1314:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1315:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1316:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1317:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1318:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1319:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1320:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1321:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1322:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1323:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1324:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1325:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1326:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1327:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1328:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1329:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1330:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1331:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1332:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1333:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1334:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1335:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1336:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1337:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1338:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1339:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1340:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1341:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1342:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1343:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1345:6: exported type FCOMPLEX should have comment or be unexported
main.go:1546:2: don't use underscores in Go names; var IN_file should be INFile
main.go:1546:10: should omit type []byte from declaration of var IN_file; it will be inferred from the right-hand side
main.go:1547:6: don't use underscores in Go names; var OUT_file should be OUTFile
main.go:1547:15: should omit type []byte from declaration of var OUT_file; it will be inferred from the right-hand side
main.go:1548:12: should omit type []byte from declaration of var title; it will be inferred from the right-hand side
main.go:1549:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:1550:15: should omit type []byte from declaration of var meshpath; it will be inferred from the right-hand side
main.go:1551:15: should omit type []byte from declaration of var plotpath; it will be inferred from the right-hand side
main.go:1552:15: should omit type []byte from declaration of var infcpath; it will be inferred from the right-hand side
main.go:1553:15: should omit type []byte from declaration of var modepath; it will be inferred from the right-hand side
main.go:1554:24: should omit type []byte from declaration of var strippedInputFile; it will be inferred from the right-hand side
main.go:1557:21: should drop = nil from declaration of var rj; it is the zero value
main.go:1564:20: should drop = nil from declaration of var E; it is the zero value
main.go:1565:20: should drop = nil from declaration of var G; it is the zero value
main.go:1566:20: should drop = nil from declaration of var p; it is the zero value
main.go:1567:24: should drop = nil from declaration of var U; it is the zero value
main.go:1568:24: should drop = nil from declaration of var W; it is the zero value
main.go:1569:24: should drop = nil from declaration of var P; it is the zero value
main.go:1570:24: should drop = nil from declaration of var T; it is the zero value
main.go:1571:23: should drop = nil from declaration of var Dp; it is the zero value
main.go:1573:22: should drop = nil from declaration of var EMs; it is the zero value
main.go:1574:22: should drop = nil from declaration of var NMs; it is the zero value
main.go:1578:9: should omit type []float32 from declaration of var gX; it will be inferred from the right-hand side
main.go:1579:9: should omit type []float32 from declaration of var gY; it will be inferred from the right-hand side
main.go:1580:9: should omit type []float32 from declaration of var gZ; it will be inferred from the right-hand side
main.go:1581:10: should omit type float32 from declaration of var pan; it will be inferred from the right-hand side
main.go:1582:12: should omit type float32 from declaration of var scale; it will be inferred from the right-hand side
main.go:1583:9: should omit type float32 from declaration of var dx; it will be inferred from the right-hand side
main.go:1584:22: should drop = nil from declaration of var K; it is the zero value
main.go:1585:23: should drop = 0 from declaration of var traceK; it is the zero value
main.go:1586:22: should drop = nil from declaration of var M; it is the zero value
main.go:1587:23: should drop = 0 from declaration of var traceM; it is the zero value
main.go:1588:6: don't use underscores in Go names; var eqF_mech should be eqFMech
main.go:1588:31: should drop = nil from declaration of var eqF_mech; it is the zero value
main.go:1589:6: don't use underscores in Go names; var eqF_temp should be eqFTemp
main.go:1589:31: should drop = nil from declaration of var eqF_temp; it is the zero value
main.go:1590:6: don't use underscores in Go names; var F_mech should be FMech
main.go:1590:27: should drop = nil from declaration of var F_mech; it is the zero value
main.go:1591:6: don't use underscores in Go names; var F_temp should be FTemp
main.go:1591:27: should drop = nil from declaration of var F_temp; it is the zero value
main.go:1592:20: should drop = nil from declaration of var F; it is the zero value
main.go:1593:20: should drop = nil from declaration of var R; it is the zero value
main.go:1594:21: should drop = nil from declaration of var dR; it is the zero value
main.go:1595:20: should drop = nil from declaration of var D; it is the zero value
main.go:1596:21: should drop = nil from declaration of var dD; it is the zero value
main.go:1597:21: should drop = nil from declaration of var dF; it is the zero value
main.go:1598:20: should drop = nil from declaration of var L; it is the zero value
main.go:1599:21: should drop = nil from declaration of var Le; it is the zero value
main.go:1600:22: should drop = nil from declaration of var Q; it is the zero value
main.go:1601:10: should omit type float64 from declaration of var tol; it will be inferred from the right-hand side
main.go:1602:22: should drop = 0 from declaration of var shift; it is the zero value
main.go:1603:6: don't use underscores in Go names; var struct_mass should be structMass
main.go:1604:6: don't use underscores in Go names; var total_mass should be totalMass
main.go:1605:20: should drop = nil from declaration of var f; it is the zero value
main.go:1606:22: should drop = nil from declaration of var V; it is the zero value
main.go:1607:6: don't use underscores in Go names; var rms_resid should be rmsResid
main.go:1609:22: should drop = 0 from declaration of var Cfreq; it is the zero value
main.go:1612:6: don't use underscores in Go names; var exagg_static should be exaggStatic
main.go:1612:19: should omit type float64 from declaration of var exagg_static; it will be inferred from the right-hand side
main.go:1613:6: don't use underscores in Go names; var exagg_modal should be exaggModal
main.go:1613:18: should omit type float64 from declaration of var exagg_modal; it will be inferred from the right-hand side
main.go:1626:15: should drop = 0 from declaration of var nN; it is the zero value
main.go:1627:15: should drop = 0 from declaration of var nE; it is the zero value
main.go:1628:15: should drop = 0 from declaration of var nL; it is the zero value
main.go:1629:15: should drop = 0 from declaration of var lc; it is the zero value
main.go:1630:16: should drop = 0 from declaration of var DoF; it is the zero value
main.go:1633:15: should drop = 0 from declaration of var nR; it is the zero value
main.go:1634:9: should omit type []int from declaration of var nD; it will be inferred from the right-hand side
main.go:1635:9: should omit type []int from declaration of var nF; it will be inferred from the right-hand side
main.go:1636:9: should omit type []int from declaration of var nU; it will be inferred from the right-hand side
main.go:1637:9: should omit type []int from declaration of var nW; it will be inferred from the right-hand side
main.go:1638:9: should omit type []int from declaration of var nP; it will be inferred from the right-hand side
main.go:1639:9: should omit type []int from declaration of var nT; it will be inferred from the right-hand side
main.go:1640:15: should drop = 0 from declaration of var nI; it is the zero value
main.go:1641:15: should drop = 0 from declaration of var nX; it is the zero value
main.go:1642:15: should drop = 0 from declaration of var nC; it is the zero value
main.go:1645:18: should drop = 0 from declaration of var shear; it is the zero value
main.go:1646:17: should drop = 0 from declaration of var geom; it is the zero value
main.go:1647:12: should omit type int from declaration of var anlyz; it will be inferred from the right-hand side
main.go:1648:16: should drop = nil from declaration of var q; it is the zero value
main.go:1649:16: should drop = nil from declaration of var r; it is the zero value
main.go:1651:15: should drop = 0 from declaration of var nM; it is the zero value
main.go:1653:6: don't use underscores in Go names; var nM_calc should be nMCalc
main.go:1654:11: should omit type int from declaration of var lump; it will be inferred from the right-hand side
main.go:1655:17: should drop = 0 from declaration of var iter; it is the zero value
main.go:1656:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:1657:11: should omit type []int from declaration of var anim; it will be inferred from the right-hand side
main.go:1658:17: should drop = 0 from declaration of var Cdof; it is the zero value
main.go:1659:20: should drop = 0 from declaration of var Cmethod; it is the zero value
main.go:1660:16: should drop = nil from declaration of var c; it is the zero value
main.go:1661:16: should drop = nil from declaration of var m; it is the zero value
main.go:1662:21: should drop = 0 from declaration of var filetype; it is the zero value
main.go:1663:18: should drop = 0 from declaration of var debug; it is the zero value
main.go:1664:14: should omit type int from declaration of var verbose; it will be inferred from the right-hand side
main.go:1665:6: don't use underscores in Go names; var axial_strain_warning should be axialStrainWarning
main.go:1665:33: should drop = 0 from declaration of var axial_strain_warning; it is the zero value
main.go:1666:21: should drop = 0 from declaration of var ExitCode; it is the zero value
main.go:1667:6: don't use underscores in Go names; var shear_flag should be shearFlag
main.go:1667:17: should omit type int from declaration of var shear_flag; it will be inferred from the right-hand side
main.go:1668:6: don't use underscores in Go names; var geom_flag should be geomFlag
main.go:1668:16: should omit type int from declaration of var geom_flag; it will be inferred from the right-hand side
main.go:1669:6: don't use underscores in Go names; var anlyz_flag should be anlyzFlag
main.go:1669:17: should omit type int from declaration of var anlyz_flag; it will be inferred from the right-hand side
main.go:1670:6: don't use underscores in Go names; var D3_flag should be D3Flag
main.go:1670:14: should omit type int from declaration of var D3_flag; it will be inferred from the right-hand side
main.go:1671:6: don't use underscores in Go names; var lump_flag should be lumpFlag
main.go:1671:16: should omit type int from declaration of var lump_flag; it will be inferred from the right-hand side
main.go:1672:6: don't use underscores in Go names; var modal_flag should be modalFlag
main.go:1672:17: should omit type int from declaration of var modal_flag; it will be inferred from the right-hand side
main.go:1673:6: don't use underscores in Go names; var write_matrix should be writeMatrix
main.go:1673:19: should omit type int from declaration of var write_matrix; it will be inferred from the right-hand side
main.go:1674:6: don't use underscores in Go names; var axial_sign should be axialSign
main.go:1674:17: should omit type int from declaration of var axial_sign; it will be inferred from the right-hand side
main.go:1675:6: don't use underscores in Go names; var condense_flag should be condenseFlag
main.go:1675:20: should omit type int from declaration of var condense_flag; it will be inferred from the right-hand side
main.go:1676:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:1677:6: don't use underscores in Go names; var exagg_flag should be exaggFlag
main.go:1678:6: don't use underscores in Go names; var tol_flag should be tolFlag
main.go:1679:6: don't use underscores in Go names; var shift_flag should be shiftFlag
main.go:1680:6: don't use underscores in Go names; var pan_flag should be panFlag
main.go:1680:15: should omit type float32 from declaration of var pan_flag; it will be inferred from the right-hand side
main.go:1681:11: should omit type []byte from declaration of var extn; it will be inferred from the right-hand side
main.go:1865:5: should replace lc += 1 with lc++
main.go:1879:7: should replace i += 1 with i++
main.go:1902:7: should replace i += 1 with i++
main.go:1906:8: should replace j += 1 with j++
main.go:1921:8: should replace i += 1 with i++
main.go:1931:8: should replace i += 1 with i++
main.go:1950:8: should replace i += 1 with i++
main.go:1961:8: should replace i += 1 with i++
main.go:1974:8: should replace i += 1 with i++
main.go:1985:7: should replace i += 1 with i++
main.go:2004:8: should replace iter += 1 with iter++
main.go:2018:9: should replace i += 1 with i++
main.go:2073:11: if block ends with a return statement, so drop this else and outdent its block
main.go:2083:5: should replace j += 1 with j++
main.go:2094:5: should replace i += 1 with i++
main.go:2102:8: should replace j += 1 with j++
main.go:2139:6: should replace j += 1 with j++
main.go:2237:6: don't use underscores in Go names; func assemble_K should be assembleK
main.go:2240:16: should drop = 0 from declaration of var res; it is the zero value
main.go:2247:6: don't use underscores in Go names; var stiffness_fn should be stiffnessFn
main.go:2247:19: should omit type []byte from declaration of var stiffness_fn; it will be inferred from the right-hand side
main.go:2250:4: should replace i += 1 with i++
main.go:2254:5: should replace j += 1 with j++
main.go:2265:4: should replace i += 1 with i++
main.go:2284:4: should replace i += 1 with i++
main.go:2297:6: should replace l += 1 with l++
main.go:2303:8: should replace ll += 1 with ll++
main.go:2323:6: don't use underscores in Go names; func elastic_K should be elasticK
main.go:2340:4: should replace i += 1 with i++
main.go:2344:5: should replace j += 1 with j++
main.go:2527:4: should replace i += 1 with i++
main.go:2532:6: should replace j += 1 with j++
main.go:2565:6: don't use underscores in Go names; func geometric_K should be geometricK
main.go:2586:4: should replace i += 1 with i++
main.go:2590:5: should replace j += 1 with j++
main.go:2783:4: should replace i += 1 with i++
main.go:2788:6: should replace j += 1 with j++
main.go:2815:4: should replace i += 1 with i++
main.go:2819:5: should replace j += 1 with j++
main.go:2837:6: don't use underscores in Go names; func solve_system should be solveSystem
main.go:2837:123: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:2880:6: don't use underscores in Go names; func equilibrium_error should be equilibriumError
main.go:2881:6: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2881:22: should drop = 0 from declaration of var ss_dF; it is the zero value
main.go:2882:6: don't use underscores in Go names; var ss_F should be ssF
main.go:2882:21: should drop = 0 from declaration of var ss_F; it is the zero value
main.go:2883:21: should drop = 0 from declaration of var errF; it is the zero value
main.go:2888:4: should replace i += 1 with i++
main.go:2896:7: should replace j += 1 with j++
main.go:2910:7: should replace j += 1 with j++
main.go:2924:4: should replace i += 1 with i++
main.go:2928:5: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2934:4: should replace i += 1 with i++
main.go:2938:5: don't use underscores in Go names; var ss_F should be ssF
main.go:2951:6: don't use underscores in Go names; func element_end_forces should be elementEndForces
main.go:2951:232: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:2951:254: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:2951:310: don't use underscores in Go names; func parameter axial_strain_warning should be axialStrainWarning
main.go:2953:6: don't use underscores in Go names; var axial_strain should be axialStrain
main.go:2953:19: should omit type float64 from declaration of var axial_strain; it will be inferred from the right-hand side
main.go:2960:4: should replace m += 1 with m++
main.go:2966:6: should replace j += 1 with j++
main.go:2975:6: should replace (axial_strain_warning[0]) += 1 with (axial_strain_warning[0])++
main.go:3012:6: don't use underscores in Go names; func frame_element_force should be frameElementForce
main.go:3012:196: don't use underscores in Go names; func parameter f_t should be fT
main.go:3012:211: don't use underscores in Go names; func parameter f_m should be fM
main.go:3012:260: don't use underscores in Go names; func parameter axial_strain should be axialStrain
main.go:3034:22: should drop = 0 from declaration of var delta; it is the zero value
main.go:3039:18: should drop = 0 from declaration of var T; it is the zero value
main.go:3040:9: should omit type float64 from declaration of var f1; it will be inferred from the right-hand side
main.go:3041:9: should omit type float64 from declaration of var f2; it will be inferred from the right-hand side
main.go:3042:9: should omit type float64 from declaration of var f3; it will be inferred from the right-hand side
main.go:3043:9: should omit type float64 from declaration of var f4; it will be inferred from the right-hand side
main.go:3044:9: should omit type float64 from declaration of var f5; it will be inferred from the right-hand side
main.go:3045:9: should omit type float64 from declaration of var f6; it will be inferred from the right-hand side
main.go:3046:9: should omit type float64 from declaration of var f7; it will be inferred from the right-hand side
main.go:3047:9: should omit type float64 from declaration of var f8; it will be inferred from the right-hand side
main.go:3048:9: should omit type float64 from declaration of var f9; it will be inferred from the right-hand side
main.go:3049:10: should omit type float64 from declaration of var f10; it will be inferred from the right-hand side
main.go:3050:10: should omit type float64 from declaration of var f11; it will be inferred from the right-hand side
main.go:3051:10: should omit type float64 from declaration of var f12; it will be inferred from the right-hand side
main.go:3180:6: don't use underscores in Go names; func compute_reaction_forces should be computeReactionForces
main.go:3185:4: should replace i += 1 with i++
main.go:3193:7: should replace j += 1 with j++
main.go:3208:6: don't use underscores in Go names; func assemble_M should be assembleM
main.go:3211:16: should drop = 0 from declaration of var res; it is the zero value
main.go:3218:6: don't use underscores in Go names; var mass_fn should be massFn
main.go:3218:14: should omit type []byte from declaration of var mass_fn; it will be inferred from the right-hand side
main.go:3221:4: should replace i += 1 with i++
main.go:3225:5: should replace j += 1 with j++
main.go:3236:4: should replace i += 1 with i++
main.go:3255:4: should replace i += 1 with i++
main.go:3269:6: should replace l += 1 with l++
main.go:3275:8: should replace ll += 1 with ll++
main.go:3288:4: should replace j += 1 with j++
main.go:3302:4: should replace i += 1 with i++
main.go:3319:6: don't use underscores in Go names; func lumped_M should be lumpedM
main.go:3342:4: should replace i += 1 with i++
main.go:3346:5: should replace j += 1 with j++
main.go:3456:6: don't use underscores in Go names; func consistent_M should be consistentM
main.go:3479:4: should replace i += 1 with i++
main.go:3483:5: should replace j += 1 with j++
main.go:3652:4: should replace i += 1 with i++
main.go:3660:4: should replace i += 1 with i++
main.go:3669:4: should replace i += 1 with i++
main.go:3674:6: should replace j += 1 with j++
main.go:3705:6: don't use underscores in Go names; func static_condensation should be staticCondensation
main.go:3723:4: should replace i += 1 with i++
main.go:3729:6: should replace j += 1 with j++
main.go:3740:6: should replace k += 1 with k++
main.go:3748:4: should replace i += 1 with i++
main.go:3753:6: should replace j += 1 with j++
main.go:3774:4: should replace i += 1 with i++
main.go:3779:6: should replace j += 1 with j++
main.go:3796:4: should replace i += 1 with i++
main.go:3801:6: should replace j += 1 with j++
main.go:3830:6: don't use underscores in Go names; func paz_condensation should be pazCondensation
main.go:3858:4: should replace i += 1 with i++
main.go:3864:6: should replace j += 1 with j++
main.go:3875:6: should replace k += 1 with k++
main.go:3883:4: should replace i += 1 with i++
main.go:3888:6: should replace j += 1 with j++
main.go:3918:4: should replace i += 1 with i++
main.go:3923:6: should replace j += 1 with j++
main.go:3940:4: should replace i += 1 with i++
main.go:3945:6: should replace j += 1 with j++
main.go:3956:4: should replace i += 1 with i++
main.go:3960:5: should replace j += 1 with j++
main.go:3983:6: don't use underscores in Go names; func modal_condensation should be modalCondensation
main.go:3986:13: should omit type float64 from declaration of var traceM; it will be inferred from the right-hand side
main.go:3987:14: should omit type float64 from declaration of var traceMc; it will be inferred from the right-hand side
main.go:3996:4: should replace i += 1 with i++
main.go:4000:5: should replace j += 1 with j++
main.go:4010:4: should replace i += 1 with i++
main.go:4020:4: should replace i += 1 with i++
main.go:4025:6: should replace j += 1 with j++
main.go:4031:8: should replace k += 1 with k++
main.go:4044:4: should replace i += 1 with i++
main.go:4052:4: should replace i += 1 with i++
main.go:4057:6: should replace j += 1 with j++
main.go:4063:8: should replace k += 1 with k++
main.go:4076:4: should replace i += 1 with i++
main.go:4080:5: should replace j += 1 with j++
main.go:4089:4: should replace i += 1 with i++
main.go:4093:5: should replace j += 1 with j++
main.go:4118:407: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:4118:427: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:4118:447: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:4118:471: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:4244:6: don't use underscores in Go names; func parse_options should be parseOptions
main.go:4244:45: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:4244:61: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:4244:78: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:4244:96: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:4244:113: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:4244:131: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:4244:153: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:4244:168: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:4244:185: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:4244:203: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:4244:223: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:4244:245: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:4244:265: don't use underscores in Go names; func parameter write_matrix should be writeMatrix
main.go:4244:285: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:4244:303: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:4246:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4247:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4497:9: don't use underscores in Go names; func display_help should be displayHelp
main.go:4540:9: don't use underscores in Go names; func display_usage should be displayUsage
main.go:4553:6: don't use underscores in Go names; func display_version should be displayVersion
main.go:4569:6: don't use underscores in Go names; func display_version_about should be displayVersionAbout
main.go:4585:6: don't use underscores in Go names; func read_node_data should be readNodeData
main.go:4588:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4589:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4592:4: should replace i += 1 with i++
main.go:4619:6: don't use underscores in Go names; func read_frame_element_data should be readFrameElementData
main.go:4626:17: should drop = 0 from declaration of var epn0; it is the zero value
main.go:4627:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4628:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4632:4: should replace n += 1 with n++
main.go:4640:4: should replace i += 1 with i++
main.go:4653:4: should replace epn[N1[b]] += 1 with epn[N1[b]]++
main.go:4654:4: should replace epn[N2[b]] += 1 with epn[N2[b]]++
main.go:4723:4: should replace b += 1 with b++
main.go:4745:4: should replace n += 1 with n++
main.go:4751:5: should replace epn0 += 1 with epn0++
main.go:4767:6: don't use underscores in Go names; func read_run_data should be readRunData
main.go:4767:37: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:4767:67: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:4767:95: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:4767:161: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:4767:185: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:4767:249: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:4768:6: don't use underscores in Go names; var full_len should be fullLen
main.go:4768:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:4769:16: should drop = 0 from declaration of var len; it is the zero value
main.go:4771:6: don't use underscores in Go names; var base_file should be baseFile
main.go:4771:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:4772:6: don't use underscores in Go names; var mesh_file should be meshFile
main.go:4772:16: should omit type []byte from declaration of var mesh_file; it will be inferred from the right-hand side
main.go:4773:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4777:4: should replace len += 1 with len++
main.go:4785:4: should replace len -= 1 with len--
main.go:4794:3: should replace len += 1 with len++
main.go:4804:5: should replace len -= 1 with len--
main.go:4813:5: should replace i += 1 with i++
main.go:4816:5: should replace len += 1 with len++
main.go:4870:6: don't use underscores in Go names; func frame3dd_getline should be frame3ddGetline
main.go:4871:14: should drop = 0 from declaration of var c; it is the zero value
main.go:4872:14: should drop = 0 from declaration of var i; it is the zero value
main.go:4875:4: should replace lim -= 1 with lim--
main.go:4882:5: should replace i += 1 with i++
main.go:4899:6: don't use underscores in Go names; func temp_dir should be tempDir
main.go:4900:10: should omit type []byte from declaration of var tmp; it will be inferred from the right-hand side
main.go:4921:6: don't use underscores in Go names; func output_path should be outputPath
main.go:4921:58: don't use underscores in Go names; func parameter default_outdir should be defaultOutdir
main.go:4951:6: don't use underscores in Go names; func parse_input should be parseInput
main.go:4953:11: should omit type []byte from declaration of var line; it will be inferred from the right-hand side
main.go:4954:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4985:6: don't use underscores in Go names; func getline_no_comment should be getlineNoComment
main.go:4986:14: should drop = 0 from declaration of var c; it is the zero value
main.go:4987:14: should drop = 0 from declaration of var i; it is the zero value
main.go:4990:4: should replace lim -= 1 with lim--
main.go:4998:6: should replace i += 1 with i++
main.go:5003:6: should replace i += 1 with i++
main.go:5012:4: should replace lim -= 1 with lim--
main.go:5031:6: don't use underscores in Go names; func read_reaction_data should be readReactionData
main.go:5035:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:5036:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5039:4: should replace i += 1 with i++
main.go:5064:4: should replace i += 1 with i++
main.go:5073:6: should replace l -= 1 with l--
main.go:5095:6: should replace l -= 1 with l--
main.go:5111:4: should replace i += 1 with i++
main.go:5128:4: should replace i += 1 with i++
main.go:5201:6: don't use underscores in Go names; func read_and_assemble_loads should be readAndAssembleLoads
main.go:5201:400: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:5201:420: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:5201:538: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:5201:562: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:5216:20: should drop = 0 from declaration of var Mx1; it is the zero value
main.go:5217:20: should drop = 0 from declaration of var My1; it is the zero value
main.go:5218:20: should drop = 0 from declaration of var Mz1; it is the zero value
main.go:5222:20: should drop = 0 from declaration of var Mx2; it is the zero value
main.go:5223:20: should drop = 0 from declaration of var My2; it is the zero value
main.go:5224:20: should drop = 0 from declaration of var Mz2; it is the zero value
main.go:5245:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:5246:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5249:4: should replace j += 1 with j++
main.go:5257:4: should replace j += 1 with j++
main.go:5261:5: should replace lc += 1 with lc++
main.go:5277:4: should replace i += 1 with i++
main.go:5281:5: should replace n += 1 with n++
main.go:5285:6: should replace lc += 1 with lc++
main.go:5302:4: should replace i += 1 with i++
main.go:5306:5: should replace lc += 1 with lc++
main.go:5315:4: should replace i += 1 with i++
main.go:5319:5: should replace j += 1 with j++
main.go:5328:4: should replace lc += 1 with lc++
main.go:5345:6: should replace n += 1 with n++
main.go:5376:6: should replace i += 1 with i++
main.go:5390:8: should replace l -= 1 with l--
main.go:5423:6: should replace i += 1 with i++
main.go:5438:8: should replace l += 1 with l++
main.go:5519:6: should replace i += 1 with i++
main.go:5534:8: should replace l += 1 with l++
main.go:5672:6: should replace i += 1 with i++
main.go:5687:8: should replace l += 1 with l++
main.go:5771:6: should replace i += 1 with i++
main.go:5786:8: should replace l += 1 with l++
main.go:5852:6: should replace n += 1 with n++
main.go:5859:8: should replace i += 1 with i++
main.go:5867:8: should replace i += 1 with i++
main.go:5875:8: should replace i += 1 with i++
main.go:5883:8: should replace i += 1 with i++
main.go:5902:6: should replace i += 1 with i++
main.go:5911:8: should replace l -= 1 with l--
main.go:5940:6: don't use underscores in Go names; func read_mass_data should be readMassData
main.go:5940:38: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:5940:206: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:5940:228: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:5940:276: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:5940:304: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:5940:334: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:5940:369: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:5940:389: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:5940:456: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:5947:6: don't use underscores in Go names; var full_len should be fullLen
main.go:5947:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:5948:16: should drop = 0 from declaration of var len; it is the zero value
main.go:5949:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:5950:6: don't use underscores in Go names; var base_file should be baseFile
main.go:5950:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:5951:6: don't use underscores in Go names; var mode_file should be modeFile
main.go:5951:16: should omit type []byte from declaration of var mode_file; it will be inferred from the right-hand side
main.go:5952:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6020:4: should replace j += 1 with j++
main.go:6056:4: should replace m += 1 with m++
main.go:6076:4: should replace b += 1 with b++
main.go:6085:4: should replace m += 1 with m++
main.go:6117:4: should replace m += 1 with m++
main.go:6125:4: should replace m += 1 with m++
main.go:6149:4: should replace len += 1 with len++
main.go:6157:4: should replace len -= 1 with len--
main.go:6166:3: should replace len += 1 with len++
main.go:6172:5: should replace len -= 1 with len--
main.go:6181:5: should replace i += 1 with i++
main.go:6184:5: should replace len += 1 with len++
main.go:6223:6: don't use underscores in Go names; func read_condensation_data should be readCondensationData
main.go:6223:99: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:6228:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:6229:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6287:4: should replace i += 1 with i++
main.go:6303:4: should replace i += 1 with i++
main.go:6307:5: should replace j += 1 with j++
main.go:6312:7: should replace (Cdof[0]) += 1 with (Cdof[0])++
main.go:6322:4: should replace i += 1 with i++
main.go:6327:6: should replace j += 1 with j++
main.go:6333:8: should replace k += 1 with k++
main.go:6343:4: should replace i += 1 with i++
main.go:6369:6: don't use underscores in Go names; func write_input_data should be writeInputData
main.go:6378:4: should replace i += 1 with i++
main.go:6393:4: should replace i += 1 with i++
main.go:6404:4: should replace i += 1 with i++
main.go:6415:4: should replace i += 1 with i++
main.go:6428:4: should replace i += 1 with i++
main.go:6441:4: should replace i += 1 with i++
main.go:6453:4: should replace i += 1 with i++
main.go:6472:4: should replace lc += 1 with lc++
main.go:6508:7: should replace j += 1 with j++
main.go:6516:10: should replace i -= 1 with i--
main.go:6533:7: should replace n += 1 with n++
main.go:6539:9: should replace i += 1 with i++
main.go:6555:7: should replace n += 1 with n++
main.go:6561:9: should replace i += 1 with i++
main.go:6571:9: should replace i += 1 with i++
main.go:6581:9: should replace i += 1 with i++
main.go:6597:7: should replace n += 1 with n++
main.go:6603:9: should replace i += 1 with i++
main.go:6620:7: should replace n += 1 with n++
main.go:6627:9: should replace i += 1 with i++
main.go:6644:7: should replace j += 1 with j++
main.go:6652:10: should replace i -= 1 with i--
main.go:6680:6: don't use underscores in Go names; func write_static_results should be writeStaticResults
main.go:6680:189: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:6697:4: should replace j += 1 with j++
main.go:6703:6: should replace i -= 1 with i--
main.go:6713:7: should replace i -= 1 with i--
main.go:6733:4: should replace n += 1 with n++
main.go:6753:6: should replace i += 1 with i++
main.go:6781:6: should replace i += 1 with i++
main.go:6799:4: should replace j += 1 with j++
main.go:6807:7: should replace i -= 1 with i--
main.go:6832:6: don't use underscores in Go names; func CSV_filename should be CSVFilename
main.go:6832:19: don't use underscores in Go names; func parameter CSV_file should be CSVFile
main.go:6832:47: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6845:5: should replace i += 1 with i++
main.go:6849:5: should replace j += 1 with j++
main.go:6855:3: should replace j += 1 with j++
main.go:6873:6: don't use underscores in Go names; func write_static_csv should be writeStaticCsv
main.go:6873:23: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6878:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:6879:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:6879:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:6881:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6906:5: should replace i += 1 with i++
main.go:6926:4: should replace j += 1 with j++
main.go:6932:6: should replace i -= 1 with i--
main.go:6951:4: should replace n += 1 with n++
main.go:6962:6: should replace i += 1 with i++
main.go:6981:6: should replace i += 1 with i++
main.go:6999:4: should replace j += 1 with j++
main.go:7006:6: should replace i -= 1 with i--
main.go:7052:6: don't use underscores in Go names; func write_static_mfile should be writeStaticMfile
main.go:7052:25: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:7058:6: don't use underscores in Go names; var M_file should be MFile
main.go:7058:13: should omit type []byte from declaration of var M_file; it will be inferred from the right-hand side
main.go:7060:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7072:5: should replace i += 1 with i++
main.go:7076:5: should replace j += 1 with j++
main.go:7082:3: should replace j += 1 with j++
main.go:7123:4: should replace j += 1 with j++
main.go:7128:6: should replace i -= 1 with i--
main.go:7152:4: should replace n += 1 with n++
main.go:7162:6: should replace i += 1 with i++
main.go:7179:6: should replace i += 1 with i++
main.go:7201:4: should replace j += 1 with j++
main.go:7207:6: should replace i -= 1 with i--
main.go:7311:6: don't use underscores in Go names; func peak_internal_forces should be peakInternalForces
main.go:7345:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:7346:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:7347:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:7348:6: don't use underscores in Go names; var wx_ should be wx
main.go:7348:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:7349:6: don't use underscores in Go names; var wy_ should be wy
main.go:7349:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:7350:6: don't use underscores in Go names; var wz_ should be wz
main.go:7350:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:7351:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:7352:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:7353:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:7354:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:7355:6: don't use underscores in Go names; var tx_ should be tx
main.go:7355:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:7358:6: don't use underscores in Go names; var Nx_ should be Nx
main.go:7360:6: don't use underscores in Go names; var Vy_ should be Vy
main.go:7362:6: don't use underscores in Go names; var Vz_ should be Vz
main.go:7364:6: don't use underscores in Go names; var Tx_ should be Tx
main.go:7366:6: don't use underscores in Go names; var My_ should be My
main.go:7368:6: don't use underscores in Go names; var Mz_ should be Mz
main.go:7370:6: don't use underscores in Go names; var Sy_ should be Sy
main.go:7372:6: don't use underscores in Go names; var Sz_ should be Sz
main.go:7380:9: should omit type int from declaration of var nx; it will be inferred from the right-hand side
main.go:7381:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:7382:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:7383:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:7394:4: should replace m += 1 with m++
main.go:7449:4: should replace m += 1 with m++
main.go:7461:6: should replace n += 1 with n++
main.go:7469:8: should replace cU += 1 with cU++
main.go:7559:6: should replace i += 1 with i++
main.go:7574:8: should replace n += 1 with n++
main.go:7580:11: should replace cW += 1 with cW++
main.go:7618:8: should replace n += 1 with n++
main.go:7624:11: should replace cP += 1 with cP++
main.go:7665:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7672:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7679:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7686:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7693:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7700:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7707:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7714:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7721:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7728:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7735:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7742:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7756:4: should replace m += 1 with m++
main.go:7767:4: should replace m += 1 with m++
main.go:7858:6: don't use underscores in Go names; func write_internal_forces should be writeInternalForces
main.go:7858:28: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:7892:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:7893:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:7894:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:7895:6: don't use underscores in Go names; var wx_ should be wx
main.go:7895:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:7896:6: don't use underscores in Go names; var wy_ should be wy
main.go:7896:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:7897:6: don't use underscores in Go names; var wz_ should be wz
main.go:7897:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:7898:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:7899:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:7900:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:7901:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:7902:6: don't use underscores in Go names; var tx_ should be tx
main.go:7902:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:7905:6: don't use underscores in Go names; var dx_ should be dx
main.go:7945:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:7946:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:7947:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:7954:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:7955:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:7955:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:7956:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7957:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:8001:4: should replace m += 1 with m++
main.go:8025:6: should replace i += 1 with i++
main.go:8041:6: should replace n += 1 with n++
main.go:8049:8: should replace cU += 1 with cU++
main.go:8064:6: should replace i += 1 with i++
main.go:8078:8: should replace n += 1 with n++
main.go:8084:11: should replace cW += 1 with cW++
main.go:8125:8: should replace n += 1 with n++
main.go:8131:11: should replace cP += 1 with cP++
main.go:8153:6: should replace i += 1 with i++
main.go:8165:6: should replace i += 1 with i++
main.go:8177:6: should replace i += 1 with i++
main.go:8207:6: should replace i += 1 with i++
main.go:8218:6: should replace i += 1 with i++
main.go:8227:6: should replace i += 1 with i++
main.go:8238:6: should replace i += 1 with i++
main.go:8247:6: should replace i += 1 with i++
main.go:8259:6: should replace i += 1 with i++
main.go:8269:7: should replace i += 1 with i++
main.go:8280:6: should replace i += 1 with i++
main.go:8292:6: should replace i += 1 with i++
main.go:8397:6: should replace i += 1 with i++
main.go:8403:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8410:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8417:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8424:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8431:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8438:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8445:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8452:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8459:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8466:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8473:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8480:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8488:6: should replace i += 1 with i++
main.go:8494:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8501:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8508:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8515:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8522:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8529:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8536:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8543:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8550:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8557:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8564:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8571:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8583:6: should replace i += 1 with i++
main.go:8621:6: don't use underscores in Go names; func write_modal_results should be writeModalResults
main.go:8621:119: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:8621:139: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:8626:6: don't use underscores in Go names; var num_modes should be numModes
main.go:8639:4: should replace i += 1 with i++
main.go:8685:4: should replace j += 1 with j++
main.go:8692:6: should replace i += 1 with i++
main.go:8711:4: should replace m += 1 with m++
main.go:8717:6: should replace i += 1 with i++
main.go:8726:6: should replace i += 1 with i++
main.go:8735:6: should replace i += 1 with i++
main.go:8749:6: should replace j += 1 with j++
main.go:8755:8: should replace i -= 1 with i--
main.go:8820:8: don't use underscores in Go names; func static_mesh should be staticMesh
main.go:8820:20: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:8820:213: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:8820:235: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:8821:26: should drop = nil from declaration of var fpif; it is the zero value
main.go:8822:25: should drop = nil from declaration of var fpm; it is the zero value
main.go:8826:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:8827:13: should omit type []byte from declaration of var meshfl; it will be inferred from the right-hand side
main.go:8830:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:8832:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:8843:14: should drop = 0 from declaration of var j; it is the zero value
main.go:8844:14: should drop = 0 from declaration of var m; it is the zero value
main.go:8845:14: should drop = 0 from declaration of var n; it is the zero value
main.go:8846:14: should drop = 0 from declaration of var X; it is the zero value
main.go:8847:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:8848:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:8849:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:8854:4: should replace j += 1 with j++
main.go:8915:5: should replace j += 1 with j++
main.go:8924:5: should replace m += 1 with m++
main.go:8986:5: should replace m += 1 with m++
main.go:9030:4: should replace m += 1 with m++
main.go:9076:6: don't use underscores in Go names; func modal_mesh should be modalMesh
main.go:9076:17: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:9076:232: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:9076:253: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:9089:14: should drop = 0 from declaration of var X; it is the zero value
main.go:9090:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:9091:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:9092:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:9095:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:9096:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9103:4: should replace i += 1 with i++
main.go:9140:4: should replace m += 1 with m++
main.go:9161:6: should replace i += 1 with i++
main.go:9170:6: should replace i += 1 with i++
main.go:9179:6: should replace i += 1 with i++
main.go:9191:6: should replace i += 1 with i++
main.go:9200:6: should replace n += 1 with n++
main.go:9210:6: should replace j += 1 with j++
main.go:9291:14: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:9291:226: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:9291:247: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:9293:6: don't use underscores in Go names; var x_min should be xMin
main.go:9293:12: should omit type float32 from declaration of var x_min; it will be inferred from the right-hand side
main.go:9294:6: don't use underscores in Go names; var x_max should be xMax
main.go:9294:12: should omit type float32 from declaration of var x_max; it will be inferred from the right-hand side
main.go:9295:6: don't use underscores in Go names; var y_min should be yMin
main.go:9295:12: should omit type float32 from declaration of var y_min; it will be inferred from the right-hand side
main.go:9296:6: don't use underscores in Go names; var y_max should be yMax
main.go:9296:12: should omit type float32 from declaration of var y_max; it will be inferred from the right-hand side
main.go:9297:6: don't use underscores in Go names; var z_min should be zMin
main.go:9297:12: should omit type float32 from declaration of var z_min; it will be inferred from the right-hand side
main.go:9298:6: don't use underscores in Go names; var z_max should be zMax
main.go:9298:12: should omit type float32 from declaration of var z_max; it will be inferred from the right-hand side
main.go:9299:11: should omit type float32 from declaration of var Dxyz; it will be inferred from the right-hand side
main.go:9300:6: don't use underscores in Go names; var rot_x_init should be rotXInit
main.go:9300:17: should omit type float32 from declaration of var rot_x_init; it will be inferred from the right-hand side
main.go:9301:6: don't use underscores in Go names; var rot_x_final should be rotXFinal
main.go:9301:18: should omit type float32 from declaration of var rot_x_final; it will be inferred from the right-hand side
main.go:9302:6: don't use underscores in Go names; var rot_z_init should be rotZInit
main.go:9302:17: should omit type float32 from declaration of var rot_z_init; it will be inferred from the right-hand side
main.go:9303:6: don't use underscores in Go names; var rot_z_final should be rotZFinal
main.go:9303:18: should omit type float32 from declaration of var rot_z_final; it will be inferred from the right-hand side
main.go:9304:6: don't use underscores in Go names; var zoom_init should be zoomInit
main.go:9304:16: should omit type float32 from declaration of var zoom_init; it will be inferred from the right-hand side
main.go:9305:6: don't use underscores in Go names; var zoom_final should be zoomFinal
main.go:9305:17: should omit type float32 from declaration of var zoom_final; it will be inferred from the right-hand side
main.go:9306:13: should omit type float32 from declaration of var frames; it will be inferred from the right-hand side
main.go:9307:9: should omit type float64 from declaration of var ex; it will be inferred from the right-hand side
main.go:9314:14: should drop = 0 from declaration of var X; it is the zero value
main.go:9315:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:9316:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:9318:13: should omit type int from declaration of var CYCLES; it will be inferred from the right-hand side
main.go:9319:6: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9319:25: should drop = 0 from declaration of var frame_number; it is the zero value
main.go:9320:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:9321:6: don't use underscores in Go names; var total_frames should be totalFrames
main.go:9325:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:9326:14: should omit type []byte from declaration of var framefl; it will be inferred from the right-hand side
main.go:9327:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9330:4: should replace j += 1 with j++
main.go:9446:6: should replace c += 1 with c++
main.go:9451:8: should replace fr += 1 with fr++
main.go:9455:9: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9455:9: should replace frame_number += 1 with frame_number++
main.go:9478:8: should replace fr -= 1 with fr--
main.go:9482:9: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9482:9: should replace frame_number += 1 with frame_number++
main.go:9508:5: should replace i += 1 with i++
main.go:9523:6: should replace fr += 1 with fr++
main.go:9544:8: should replace j += 1 with j++
main.go:9553:8: should replace n += 1 with n++
main.go:9564:5: should replace i += 1 with i++
main.go:9584:6: don't use underscores in Go names; func cubic_bent_beam should be cubicBentBeam
main.go:9618:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9698:6: don't use underscores in Go names; func force_bent_beam should be forceBentBeam
main.go:9727:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:9743:7: should replace n += 1 with n++
main.go:9777:6: don't use underscores in Go names; func my_itoa should be myItoa
main.go:9792:5: should replace i += 1 with i++
main.go:9800:5: should replace i += 1 with i++
main.go:9807:4: should replace i += 1 with i++
main.go:9816:5: should replace j += 1 with j++
main.go:9822:3: should replace j -= 1 with j--
main.go:9831:5: should replace i += 1 with i++
main.go:9835:5: should replace j -= 1 with j--
main.go:9853:8: don't use underscores in Go names; func get_file_ext should be getFileExt
main.go:9854:14: should drop = 0 from declaration of var i; it is the zero value
main.go:9855:6: don't use underscores in Go names; var full_len should be fullLen
main.go:9855:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:9856:16: should drop = 0 from declaration of var len; it is the zero value
main.go:9859:4: should replace len += 1 with len++
main.go:9867:4: should replace len -= 1 with len--
main.go:9876:3: should replace len += 1 with len++
main.go:9883:5: should replace i += 1 with i++
main.go:9887:5: should replace len += 1 with len++
main.go:9908:4: should replace i += 1 with i++
main.go:9919:33: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:10278:6: don't use underscores in Go names; func coord_trans should be coordTrans
main.go:10340:4: should replace i += 1 with i++
main.go:10344:5: should replace j += 1 with j++
main.go:10368:4: should replace i += 1 with i++
main.go:10384:4: should replace j += 1 with j++
main.go:10388:5: should replace i += 1 with i++
main.go:10392:6: should replace k += 1 with k++
main.go:10402:4: should replace i += 1 with i++
main.go:10406:5: should replace j += 1 with j++
main.go:10422:4: should replace j += 1 with j++
main.go:10426:5: should replace i += 1 with i++
main.go:10430:6: should replace k += 1 with k++
main.go:10498:6: don't use underscores in Go names; var km_old should be kmOld
main.go:10500:6: don't use underscores in Go names; var w_old should be wOld
main.go:10500:22: should drop = 0 from declaration of var w_old; it is the zero value
main.go:10501:14: should drop = 0 from declaration of var i; it is the zero value
main.go:10502:14: should drop = 0 from declaration of var j; it is the zero value
main.go:10503:14: should drop = 0 from declaration of var k; it is the zero value
main.go:10505:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:10507:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:10523:4: should replace i += 1 with i++
main.go:10529:6: should replace j += 1 with j++
main.go:10562:4: should replace i += 1 with i++
main.go:10566:5: should replace j += 1 with j++
main.go:10583:10: if block ends with a return statement, so drop this else and outdent its block
main.go:10589:4: should replace i += 1 with i++
main.go:10593:5: should replace j += 1 with j++
main.go:10603:4: should replace i += 1 with i++
main.go:10617:4: should replace k += 1 with k++
main.go:10623:6: should replace i += 1 with i++
main.go:10630:9: should replace j += 1 with j++
main.go:10649:7: should replace j += 1 with j++
main.go:10665:4: should replace k += 1 with k++
main.go:10722:6: should replace k += 1 with k++
main.go:10747:8: should replace i += 1 with i++
main.go:10767:5: should replace (iter[0]) += 1 with (iter[0])++
main.go:10786:4: should replace k += 1 with k++
main.go:10800:5: should replace k += 1 with k++
main.go:10810:4: should replace i += 1 with i++
main.go:10814:5: should replace j += 1 with j++
main.go:10859:20: should drop = 0 from declaration of var tol; it is the zero value
main.go:10894:4: should replace i += 1 with i++
main.go:10898:5: should replace j += 1 with j++
main.go:10914:4: should replace d += 1 with d++
main.go:10922:4: should replace iter += 1 with iter++
main.go:10929:6: should replace d += 1 with d++
main.go:10934:8: should replace i += 1 with i++
main.go:10955:11: should replace k += 1 with k++
main.go:10973:4: should replace j += 1 with j++
main.go:10979:6: should replace i += 1 with i++
main.go:10989:4: should replace j += 1 with j++
main.go:11015:4: should replace k += 1 with k++
main.go:11029:4: should replace k += 1 with k++
main.go:11078:6: don't use underscores in Go names; var d_min should be dMin
main.go:11078:22: should drop = 0 from declaration of var d_min; it is the zero value
main.go:11079:6: don't use underscores in Go names; var d_max should be dMax
main.go:11079:22: should drop = 0 from declaration of var d_max; it is the zero value
main.go:11080:6: don't use underscores in Go names; var d_old should be dOld
main.go:11080:22: should drop = 0 from declaration of var d_old; it is the zero value
main.go:11087:22: should drop = 0 from declaration of var RQold; it is the zero value
main.go:11089:6: don't use underscores in Go names; var i_ex should be iEx
main.go:11089:11: should omit type int from declaration of var i_ex; it will be inferred from the right-hand side
main.go:11091:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:11095:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:11104:10: if block ends with a return statement, so drop this else and outdent its block
main.go:11110:4: should replace i += 1 with i++
main.go:11114:5: should replace j += 1 with j++
main.go:11129:4: should replace j += 1 with j++
main.go:11134:6: should replace i += 1 with i++
main.go:11161:6: should replace i += 1 with i++
main.go:11172:4: should replace i += 1 with i++
main.go:11190:4: should replace i += 1 with i++
main.go:11200:4: should replace k += 1 with k++
main.go:11206:6: should replace i += 1 with i++
main.go:11222:6: should replace i += 1 with i++
main.go:11230:6: should replace j += 1 with j++
main.go:11235:8: should replace i += 1 with i++
main.go:11246:6: should replace j += 1 with j++
main.go:11250:7: should replace i += 1 with i++
main.go:11260:6: should replace i += 1 with i++
main.go:11271:8: should replace i += 1 with i++
main.go:11277:10: should replace j += 1 with j++
main.go:11288:8: should replace i += 1 with i++
main.go:11296:8: should replace j += 1 with j++
main.go:11301:10: should replace i += 1 with i++
main.go:11312:8: should replace j += 1 with j++
main.go:11316:9: should replace i += 1 with i++
main.go:11326:8: should replace i += 1 with i++
main.go:11335:7: should replace (iter[0]) += 1 with (iter[0])++
main.go:11350:6: should replace i += 1 with i++
main.go:11387:8: should omit type float64 from declaration of var p; it will be inferred from the right-hand side
main.go:11390:4: should replace i += 1 with i++
main.go:11397:6: should replace j += 1 with j++
main.go:11413:7: should replace j += 1 with j++
main.go:11443:6: don't use underscores in Go names; var ws_shift should be wsShift
main.go:11445:15: should drop = 0 from declaration of var ok; it is the zero value
main.go:11453:10: if block ends with a return statement, so drop this else and outdent its block
main.go:11460:4: should replace i += 1 with i++
main.go:11464:5: should replace j += 1 with j++
main.go:11486:4: should replace i += 1 with i++
main.go:11490:5: should replace j += 1 with j++
main.go:11504:85: don't use underscores in Go names; func check_non_negative should be checkNonNegative
main.go:11567:11: should omit type int from declaration of var icol; it will be inferred from the right-hand side
main.go:11568:11: should omit type int from declaration of var irow; it will be inferred from the right-hand side
main.go:11582:4: should replace j += 1 with j++
main.go:11590:4: should replace i += 1 with i++
main.go:11596:6: should replace j += 1 with j++
main.go:11601:8: should replace k += 1 with k++
main.go:11620:5: should replace (ipiv[icol]) += 1 with (ipiv[icol])++
main.go:11626:7: should replace l += 1 with l++
main.go:11636:7: should replace l += 1 with l++
main.go:11654:6: should replace l += 1 with l++
main.go:11662:6: should replace l += 1 with l++
main.go:11670:6: should replace ll += 1 with ll++
main.go:11678:9: should replace l += 1 with l++
main.go:11686:9: should replace l += 1 with l++
main.go:11699:4: should replace l -= 1 with l--
main.go:11704:6: should replace k += 1 with k++
main.go:11739:6: don't use underscores in Go names; func lu_dcmp should be luDcmp
main.go:11748:5: should replace k += 1 with k++
main.go:11762:7: should replace i += 1 with i++
main.go:11768:9: should replace j += 1 with j++
main.go:11782:5: should replace k += 1 with k++
main.go:11786:6: should replace i += 1 with i++
main.go:11795:5: should replace j -= 1 with j--
main.go:11799:6: should replace i += 1 with i++
main.go:11808:5: should replace i += 1 with i++
main.go:11844:6: don't use underscores in Go names; func ldl_dcmp should be ldlDcmp
main.go:11853:5: should replace j += 1 with j++
main.go:11860:7: should replace i += 1 with i++
main.go:11865:9: should replace m += 1 with m++
main.go:11875:7: should replace i += 1 with i++
main.go:11881:9: should replace k += 1 with k++
main.go:11892:7: should replace i += 1 with i++
main.go:11900:7: should replace i += 1 with i++
main.go:11913:7: should replace (pd[0]) -= 1 with (pd[0])--
main.go:11923:5: should replace i += 1 with i++
main.go:11929:7: should replace j += 1 with j++
main.go:11939:5: should replace i += 1 with i++
main.go:11947:5: should replace i -= 1 with i--
main.go:11951:6: should replace j += 1 with j++
main.go:11977:6: don't use underscores in Go names; func ldl_mprove should be ldlMprove
main.go:11977:78: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:11980:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:11980:20: should omit type float64 from declaration of var rms_resid_new; it will be inferred from the right-hand side
main.go:11987:4: should replace i += 1 with i++
main.go:11993:6: should replace j += 1 with j++
main.go:12009:4: should replace i += 1 with i++
main.go:12012:4: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12020:5: should replace i += 1 with i++
main.go:12061:6: don't use underscores in Go names; func ldl_dcmp_pm should be ldlDcmpPm
main.go:12070:5: should replace j += 1 with j++
main.go:12079:8: should replace i += 1 with i++
main.go:12084:10: should replace m += 1 with m++
main.go:12094:8: should replace i += 1 with i++
main.go:12101:11: should replace k += 1 with k++
main.go:12115:8: should replace i += 1 with i++
main.go:12125:8: should replace i += 1 with i++
main.go:12140:8: should replace (pd[0]) -= 1 with (pd[0])--
main.go:12151:5: should replace i += 1 with i++
main.go:12158:8: should replace j += 1 with j++
main.go:12171:5: should replace i += 1 with i++
main.go:12176:7: should replace j += 1 with j++
main.go:12188:5: should replace i += 1 with i++
main.go:12198:5: should replace i -= 1 with i--
main.go:12203:7: should replace j += 1 with j++
main.go:12215:5: should replace i += 1 with i++
main.go:12223:8: should replace j += 1 with j++
main.go:12272:6: don't use underscores in Go names; func ldl_mprove_pm should be ldlMprovePm
main.go:12272:112: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:12276:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12276:30: should drop = 0 from declaration of var rms_resid_new; it is the zero value
main.go:12284:4: should replace i += 1 with i++
main.go:12292:4: should replace i += 1 with i++
main.go:12299:7: should replace j += 1 with j++
main.go:12313:7: should replace j += 1 with j++
main.go:12328:4: should replace i += 1 with i++
main.go:12332:5: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12341:5: should replace i += 1 with i++
main.go:12369:6: don't use underscores in Go names; func PSB_update should be PSBUpdate
main.go:12372:20: should drop = 0 from declaration of var dtd; it is the zero value
main.go:12373:20: should drop = 0 from declaration of var ftd; it is the zero value
main.go:12374:21: should drop = 0 from declaration of var dtd2; it is the zero value
main.go:12377:4: should replace i += 1 with i++
main.go:12386:4: should replace i += 1 with i++
main.go:12394:4: should replace i += 1 with i++
main.go:12398:5: should replace j += 1 with j++
main.go:12417:6: don't use underscores in Go names; func pseudo_inv should be pseudoInv
main.go:12424:6: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:12424:23: should drop = 0 from declaration of var tr_AtA; it is the zero value
main.go:12440:4: should replace i += 1 with i++
main.go:12457:6: should replace j += 1 with j++
main.go:12474:4: should replace i += 1 with i++
main.go:12479:6: should replace j += 1 with j++
main.go:12485:8: should replace k += 1 with k++
main.go:12498:4: should replace i += 1 with i++
main.go:12502:5: should replace j += 1 with j++
main.go:12519:4: should replace i += 1 with i++
main.go:12522:4: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:12527:4: should replace i += 1 with i++
main.go:12536:4: should replace j += 1 with j++
main.go:12541:6: should replace k += 1 with k++
main.go:12567:6: should replace k += 1 with k++
main.go:12577:4: should replace i += 1 with i++
main.go:12581:5: should replace j += 1 with j++
main.go:12597:4: should replace i += 1 with i++
main.go:12602:6: should replace j += 1 with j++
main.go:12608:8: should replace k += 1 with k++
main.go:12636:4: should replace i += 1 with i++
main.go:12644:4: should replace i += 1 with i++
main.go:12649:6: should replace k += 1 with k++
main.go:12673:4: should replace i += 1 with i++
main.go:12677:5: should replace k += 1 with k++
main.go:12686:4: should replace i += 1 with i++
main.go:12690:5: should replace k += 1 with k++
main.go:12694:6: should replace j += 1 with j++
main.go:12726:4: should replace i += 1 with i++
main.go:12746:4: should replace j += 1 with j++
main.go:12751:6: should replace k += 1 with k++
main.go:12778:6: should replace i += 1 with i++
main.go:12813:4: should replace i += 1 with i++
main.go:12829:4: should replace j += 1 with j++
main.go:12834:6: should replace k += 1 with k++
main.go:12861:6: should replace i += 1 with i++
main.go:12867:8: should replace k += 1 with k++
main.go:12886:9: don't use underscores in Go names; func coord_xfrm should be coordXfrm
main.go:12892:4: should replace i += 1 with i++
main.go:12917:4: should replace i += 1 with i++
main.go:12921:5: should replace j += 1 with j++
main.go:12930:4: should replace i += 1 with i++
main.go:12934:5: should replace j += 1 with j++
main.go:12943:4: should replace i += 1 with i++
main.go:12948:6: should replace j += 1 with j++
main.go:12953:8: should replace k += 1 with k++
main.go:12969:4: should replace i += 1 with i++
main.go:12973:5: should replace j += 1 with j++
main.go:12977:6: should replace k += 1 with k++
main.go:12987:4: should replace i += 1 with i++
main.go:12991:5: should replace j += 1 with j++
main.go:13015:21: should drop = 0 from declaration of var xtAy; it is the zero value
main.go:13020:4: should replace i += 1 with i++
main.go:13026:6: should replace j += 1 with j++
main.go:13040:4: should replace i += 1 with i++
main.go:13077:4: should replace i += 1 with i++
main.go:13094:6: should replace j += 1 with j++
main.go:13112:4: should replace j += 1 with j++
main.go:13117:6: should replace k += 1 with k++
main.go:13145:6: should replace k += 1 with k++
main.go:13155:4: should replace i += 1 with i++
main.go:13159:5: should replace j += 1 with j++
main.go:13175:4: should replace i += 1 with i++
main.go:13180:6: should replace j += 1 with j++
main.go:13186:8: should replace k += 1 with k++
main.go:13199:4: should replace i += 1 with i++
main.go:13204:6: should replace j += 1 with j++
main.go:13210:8: should replace k += 1 with k++
main.go:13223:4: should replace i += 1 with i++
main.go:13227:5: should replace j += 1 with j++
main.go:13254:9: don't use underscores in Go names; func relative_norm should be relativeNorm
main.go:13255:19: should drop = 0 from declaration of var nN; it is the zero value
main.go:13256:19: should drop = 0 from declaration of var nD; it is the zero value
main.go:13260:4: should replace i += 1 with i++
main.go:13268:4: should replace i += 1 with i++
main.go:13287:4: should replace p += 1 with p++
main.go:13304:6: should replace k += 1 with k++
main.go:13466:17: should omit type []byte from declaration of var pathToFile; it will be inferred from the right-hand side
main.go:13467:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:13513:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13514:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:13517:4: should replace lim -= 1 with lim--
main.go:13524:5: should replace i += 1 with i++
main.go:13530:3: should replace i += 1 with i++
main.go:13542:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13543:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:13546:4: should replace lim -= 1 with lim--
main.go:13556:4: should replace lim -= 1 with lim--
main.go:13563:5: should replace i += 1 with i++
main.go:13569:3: should replace i += 1 with i++
main.go:13582:32: don't use underscores in Go names; func parameter head_lines should be headLines
main.go:13582:48: don't use underscores in Go names; func parameter start_chnl should be startChnl
main.go:13582:64: don't use underscores in Go names; func parameter stop_chnl should be stopChnl
main.go:13583:19: should drop = 0 from declaration of var points; it is the zero value
main.go:13586:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:13587:6: don't use underscores in Go names; var data_value should be dataValue
main.go:13591:4: should replace i += 1 with i++
main.go:13605:6: should replace chn += 1 with chn++
main.go:13611:8: should replace points += 1 with points++
main.go:13640:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13641:14: should drop = 0 from declaration of var i; it is the zero value
main.go:13644:4: should replace lim -= 1 with lim--
main.go:13651:5: should replace i += 1 with i++
main.go:13657:3: should replace i += 1 with i++
main.go:13672:11: should omit type []byte from declaration of var temp; it will be inferred from the right-hand side
main.go:13673:6: don't use underscores in Go names; var t_tm should be tTm
main.go:13674:6: don't use underscores in Go names; var t_time should be tTime
main.go:13693:6: don't use underscores in Go names; var line_length should be lineLength
main.go:13693:18: should omit type int from declaration of var line_length; it will be inferred from the right-hand side
main.go:13694:6: don't use underscores in Go names; var percent_done should be percentDone
main.go:13699:4: should replace k += 1 with k++
main.go:13707:4: should replace k += 1 with k++
main.go:13715:4: should replace k += 1 with k++
main.go:13731:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:13737:6: don't use underscores in Go names; type ptrdiff_t should be ptrdiffT
main.go:13738:6: don't use underscores in Go names; type max_align_t should be maxAlignT
main.go:13739:2: don't use underscores in Go names; struct field __clang_max_align_nonce1 should be _ClangMaxAlignNonce1
main.go:13740:2: don't use underscores in Go names; struct field __clang_max_align_nonce2 should be _ClangMaxAlignNonce2
main.go:13749:14: don't use underscores in Go names; func parameter error_text should be errorText
main.go:13835:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13836:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13860:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13861:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13885:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13886:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13909:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13910:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13922:5: should replace i += 1 with i++
main.go:13926:5: should replace j += 1 with j++
main.go:13944:6: don't use underscores in Go names; func convert_matrix should be convertMatrix
main.go:13947:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13948:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13960:5: should replace i += 1 with i++
main.go:13964:5: should replace j += 1 with j++
main.go:13990:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13991:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13992:11: should omit type int32 from declaration of var ndep; it will be inferred from the right-hand side
main.go:14011:4: should replace i += 1 with i++
main.go:14025:6: don't use underscores in Go names; func free_vector should be freeVector
main.go:14034:6: don't use underscores in Go names; func free_ivector should be freeIvector
main.go:14043:6: don't use underscores in Go names; func free_cvector should be freeCvector
main.go:14052:6: don't use underscores in Go names; func free_lvector should be freeLvector
main.go:14061:6: don't use underscores in Go names; func free_dvector should be freeDvector
main.go:14074:6: don't use underscores in Go names; func free_matrix should be freeMatrix
main.go:14087:6: don't use underscores in Go names; func free_dmatrix should be freeDmatrix
main.go:14100:6: don't use underscores in Go names; func free_imatrix should be freeImatrix
main.go:14109:6: don't use underscores in Go names; func free_subMatrix should be freeSubMatrix
main.go:14118:6: don't use underscores in Go names; func free_convert_matrix should be freeConvertMatrix
main.go:14135:6: don't use underscores in Go names; func free_f3tensor should be freeF3tensor
main.go:14140:30: exported func Cvector returns unexported type []main.fcomplex, which can be annoying to use
main.go:14151:50: exported func Cmatrix returns unexported type [][]main.fcomplex, which can be annoying to use
main.go:14161:4: should replace i += 1 with i++
main.go:14187:4: should replace i += 1 with i++
main.go:14197:6: should replace j += 1 with j++
main.go:14225:4: should replace i += 1 with i++
main.go:14235:6: should replace j += 1 with j++
main.go:14251:6: don't use underscores in Go names; func free_Cvector should be freeCvector
main.go:14256:6: don't use underscores in Go names; func free_Cmatrix should be freeCmatrix
main.go:14260:4: should replace i -= 1 with i--
main.go:14270:6: don't use underscores in Go names; func free_D3matrix should be freeD3matrix
main.go:14275:4: should replace i -= 1 with i--
main.go:14280:6: should replace j -= 1 with j--
main.go:14291:6: don't use underscores in Go names; func free_D3dmatrix should be freeD3dmatrix
main.go:14296:4: should replace i -= 1 with i--
main.go:14301:6: should replace j -= 1 with j--
main.go:14314:9: don't use underscores in Go names; func show_vector should be showVector
main.go:14318:4: should replace j += 1 with j++
main.go:14335:9: don't use underscores in Go names; func show_dvector should be showDvector
main.go:14339:4: should replace j += 1 with j++
main.go:14356:9: don't use underscores in Go names; func show_ivector should be showIvector
main.go:14360:4: should replace j += 1 with j++
main.go:14377:9: don't use underscores in Go names; func show_matrix should be showMatrix
main.go:14382:4: should replace i += 1 with i++
main.go:14387:6: should replace j += 1 with j++
main.go:14410:9: don't use underscores in Go names; func show_dmatrix should be showDmatrix
main.go:14415:4: should replace i += 1 with i++
main.go:14420:6: should replace j += 1 with j++
main.go:14443:9: don't use underscores in Go names; func save_vector should be saveVector
main.go:14444:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14461:4: should replace i += 1 with i++
main.go:14479:9: don't use underscores in Go names; func save_dvector should be saveDvector
main.go:14480:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14497:4: should replace i += 1 with i++
main.go:14515:9: don't use underscores in Go names; func save_ivector should be saveIvector
main.go:14516:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14533:4: should replace i += 1 with i++
main.go:14551:9: don't use underscores in Go names; func save_matrix should be saveMatrix
main.go:14552:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14583:5: should replace j += 1 with j++
main.go:14588:7: should replace i += 1 with i++
main.go:14604:5: should replace i += 1 with i++
main.go:14609:7: should replace j += 1 with j++
main.go:14630:9: don't use underscores in Go names; func save_dmatrix should be saveDmatrix
main.go:14631:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14662:5: should replace j += 1 with j++
main.go:14667:7: should replace i += 1 with i++
main.go:14683:5: should replace i += 1 with i++
main.go:14688:7: should replace j += 1 with j++
main.go:14711:9: don't use underscores in Go names; func save_ut_matrix should be saveUtMatrix
main.go:14712:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14730:4: should replace i += 1 with i++
main.go:14735:6: should replace j += 1 with j++
main.go:14765:9: don't use underscores in Go names; func save_ut_dmatrix should be saveUtDmatrix
main.go:14766:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14784:4: should replace i += 1 with i++
main.go:14789:6: should replace j += 1 with j++
