main.go:129:6: don't use underscores in Go names; type float_t should be floatT
main.go:130:6: don't use underscores in Go names; type double_t should be doubleT
main.go:132:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:132:7: exported const FP_NAN should have comment or be unexported
main.go:133:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:133:7: exported const FP_INFINITE should have comment or be unexported
main.go:134:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:134:7: exported const FP_ZERO should have comment or be unexported
main.go:135:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:135:7: exported const FP_SUBNORMAL should have comment or be unexported
main.go:136:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:136:7: exported const FP_NORMAL should have comment or be unexported
main.go:137:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:138:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:139:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:140:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:141:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:143:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:145:2: don't use underscores in Go names; struct field type_ should be type
main.go:151:6: don't use underscores in Go names; type size_t should be sizeT
main.go:152:6: don't use underscores in Go names; type __u_char should be _UChar
main.go:153:6: don't use underscores in Go names; type __u_short should be _UShort
main.go:154:6: don't use underscores in Go names; type __u_int should be _UInt
main.go:155:6: don't use underscores in Go names; type __u_long should be _ULong
main.go:156:6: don't use underscores in Go names; type __int8_t should be _Int8T
main.go:157:6: don't use underscores in Go names; type __uint8_t should be _Uint8T
main.go:158:6: don't use underscores in Go names; type __int16_t should be _Int16T
main.go:159:6: don't use underscores in Go names; type __uint16_t should be _Uint16T
main.go:160:6: don't use underscores in Go names; type __int32_t should be _Int32T
main.go:161:6: don't use underscores in Go names; type __uint32_t should be _Uint32T
main.go:162:6: don't use underscores in Go names; type __int64_t should be _Int64T
main.go:163:6: don't use underscores in Go names; type __uint64_t should be _Uint64T
main.go:164:6: don't use underscores in Go names; type __quad_t should be _QuadT
main.go:165:6: don't use underscores in Go names; type __u_quad_t should be _UQuadT
main.go:166:6: don't use underscores in Go names; type __dev_t should be _DevT
main.go:167:6: don't use underscores in Go names; type __uid_t should be _UIDT
main.go:168:6: don't use underscores in Go names; type __gid_t should be _GidT
main.go:169:6: don't use underscores in Go names; type __ino_t should be _InoT
main.go:170:6: don't use underscores in Go names; type __ino64_t should be _Ino64T
main.go:171:6: don't use underscores in Go names; type __mode_t should be _ModeT
main.go:172:6: don't use underscores in Go names; type __nlink_t should be _NlinkT
main.go:173:6: don't use underscores in Go names; type __off_t should be _OffT
main.go:174:6: don't use underscores in Go names; type __off64_t should be _Off64T
main.go:175:6: don't use underscores in Go names; type __pid_t should be _PidT
main.go:176:6: don't use underscores in Go names; type __fsid_t should be _FsidT
main.go:177:2: don't use underscores in Go names; struct field __val should be _Val
main.go:179:6: don't use underscores in Go names; type __clock_t should be _ClockT
main.go:180:6: don't use underscores in Go names; type __rlim_t should be _RlimT
main.go:181:6: don't use underscores in Go names; type __rlim64_t should be _Rlim64T
main.go:182:6: don't use underscores in Go names; type __id_t should be _IDT
main.go:183:6: don't use underscores in Go names; type __time_t should be _TimeT
main.go:184:6: don't use underscores in Go names; type __useconds_t should be _UsecondsT
main.go:185:6: don't use underscores in Go names; type __suseconds_t should be _SusecondsT
main.go:186:6: don't use underscores in Go names; type __daddr_t should be _DaddrT
main.go:187:6: don't use underscores in Go names; type __key_t should be _KeyT
main.go:188:6: don't use underscores in Go names; type __clockid_t should be _ClockidT
main.go:189:6: don't use underscores in Go names; type __timer_t should be _TimerT
main.go:190:6: don't use underscores in Go names; type __blksize_t should be _BlksizeT
main.go:191:6: don't use underscores in Go names; type __blkcnt_t should be _BlkcntT
main.go:192:6: don't use underscores in Go names; type __blkcnt64_t should be _Blkcnt64T
main.go:193:6: don't use underscores in Go names; type __fsblkcnt_t should be _FsblkcntT
main.go:194:6: don't use underscores in Go names; type __fsblkcnt64_t should be _Fsblkcnt64T
main.go:195:6: don't use underscores in Go names; type __fsfilcnt_t should be _FsfilcntT
main.go:196:6: don't use underscores in Go names; type __fsfilcnt64_t should be _Fsfilcnt64T
main.go:197:6: don't use underscores in Go names; type __fsword_t should be _FswordT
main.go:198:6: don't use underscores in Go names; type __ssize_t should be _SsizeT
main.go:199:6: don't use underscores in Go names; type __syscall_slong_t should be _SyscallSlongT
main.go:200:6: don't use underscores in Go names; type __syscall_ulong_t should be _SyscallUlongT
main.go:201:6: don't use underscores in Go names; type __loff_t should be _LoffT
main.go:202:6: don't use underscores in Go names; type __qaddr_t should be _QaddrT
main.go:203:6: don't use underscores in Go names; type __caddr_t should be _CaddrT
main.go:204:6: don't use underscores in Go names; type __intptr_t should be _IntptrT
main.go:205:6: don't use underscores in Go names; type __socklen_t should be _SocklenT
main.go:206:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:208:6: exported type FILE should have comment or be unexported
main.go:210:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:211:6: exported type BSunionSatSSusrSincludeSwcharPhD85D3E should have comment or be unexported
main.go:216:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:219:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:223:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.UntypedSet should have comment or be unexported
main.go:223:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:227:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wch should have comment or be unexported
main.go:227:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:227:52: don't use underscores in Go names; method Get__wch should be GetWch
main.go:231:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wch should have comment or be unexported
main.go:231:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:231:52: don't use underscores in Go names; method Set__wch should be SetWch
main.go:236:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wchb should have comment or be unexported
main.go:236:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:236:52: don't use underscores in Go names; method Get__wchb should be GetWchb
main.go:240:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wchb should have comment or be unexported
main.go:240:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:240:52: don't use underscores in Go names; method Set__wchb should be SetWchb
main.go:246:6: don't use underscores in Go names; type __mbstate_t should be _MbstateT
main.go:247:2: don't use underscores in Go names; struct field __count should be _Count
main.go:248:2: don't use underscores in Go names; struct field __value should be _Value
main.go:250:6: don't use underscores in Go names; type _G_fpos_t should be _GFposT
main.go:251:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:252:2: don't use underscores in Go names; struct field __state should be _State
main.go:254:6: don't use underscores in Go names; type _G_fpos64_t should be _GFpos64T
main.go:255:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:256:2: don't use underscores in Go names; struct field __state should be _State
main.go:258:6: don't use underscores in Go names; type va_list should be vaList
main.go:259:6: don't use underscores in Go names; type __gnuc_va_list should be _GnucVaList
main.go:260:6: don't use underscores in Go names; type _IO_jump_t should be _IOJumpT
main.go:262:6: don't use underscores in Go names; type _IO_lock_t should be _IOLockT
main.go:264:6: don't use underscores in Go names; type _IO_marker should be _IOMarker
main.go:269:6: don't use underscores in Go names; type __codecvt_result should be _CodecvtResult
main.go:272:2: don't use underscores in Go names; const __codecvt_ok should be _CodecvtOk
main.go:273:2: don't use underscores in Go names; const __codecvt_partial should be _CodecvtPartial
main.go:274:2: don't use underscores in Go names; const __codecvt_error should be _CodecvtError
main.go:275:2: don't use underscores in Go names; const __codecvt_noconv should be _CodecvtNoconv
main.go:278:6: don't use underscores in Go names; type _IO_FILE_plus should be _IOFILEPlus
main.go:280:6: don't use underscores in Go names; type __io_read_fn should be _IoReadFn
main.go:281:6: don't use underscores in Go names; type __io_write_fn should be _IoWriteFn
main.go:282:6: don't use underscores in Go names; type __io_seek_fn should be _IoSeekFn
main.go:283:6: don't use underscores in Go names; type __io_close_fn should be _IoCloseFn
main.go:284:6: don't use underscores in Go names; type cookie_read_function_t should be cookieReadFunctionT
main.go:285:6: don't use underscores in Go names; type cookie_write_function_t should be cookieWriteFunctionT
main.go:286:6: don't use underscores in Go names; type cookie_seek_function_t should be cookieSeekFunctionT
main.go:287:6: don't use underscores in Go names; type cookie_close_function_t should be cookieCloseFunctionT
main.go:288:6: don't use underscores in Go names; type _IO_cookie_io_functions_t should be _IOCookieIoFunctionsT
main.go:294:6: don't use underscores in Go names; type cookie_io_functions_t should be cookieIoFunctionsT
main.go:295:6: don't use underscores in Go names; type _IO_cookie_file should be _IOCookieFile
main.go:297:6: don't use underscores in Go names; type off_t should be offT
main.go:298:6: don't use underscores in Go names; type off64_t should be off64T
main.go:299:6: don't use underscores in Go names; type ssize_t should be ssizeT
main.go:300:6: don't use underscores in Go names; type fpos_t should be fposT
main.go:301:6: don't use underscores in Go names; type fpos64_t should be fpos64T
main.go:319:6: don't use underscores in Go names; type wchar_t should be wcharT
main.go:321:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:321:7: exported const P_ALL should have comment or be unexported
main.go:322:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:322:7: exported const P_PID should have comment or be unexported
main.go:323:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:323:7: exported const P_PGID should have comment or be unexported
main.go:325:6: don't use underscores in Go names; type idtype_t should be idtypeT
main.go:326:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD69D5E should have comment or be unexported
main.go:327:2: don't use underscores in Go names; struct field __w_termsig should be _WTermsig
main.go:328:2: don't use underscores in Go names; struct field __w_coredump should be _WCoredump
main.go:329:2: don't use underscores in Go names; struct field __w_retcode should be _WRetcode
main.go:331:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD84D5E should have comment or be unexported
main.go:332:2: don't use underscores in Go names; struct field __w_stopval should be _WStopval
main.go:333:2: don't use underscores in Go names; struct field __w_stopsig should be _WStopsig
main.go:340:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:343:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:347:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:351:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:351:19: don't use underscores in Go names; method GetW_status should be GetWStatus
main.go:355:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:355:19: don't use underscores in Go names; method SetW_status should be SetWStatus
main.go:360:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:360:19: don't use underscores in Go names; method Get__wait_terminated should be GetWaitTerminated
main.go:364:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:364:19: don't use underscores in Go names; method Set__wait_terminated should be SetWaitTerminated
main.go:369:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:369:19: don't use underscores in Go names; method Get__wait_stopped should be GetWaitStopped
main.go:373:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:373:19: don't use underscores in Go names; method Set__wait_stopped should be SetWaitStopped
main.go:379:6: don't use underscores in Go names; type div_t should be divT
main.go:383:6: don't use underscores in Go names; type ldiv_t should be ldivT
main.go:387:6: don't use underscores in Go names; type lldiv_t should be lldivT
main.go:391:6: don't use underscores in Go names; type __locale_data should be _LocaleData
main.go:393:6: don't use underscores in Go names; type __locale_t should be _LocaleT
main.go:394:2: don't use underscores in Go names; struct field __locales should be _Locales
main.go:395:2: don't use underscores in Go names; struct field __ctype_b should be _CtypeB
main.go:396:2: don't use underscores in Go names; struct field __ctype_tolower should be _CtypeTolower
main.go:397:2: don't use underscores in Go names; struct field __ctype_toupper should be _CtypeToupper
main.go:398:2: don't use underscores in Go names; struct field __names should be _Names
main.go:400:6: don't use underscores in Go names; type locale_t should be localeT
main.go:401:6: don't use underscores in Go names; type u_char should be uChar
main.go:402:6: don't use underscores in Go names; type u_short should be uShort
main.go:403:6: don't use underscores in Go names; type u_int should be uInt
main.go:404:6: don't use underscores in Go names; type u_long should be uLong
main.go:405:6: don't use underscores in Go names; type quad_t should be quadT
main.go:406:6: don't use underscores in Go names; type u_quad_t should be uQuadT
main.go:407:6: don't use underscores in Go names; type fsid_t should be fsidT
main.go:408:6: don't use underscores in Go names; type loff_t should be loffT
main.go:409:6: don't use underscores in Go names; type ino_t should be inoT
main.go:410:6: don't use underscores in Go names; type ino64_t should be ino64T
main.go:411:6: don't use underscores in Go names; type dev_t should be devT
main.go:412:6: don't use underscores in Go names; type gid_t should be gidT
main.go:413:6: don't use underscores in Go names; type mode_t should be modeT
main.go:414:6: don't use underscores in Go names; type nlink_t should be nlinkT
main.go:415:6: don't use underscores in Go names; type uid_t should be uidT
main.go:416:6: don't use underscores in Go names; type pid_t should be pidT
main.go:417:6: don't use underscores in Go names; type id_t should be idT
main.go:418:6: don't use underscores in Go names; type daddr_t should be daddrT
main.go:419:6: don't use underscores in Go names; type caddr_t should be caddrT
main.go:420:6: don't use underscores in Go names; type key_t should be keyT
main.go:421:6: don't use underscores in Go names; type clock_t should be clockT
main.go:422:6: don't use underscores in Go names; type time_t should be timeT
main.go:423:6: don't use underscores in Go names; type clockid_t should be clockidT
main.go:424:6: don't use underscores in Go names; type timer_t should be timerT
main.go:425:6: don't use underscores in Go names; type useconds_t should be usecondsT
main.go:426:6: don't use underscores in Go names; type suseconds_t should be susecondsT
main.go:430:6: don't use underscores in Go names; type int8_t should be int8T
main.go:431:6: don't use underscores in Go names; type int16_t should be int16T
main.go:432:6: don't use underscores in Go names; type int32_t should be int32T
main.go:433:6: don't use underscores in Go names; type int64_t should be int64T
main.go:434:6: don't use underscores in Go names; type u_int8_t should be uInt8T
main.go:435:6: don't use underscores in Go names; type u_int16_t should be uInt16T
main.go:436:6: don't use underscores in Go names; type u_int32_t should be uInt32T
main.go:437:6: don't use underscores in Go names; type u_int64_t should be uInt64T
main.go:438:6: don't use underscores in Go names; type register_t should be registerT
main.go:439:6: don't use underscores in Go names; type __sig_atomic_t should be _SigAtomicT
main.go:440:6: don't use underscores in Go names; type __sigset_t should be _SigsetT
main.go:441:2: don't use underscores in Go names; struct field __val should be _Val
main.go:443:6: don't use underscores in Go names; type sigset_t should be sigsetT
main.go:445:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:446:2: don't use underscores in Go names; struct field tv_nsec should be tvNsec
main.go:449:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:450:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:452:6: don't use underscores in Go names; type __fd_mask should be _FdMask
main.go:453:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:454:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:456:6: don't use underscores in Go names; type fd_set should be fdSet
main.go:457:2: don't use underscores in Go names; struct field fds_bits should be fdsBits
main.go:459:6: don't use underscores in Go names; type fd_mask should be fdMask
main.go:460:6: don't use underscores in Go names; type blksize_t should be blksizeT
main.go:461:6: don't use underscores in Go names; type blkcnt_t should be blkcntT
main.go:462:6: don't use underscores in Go names; type fsblkcnt_t should be fsblkcntT
main.go:463:6: don't use underscores in Go names; type fsfilcnt_t should be fsfilcntT
main.go:464:6: don't use underscores in Go names; type blkcnt64_t should be blkcnt64T
main.go:465:6: don't use underscores in Go names; type fsblkcnt64_t should be fsblkcnt64T
main.go:466:6: don't use underscores in Go names; type fsfilcnt64_t should be fsfilcnt64T
main.go:467:6: don't use underscores in Go names; type pthread_t should be pthreadT
main.go:468:6: don't use underscores in Go names; type pthread_attr_t should be pthreadAttrT
main.go:473:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:476:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:480:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:484:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:484:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:488:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:488:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:493:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:493:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:497:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:497:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:503:6: don't use underscores in Go names; type __pthread_internal_list should be _PthreadInternalList
main.go:504:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:505:2: don't use underscores in Go names; struct field __next should be _Next
main.go:507:6: don't use underscores in Go names; type __pthread_list_t should be _PthreadListT
main.go:508:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:509:2: don't use underscores in Go names; struct field __next should be _Next
main.go:511:6: don't use underscores in Go names; type __pthread_mutex_s should be _PthreadMutexS
main.go:512:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:513:2: don't use underscores in Go names; struct field __count should be _Count
main.go:514:2: don't use underscores in Go names; struct field __owner should be _Owner
main.go:515:2: don't use underscores in Go names; struct field __nusers should be _Nusers
main.go:516:2: don't use underscores in Go names; struct field __kind should be _Kind
main.go:517:2: don't use underscores in Go names; struct field __spins should be _Spins
main.go:518:2: don't use underscores in Go names; struct field __elision should be _Elision
main.go:519:2: don't use underscores in Go names; struct field __list should be _List
main.go:521:6: don't use underscores in Go names; type pthread_mutex_t should be pthreadMutexT
main.go:526:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:529:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:533:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:537:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:537:30: don't use underscores in Go names; method Get__data should be GetData
main.go:541:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:541:30: don't use underscores in Go names; method Set__data should be SetData
main.go:546:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:546:30: don't use underscores in Go names; method Get__size should be GetSize
main.go:550:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:550:30: don't use underscores in Go names; method Set__size should be SetSize
main.go:555:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:555:30: don't use underscores in Go names; method Get__align should be GetAlign
main.go:559:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:559:30: don't use underscores in Go names; method Set__align should be SetAlign
main.go:565:6: don't use underscores in Go names; type pthread_mutexattr_t should be pthreadMutexattrT
main.go:570:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:573:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:577:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:581:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:581:34: don't use underscores in Go names; method Get__size should be GetSize
main.go:585:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:585:34: don't use underscores in Go names; method Set__size should be SetSize
main.go:590:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:590:34: don't use underscores in Go names; method Get__align should be GetAlign
main.go:594:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:594:34: don't use underscores in Go names; method Set__align should be SetAlign
main.go:600:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD141D3E should have comment or be unexported
main.go:601:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:602:2: don't use underscores in Go names; struct field __futex should be _Futex
main.go:603:2: don't use underscores in Go names; struct field __total_seq should be _TotalSeq
main.go:604:2: don't use underscores in Go names; struct field __wakeup_seq should be _WakeupSeq
main.go:605:2: don't use underscores in Go names; struct field __woken_seq should be _WokenSeq
main.go:606:2: don't use underscores in Go names; struct field __mutex should be _Mutex
main.go:607:2: don't use underscores in Go names; struct field __nwaiters should be _Nwaiters
main.go:608:2: don't use underscores in Go names; struct field __broadcast_seq should be _BroadcastSeq
main.go:610:6: don't use underscores in Go names; type pthread_cond_t should be pthreadCondT
main.go:615:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:618:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:622:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:626:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:626:29: don't use underscores in Go names; method Get__data should be GetData
main.go:630:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:630:29: don't use underscores in Go names; method Set__data should be SetData
main.go:635:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:635:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:639:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:639:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:644:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:644:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:648:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:648:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:654:6: don't use underscores in Go names; type pthread_condattr_t should be pthreadCondattrT
main.go:659:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:662:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:666:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:670:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:670:33: don't use underscores in Go names; method Get__size should be GetSize
main.go:674:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:674:33: don't use underscores in Go names; method Set__size should be SetSize
main.go:679:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:679:33: don't use underscores in Go names; method Get__align should be GetAlign
main.go:683:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:683:33: don't use underscores in Go names; method Set__align should be SetAlign
main.go:689:6: don't use underscores in Go names; type pthread_key_t should be pthreadKeyT
main.go:690:6: don't use underscores in Go names; type pthread_once_t should be pthreadOnceT
main.go:691:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD177D3E should have comment or be unexported
main.go:692:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:693:2: don't use underscores in Go names; struct field __nr_readers should be _NrReaders
main.go:694:2: don't use underscores in Go names; struct field __readers_wakeup should be _ReadersWakeup
main.go:695:2: don't use underscores in Go names; struct field __writer_wakeup should be _WriterWakeup
main.go:696:2: don't use underscores in Go names; struct field __nr_readers_queued should be _NrReadersQueued
main.go:697:2: don't use underscores in Go names; struct field __nr_writers_queued should be _NrWritersQueued
main.go:698:2: don't use underscores in Go names; struct field __writer should be _Writer
main.go:699:2: don't use underscores in Go names; struct field __shared should be _Shared
main.go:700:2: don't use underscores in Go names; struct field __rwelision should be _Rwelision
main.go:701:2: don't use underscores in Go names; struct field __pad1 should be _Pad1
main.go:702:2: don't use underscores in Go names; struct field __pad2 should be _Pad2
main.go:703:2: don't use underscores in Go names; struct field __flags should be _Flags
main.go:705:6: don't use underscores in Go names; type pthread_rwlock_t should be pthreadRwlockT
main.go:710:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:713:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:717:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:721:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:721:31: don't use underscores in Go names; method Get__data should be GetData
main.go:725:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:725:31: don't use underscores in Go names; method Set__data should be SetData
main.go:730:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:730:31: don't use underscores in Go names; method Get__size should be GetSize
main.go:734:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:734:31: don't use underscores in Go names; method Set__size should be SetSize
main.go:739:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:739:31: don't use underscores in Go names; method Get__align should be GetAlign
main.go:743:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:743:31: don't use underscores in Go names; method Set__align should be SetAlign
main.go:749:6: don't use underscores in Go names; type pthread_rwlockattr_t should be pthreadRwlockattrT
main.go:754:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:757:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:761:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:765:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:765:35: don't use underscores in Go names; method Get__size should be GetSize
main.go:769:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:769:35: don't use underscores in Go names; method Set__size should be SetSize
main.go:774:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:774:35: don't use underscores in Go names; method Get__align should be GetAlign
main.go:778:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:778:35: don't use underscores in Go names; method Set__align should be SetAlign
main.go:784:6: don't use underscores in Go names; type pthread_spinlock_t should be pthreadSpinlockT
main.go:785:6: don't use underscores in Go names; type pthread_barrier_t should be pthreadBarrierT
main.go:790:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:793:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:797:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:801:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:801:32: don't use underscores in Go names; method Get__size should be GetSize
main.go:805:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:805:32: don't use underscores in Go names; method Set__size should be SetSize
main.go:810:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:810:32: don't use underscores in Go names; method Get__align should be GetAlign
main.go:814:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:814:32: don't use underscores in Go names; method Set__align should be SetAlign
main.go:820:6: don't use underscores in Go names; type pthread_barrierattr_t should be pthreadBarrierattrT
main.go:825:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:828:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:832:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:836:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:836:36: don't use underscores in Go names; method Get__size should be GetSize
main.go:840:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:840:36: don't use underscores in Go names; method Set__size should be SetSize
main.go:845:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:845:36: don't use underscores in Go names; method Get__align should be GetAlign
main.go:849:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:849:36: don't use underscores in Go names; method Set__align should be SetAlign
main.go:855:6: don't use underscores in Go names; type random_data should be randomData
main.go:859:2: don't use underscores in Go names; struct field rand_type should be randType
main.go:860:2: don't use underscores in Go names; struct field rand_deg should be randDeg
main.go:861:2: don't use underscores in Go names; struct field rand_sep should be randSep
main.go:862:2: don't use underscores in Go names; struct field end_ptr should be endPtr
main.go:864:6: don't use underscores in Go names; type drand48_data should be drand48Data
main.go:865:2: don't use underscores in Go names; struct field __x should be _X
main.go:866:2: don't use underscores in Go names; struct field __old_x should be _OldX
main.go:867:2: don't use underscores in Go names; struct field __c should be _C
main.go:868:2: don't use underscores in Go names; struct field __init should be _Init
main.go:869:2: don't use underscores in Go names; struct field __a should be _A
main.go:871:6: don't use underscores in Go names; type __compar_fn_t should be _ComparFnT
main.go:872:6: don't use underscores in Go names; type comparison_fn_t should be comparisonFnT
main.go:873:6: don't use underscores in Go names; type __compar_d_fn_t should be _ComparDFnT
main.go:874:6: don't use underscores in Go names; type vec3_struct should be vec3Struct
main.go:907:2: don't use underscores in Go names; struct field tm_sec should be tmSec
main.go:908:2: don't use underscores in Go names; struct field tm_min should be tmMin
main.go:909:2: don't use underscores in Go names; struct field tm_hour should be tmHour
main.go:910:2: don't use underscores in Go names; struct field tm_mday should be tmMday
main.go:911:2: don't use underscores in Go names; struct field tm_mon should be tmMon
main.go:912:2: don't use underscores in Go names; struct field tm_year should be tmYear
main.go:913:2: don't use underscores in Go names; struct field tm_wday should be tmWday
main.go:914:2: don't use underscores in Go names; struct field tm_yday should be tmYday
main.go:915:2: don't use underscores in Go names; struct field tm_isdst should be tmIsdst
main.go:916:2: don't use underscores in Go names; struct field tm_gmtoff should be tmGmtoff
main.go:917:2: don't use underscores in Go names; struct field tm_zone should be tmZone
main.go:920:2: don't use underscores in Go names; struct field it_interval should be itInterval
main.go:921:2: don't use underscores in Go names; struct field it_value should be itValue
main.go:925:6: don't use underscores in Go names; type intptr_t should be intptrT
main.go:926:6: don't use underscores in Go names; type socklen_t should be socklenT
main.go:928:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:929:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:930:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:931:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:932:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:933:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:934:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:935:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:936:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:937:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:938:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:939:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:940:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:941:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:942:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:943:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:944:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:945:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:946:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:947:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:948:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:949:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:950:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:951:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:952:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:953:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:954:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:955:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:956:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:957:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:958:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:959:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:960:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:961:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:962:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:963:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:964:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:965:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:966:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:967:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:968:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:969:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:970:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:971:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:972:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:973:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:974:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:975:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:976:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:977:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:978:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:979:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:980:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:981:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:982:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:983:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:984:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:985:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:986:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:987:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:988:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:989:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:990:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:991:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:992:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:993:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:994:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:995:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:996:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:997:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:998:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:999:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1000:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1001:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1002:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1003:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1004:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1005:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1006:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1007:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1008:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1009:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1010:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1011:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1012:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1013:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1014:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1015:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1016:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1017:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1018:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1019:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1020:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1021:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1022:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1023:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1024:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1025:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1026:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1027:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1028:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1029:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1030:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1031:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1032:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1033:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1034:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1035:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1036:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1037:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1038:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1039:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1040:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1041:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1042:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1043:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1044:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1045:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1046:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1047:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1048:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1049:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1050:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1051:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1052:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1053:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1054:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1055:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1056:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1057:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1058:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1059:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1060:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1061:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1062:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1063:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1064:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1065:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1066:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1067:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1068:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1069:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1070:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1071:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1072:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1073:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1074:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1075:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1076:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1077:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1078:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1079:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1080:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1081:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1082:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1083:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1084:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1085:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1086:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1087:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1088:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1089:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1090:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1091:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1092:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1093:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1094:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1095:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1096:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1097:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1098:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1099:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1100:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1101:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1102:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1103:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1104:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1105:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1106:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1107:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1108:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1109:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1110:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1111:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1112:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1113:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1114:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1115:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1116:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1117:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1118:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1119:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1120:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1121:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1122:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1123:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1124:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1125:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1126:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1127:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1128:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1129:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1130:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1131:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1132:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1133:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1134:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1135:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1136:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1137:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1138:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1139:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1140:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1141:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1142:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1143:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1144:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1145:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1146:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1147:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1148:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1149:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1150:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1151:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1152:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1153:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1154:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1155:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1156:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1157:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1158:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1159:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1160:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1161:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1162:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1163:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1164:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1165:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1166:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1167:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1168:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1169:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1170:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1171:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1172:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1173:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1174:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1175:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1176:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1177:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1178:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1179:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1180:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1181:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1182:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1183:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1184:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1185:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1186:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1187:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1188:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1189:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1190:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1191:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1192:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1193:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1194:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1195:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1196:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1197:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1198:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1199:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1200:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1201:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1202:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1203:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1204:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1205:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1206:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1207:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1208:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1209:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1210:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1211:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1212:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1213:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1214:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1215:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1216:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1217:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1218:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1219:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1220:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1221:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1222:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1223:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1224:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1225:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1226:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1227:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1229:6: exported type FCOMPLEX should have comment or be unexported
main.go:1430:2: don't use underscores in Go names; var IN_file should be INFile
main.go:1430:10: should omit type []byte from declaration of var IN_file; it will be inferred from the right-hand side
main.go:1431:6: don't use underscores in Go names; var OUT_file should be OUTFile
main.go:1431:15: should omit type []byte from declaration of var OUT_file; it will be inferred from the right-hand side
main.go:1432:12: should omit type []byte from declaration of var title; it will be inferred from the right-hand side
main.go:1433:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:1434:15: should omit type []byte from declaration of var meshpath; it will be inferred from the right-hand side
main.go:1435:15: should omit type []byte from declaration of var plotpath; it will be inferred from the right-hand side
main.go:1436:15: should omit type []byte from declaration of var infcpath; it will be inferred from the right-hand side
main.go:1437:15: should omit type []byte from declaration of var modepath; it will be inferred from the right-hand side
main.go:1438:24: should omit type []byte from declaration of var strippedInputFile; it will be inferred from the right-hand side
main.go:1441:21: should drop = nil from declaration of var rj; it is the zero value
main.go:1448:20: should drop = nil from declaration of var E; it is the zero value
main.go:1449:20: should drop = nil from declaration of var G; it is the zero value
main.go:1450:20: should drop = nil from declaration of var p; it is the zero value
main.go:1451:24: should drop = nil from declaration of var U; it is the zero value
main.go:1452:24: should drop = nil from declaration of var W; it is the zero value
main.go:1453:24: should drop = nil from declaration of var P; it is the zero value
main.go:1454:24: should drop = nil from declaration of var T; it is the zero value
main.go:1455:23: should drop = nil from declaration of var Dp; it is the zero value
main.go:1457:22: should drop = nil from declaration of var EMs; it is the zero value
main.go:1458:22: should drop = nil from declaration of var NMs; it is the zero value
main.go:1462:9: should omit type []float32 from declaration of var gX; it will be inferred from the right-hand side
main.go:1463:9: should omit type []float32 from declaration of var gY; it will be inferred from the right-hand side
main.go:1464:9: should omit type []float32 from declaration of var gZ; it will be inferred from the right-hand side
main.go:1465:10: should omit type float32 from declaration of var pan; it will be inferred from the right-hand side
main.go:1466:12: should omit type float32 from declaration of var scale; it will be inferred from the right-hand side
main.go:1467:9: should omit type float32 from declaration of var dx; it will be inferred from the right-hand side
main.go:1468:22: should drop = nil from declaration of var K; it is the zero value
main.go:1469:23: should drop = 0 from declaration of var traceK; it is the zero value
main.go:1470:22: should drop = nil from declaration of var M; it is the zero value
main.go:1471:23: should drop = 0 from declaration of var traceM; it is the zero value
main.go:1472:6: don't use underscores in Go names; var eqF_mech should be eqFMech
main.go:1472:31: should drop = nil from declaration of var eqF_mech; it is the zero value
main.go:1473:6: don't use underscores in Go names; var eqF_temp should be eqFTemp
main.go:1473:31: should drop = nil from declaration of var eqF_temp; it is the zero value
main.go:1474:6: don't use underscores in Go names; var F_mech should be FMech
main.go:1474:27: should drop = nil from declaration of var F_mech; it is the zero value
main.go:1475:6: don't use underscores in Go names; var F_temp should be FTemp
main.go:1475:27: should drop = nil from declaration of var F_temp; it is the zero value
main.go:1476:20: should drop = nil from declaration of var F; it is the zero value
main.go:1477:20: should drop = nil from declaration of var R; it is the zero value
main.go:1478:21: should drop = nil from declaration of var dR; it is the zero value
main.go:1479:20: should drop = nil from declaration of var D; it is the zero value
main.go:1480:21: should drop = nil from declaration of var dD; it is the zero value
main.go:1481:21: should drop = nil from declaration of var dF; it is the zero value
main.go:1482:20: should drop = nil from declaration of var L; it is the zero value
main.go:1483:21: should drop = nil from declaration of var Le; it is the zero value
main.go:1484:22: should drop = nil from declaration of var Q; it is the zero value
main.go:1485:10: should omit type float64 from declaration of var tol; it will be inferred from the right-hand side
main.go:1486:22: should drop = 0 from declaration of var shift; it is the zero value
main.go:1487:6: don't use underscores in Go names; var struct_mass should be structMass
main.go:1488:6: don't use underscores in Go names; var total_mass should be totalMass
main.go:1489:20: should drop = nil from declaration of var f; it is the zero value
main.go:1490:22: should drop = nil from declaration of var V; it is the zero value
main.go:1491:6: don't use underscores in Go names; var rms_resid should be rmsResid
main.go:1493:22: should drop = 0 from declaration of var Cfreq; it is the zero value
main.go:1496:6: don't use underscores in Go names; var exagg_static should be exaggStatic
main.go:1496:19: should omit type float64 from declaration of var exagg_static; it will be inferred from the right-hand side
main.go:1497:6: don't use underscores in Go names; var exagg_modal should be exaggModal
main.go:1497:18: should omit type float64 from declaration of var exagg_modal; it will be inferred from the right-hand side
main.go:1510:15: should drop = 0 from declaration of var nN; it is the zero value
main.go:1511:15: should drop = 0 from declaration of var nE; it is the zero value
main.go:1512:15: should drop = 0 from declaration of var nL; it is the zero value
main.go:1513:15: should drop = 0 from declaration of var lc; it is the zero value
main.go:1514:16: should drop = 0 from declaration of var DoF; it is the zero value
main.go:1517:15: should drop = 0 from declaration of var nR; it is the zero value
main.go:1518:9: should omit type []int from declaration of var nD; it will be inferred from the right-hand side
main.go:1519:9: should omit type []int from declaration of var nF; it will be inferred from the right-hand side
main.go:1520:9: should omit type []int from declaration of var nU; it will be inferred from the right-hand side
main.go:1521:9: should omit type []int from declaration of var nW; it will be inferred from the right-hand side
main.go:1522:9: should omit type []int from declaration of var nP; it will be inferred from the right-hand side
main.go:1523:9: should omit type []int from declaration of var nT; it will be inferred from the right-hand side
main.go:1524:15: should drop = 0 from declaration of var nI; it is the zero value
main.go:1525:15: should drop = 0 from declaration of var nX; it is the zero value
main.go:1526:15: should drop = 0 from declaration of var nC; it is the zero value
main.go:1529:18: should drop = 0 from declaration of var shear; it is the zero value
main.go:1530:17: should drop = 0 from declaration of var geom; it is the zero value
main.go:1531:12: should omit type int from declaration of var anlyz; it will be inferred from the right-hand side
main.go:1532:16: should drop = nil from declaration of var q; it is the zero value
main.go:1533:16: should drop = nil from declaration of var r; it is the zero value
main.go:1535:15: should drop = 0 from declaration of var nM; it is the zero value
main.go:1537:6: don't use underscores in Go names; var nM_calc should be nMCalc
main.go:1538:11: should omit type int from declaration of var lump; it will be inferred from the right-hand side
main.go:1539:17: should drop = 0 from declaration of var iter; it is the zero value
main.go:1540:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:1541:11: should omit type []int from declaration of var anim; it will be inferred from the right-hand side
main.go:1542:17: should drop = 0 from declaration of var Cdof; it is the zero value
main.go:1543:20: should drop = 0 from declaration of var Cmethod; it is the zero value
main.go:1544:16: should drop = nil from declaration of var c; it is the zero value
main.go:1545:16: should drop = nil from declaration of var m; it is the zero value
main.go:1546:21: should drop = 0 from declaration of var filetype; it is the zero value
main.go:1547:18: should drop = 0 from declaration of var debug; it is the zero value
main.go:1548:14: should omit type int from declaration of var verbose; it will be inferred from the right-hand side
main.go:1549:6: don't use underscores in Go names; var axial_strain_warning should be axialStrainWarning
main.go:1549:33: should drop = 0 from declaration of var axial_strain_warning; it is the zero value
main.go:1550:21: should drop = 0 from declaration of var ExitCode; it is the zero value
main.go:1551:6: don't use underscores in Go names; var shear_flag should be shearFlag
main.go:1551:17: should omit type int from declaration of var shear_flag; it will be inferred from the right-hand side
main.go:1552:6: don't use underscores in Go names; var geom_flag should be geomFlag
main.go:1552:16: should omit type int from declaration of var geom_flag; it will be inferred from the right-hand side
main.go:1553:6: don't use underscores in Go names; var anlyz_flag should be anlyzFlag
main.go:1553:17: should omit type int from declaration of var anlyz_flag; it will be inferred from the right-hand side
main.go:1554:6: don't use underscores in Go names; var D3_flag should be D3Flag
main.go:1554:14: should omit type int from declaration of var D3_flag; it will be inferred from the right-hand side
main.go:1555:6: don't use underscores in Go names; var lump_flag should be lumpFlag
main.go:1555:16: should omit type int from declaration of var lump_flag; it will be inferred from the right-hand side
main.go:1556:6: don't use underscores in Go names; var modal_flag should be modalFlag
main.go:1556:17: should omit type int from declaration of var modal_flag; it will be inferred from the right-hand side
main.go:1557:6: don't use underscores in Go names; var write_matrix should be writeMatrix
main.go:1557:19: should omit type int from declaration of var write_matrix; it will be inferred from the right-hand side
main.go:1558:6: don't use underscores in Go names; var axial_sign should be axialSign
main.go:1558:17: should omit type int from declaration of var axial_sign; it will be inferred from the right-hand side
main.go:1559:6: don't use underscores in Go names; var condense_flag should be condenseFlag
main.go:1559:20: should omit type int from declaration of var condense_flag; it will be inferred from the right-hand side
main.go:1560:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:1561:6: don't use underscores in Go names; var exagg_flag should be exaggFlag
main.go:1562:6: don't use underscores in Go names; var tol_flag should be tolFlag
main.go:1563:6: don't use underscores in Go names; var shift_flag should be shiftFlag
main.go:1564:6: don't use underscores in Go names; var pan_flag should be panFlag
main.go:1564:15: should omit type float32 from declaration of var pan_flag; it will be inferred from the right-hand side
main.go:1565:11: should omit type []byte from declaration of var extn; it will be inferred from the right-hand side
main.go:1749:5: should replace lc += 1 with lc++
main.go:1763:7: should replace i += 1 with i++
main.go:1786:7: should replace i += 1 with i++
main.go:1790:8: should replace j += 1 with j++
main.go:1805:8: should replace i += 1 with i++
main.go:1815:8: should replace i += 1 with i++
main.go:1834:8: should replace i += 1 with i++
main.go:1845:8: should replace i += 1 with i++
main.go:1858:8: should replace i += 1 with i++
main.go:1869:7: should replace i += 1 with i++
main.go:1888:8: should replace iter += 1 with iter++
main.go:1902:9: should replace i += 1 with i++
main.go:1957:11: if block ends with a return statement, so drop this else and outdent its block
main.go:1967:5: should replace j += 1 with j++
main.go:1978:5: should replace i += 1 with i++
main.go:1986:8: should replace j += 1 with j++
main.go:2023:6: should replace j += 1 with j++
main.go:2121:6: don't use underscores in Go names; func assemble_K should be assembleK
main.go:2124:16: should drop = 0 from declaration of var res; it is the zero value
main.go:2131:6: don't use underscores in Go names; var stiffness_fn should be stiffnessFn
main.go:2131:19: should omit type []byte from declaration of var stiffness_fn; it will be inferred from the right-hand side
main.go:2134:4: should replace i += 1 with i++
main.go:2138:5: should replace j += 1 with j++
main.go:2149:4: should replace i += 1 with i++
main.go:2168:4: should replace i += 1 with i++
main.go:2181:6: should replace l += 1 with l++
main.go:2187:8: should replace ll += 1 with ll++
main.go:2207:6: don't use underscores in Go names; func elastic_K should be elasticK
main.go:2224:4: should replace i += 1 with i++
main.go:2228:5: should replace j += 1 with j++
main.go:2411:4: should replace i += 1 with i++
main.go:2416:6: should replace j += 1 with j++
main.go:2449:6: don't use underscores in Go names; func geometric_K should be geometricK
main.go:2470:4: should replace i += 1 with i++
main.go:2474:5: should replace j += 1 with j++
main.go:2667:4: should replace i += 1 with i++
main.go:2672:6: should replace j += 1 with j++
main.go:2699:4: should replace i += 1 with i++
main.go:2703:5: should replace j += 1 with j++
main.go:2721:6: don't use underscores in Go names; func solve_system should be solveSystem
main.go:2721:123: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:2764:6: don't use underscores in Go names; func equilibrium_error should be equilibriumError
main.go:2765:6: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2765:22: should drop = 0 from declaration of var ss_dF; it is the zero value
main.go:2766:6: don't use underscores in Go names; var ss_F should be ssF
main.go:2766:21: should drop = 0 from declaration of var ss_F; it is the zero value
main.go:2767:21: should drop = 0 from declaration of var errF; it is the zero value
main.go:2772:4: should replace i += 1 with i++
main.go:2780:7: should replace j += 1 with j++
main.go:2794:7: should replace j += 1 with j++
main.go:2808:4: should replace i += 1 with i++
main.go:2812:5: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2818:4: should replace i += 1 with i++
main.go:2822:5: don't use underscores in Go names; var ss_F should be ssF
main.go:2835:6: don't use underscores in Go names; func element_end_forces should be elementEndForces
main.go:2835:232: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:2835:254: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:2835:310: don't use underscores in Go names; func parameter axial_strain_warning should be axialStrainWarning
main.go:2837:6: don't use underscores in Go names; var axial_strain should be axialStrain
main.go:2837:19: should omit type float64 from declaration of var axial_strain; it will be inferred from the right-hand side
main.go:2844:4: should replace m += 1 with m++
main.go:2850:6: should replace j += 1 with j++
main.go:2859:6: should replace (axial_strain_warning[0]) += 1 with (axial_strain_warning[0])++
main.go:2896:6: don't use underscores in Go names; func frame_element_force should be frameElementForce
main.go:2896:196: don't use underscores in Go names; func parameter f_t should be fT
main.go:2896:211: don't use underscores in Go names; func parameter f_m should be fM
main.go:2896:260: don't use underscores in Go names; func parameter axial_strain should be axialStrain
main.go:2918:22: should drop = 0 from declaration of var delta; it is the zero value
main.go:2923:18: should drop = 0 from declaration of var T; it is the zero value
main.go:2924:9: should omit type float64 from declaration of var f1; it will be inferred from the right-hand side
main.go:2925:9: should omit type float64 from declaration of var f2; it will be inferred from the right-hand side
main.go:2926:9: should omit type float64 from declaration of var f3; it will be inferred from the right-hand side
main.go:2927:9: should omit type float64 from declaration of var f4; it will be inferred from the right-hand side
main.go:2928:9: should omit type float64 from declaration of var f5; it will be inferred from the right-hand side
main.go:2929:9: should omit type float64 from declaration of var f6; it will be inferred from the right-hand side
main.go:2930:9: should omit type float64 from declaration of var f7; it will be inferred from the right-hand side
main.go:2931:9: should omit type float64 from declaration of var f8; it will be inferred from the right-hand side
main.go:2932:9: should omit type float64 from declaration of var f9; it will be inferred from the right-hand side
main.go:2933:10: should omit type float64 from declaration of var f10; it will be inferred from the right-hand side
main.go:2934:10: should omit type float64 from declaration of var f11; it will be inferred from the right-hand side
main.go:2935:10: should omit type float64 from declaration of var f12; it will be inferred from the right-hand side
main.go:3064:6: don't use underscores in Go names; func compute_reaction_forces should be computeReactionForces
main.go:3069:4: should replace i += 1 with i++
main.go:3077:7: should replace j += 1 with j++
main.go:3092:6: don't use underscores in Go names; func assemble_M should be assembleM
main.go:3095:16: should drop = 0 from declaration of var res; it is the zero value
main.go:3102:6: don't use underscores in Go names; var mass_fn should be massFn
main.go:3102:14: should omit type []byte from declaration of var mass_fn; it will be inferred from the right-hand side
main.go:3105:4: should replace i += 1 with i++
main.go:3109:5: should replace j += 1 with j++
main.go:3120:4: should replace i += 1 with i++
main.go:3139:4: should replace i += 1 with i++
main.go:3153:6: should replace l += 1 with l++
main.go:3159:8: should replace ll += 1 with ll++
main.go:3172:4: should replace j += 1 with j++
main.go:3186:4: should replace i += 1 with i++
main.go:3203:6: don't use underscores in Go names; func lumped_M should be lumpedM
main.go:3226:4: should replace i += 1 with i++
main.go:3230:5: should replace j += 1 with j++
main.go:3340:6: don't use underscores in Go names; func consistent_M should be consistentM
main.go:3363:4: should replace i += 1 with i++
main.go:3367:5: should replace j += 1 with j++
main.go:3536:4: should replace i += 1 with i++
main.go:3544:4: should replace i += 1 with i++
main.go:3553:4: should replace i += 1 with i++
main.go:3558:6: should replace j += 1 with j++
main.go:3589:6: don't use underscores in Go names; func static_condensation should be staticCondensation
main.go:3607:4: should replace i += 1 with i++
main.go:3613:6: should replace j += 1 with j++
main.go:3624:6: should replace k += 1 with k++
main.go:3632:4: should replace i += 1 with i++
main.go:3637:6: should replace j += 1 with j++
main.go:3658:4: should replace i += 1 with i++
main.go:3663:6: should replace j += 1 with j++
main.go:3680:4: should replace i += 1 with i++
main.go:3685:6: should replace j += 1 with j++
main.go:3714:6: don't use underscores in Go names; func paz_condensation should be pazCondensation
main.go:3742:4: should replace i += 1 with i++
main.go:3748:6: should replace j += 1 with j++
main.go:3759:6: should replace k += 1 with k++
main.go:3767:4: should replace i += 1 with i++
main.go:3772:6: should replace j += 1 with j++
main.go:3802:4: should replace i += 1 with i++
main.go:3807:6: should replace j += 1 with j++
main.go:3824:4: should replace i += 1 with i++
main.go:3829:6: should replace j += 1 with j++
main.go:3840:4: should replace i += 1 with i++
main.go:3844:5: should replace j += 1 with j++
main.go:3867:6: don't use underscores in Go names; func modal_condensation should be modalCondensation
main.go:3870:13: should omit type float64 from declaration of var traceM; it will be inferred from the right-hand side
main.go:3871:14: should omit type float64 from declaration of var traceMc; it will be inferred from the right-hand side
main.go:3880:4: should replace i += 1 with i++
main.go:3884:5: should replace j += 1 with j++
main.go:3894:4: should replace i += 1 with i++
main.go:3904:4: should replace i += 1 with i++
main.go:3909:6: should replace j += 1 with j++
main.go:3915:8: should replace k += 1 with k++
main.go:3928:4: should replace i += 1 with i++
main.go:3936:4: should replace i += 1 with i++
main.go:3941:6: should replace j += 1 with j++
main.go:3947:8: should replace k += 1 with k++
main.go:3960:4: should replace i += 1 with i++
main.go:3964:5: should replace j += 1 with j++
main.go:3973:4: should replace i += 1 with i++
main.go:3977:5: should replace j += 1 with j++
main.go:4002:407: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:4002:427: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:4002:447: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:4002:471: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:4128:6: don't use underscores in Go names; func parse_options should be parseOptions
main.go:4128:45: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:4128:61: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:4128:78: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:4128:96: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:4128:113: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:4128:131: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:4128:153: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:4128:168: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:4128:185: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:4128:203: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:4128:223: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:4128:245: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:4128:265: don't use underscores in Go names; func parameter write_matrix should be writeMatrix
main.go:4128:285: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:4128:303: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:4130:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4131:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4381:9: don't use underscores in Go names; func display_help should be displayHelp
main.go:4424:9: don't use underscores in Go names; func display_usage should be displayUsage
main.go:4437:6: don't use underscores in Go names; func display_version should be displayVersion
main.go:4453:6: don't use underscores in Go names; func display_version_about should be displayVersionAbout
main.go:4469:6: don't use underscores in Go names; func read_node_data should be readNodeData
main.go:4472:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4473:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4476:4: should replace i += 1 with i++
main.go:4503:6: don't use underscores in Go names; func read_frame_element_data should be readFrameElementData
main.go:4510:17: should drop = 0 from declaration of var epn0; it is the zero value
main.go:4511:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4512:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4516:4: should replace n += 1 with n++
main.go:4524:4: should replace i += 1 with i++
main.go:4537:4: should replace epn[N1[b]] += 1 with epn[N1[b]]++
main.go:4538:4: should replace epn[N2[b]] += 1 with epn[N2[b]]++
main.go:4607:4: should replace b += 1 with b++
main.go:4629:4: should replace n += 1 with n++
main.go:4635:5: should replace epn0 += 1 with epn0++
main.go:4651:6: don't use underscores in Go names; func read_run_data should be readRunData
main.go:4651:37: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:4651:67: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:4651:95: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:4651:161: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:4651:185: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:4651:249: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:4652:6: don't use underscores in Go names; var full_len should be fullLen
main.go:4652:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:4653:16: should drop = 0 from declaration of var len; it is the zero value
main.go:4655:6: don't use underscores in Go names; var base_file should be baseFile
main.go:4655:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:4656:6: don't use underscores in Go names; var mesh_file should be meshFile
main.go:4656:16: should omit type []byte from declaration of var mesh_file; it will be inferred from the right-hand side
main.go:4657:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4661:4: should replace len += 1 with len++
main.go:4669:4: should replace len -= 1 with len--
main.go:4678:3: should replace len += 1 with len++
main.go:4688:5: should replace len -= 1 with len--
main.go:4697:5: should replace i += 1 with i++
main.go:4700:5: should replace len += 1 with len++
main.go:4754:6: don't use underscores in Go names; func frame3dd_getline should be frame3ddGetline
main.go:4755:14: should drop = 0 from declaration of var c; it is the zero value
main.go:4756:14: should drop = 0 from declaration of var i; it is the zero value
main.go:4759:4: should replace lim -= 1 with lim--
main.go:4766:5: should replace i += 1 with i++
main.go:4783:6: don't use underscores in Go names; func temp_dir should be tempDir
main.go:4784:10: should omit type []byte from declaration of var tmp; it will be inferred from the right-hand side
main.go:4805:6: don't use underscores in Go names; func output_path should be outputPath
main.go:4805:58: don't use underscores in Go names; func parameter default_outdir should be defaultOutdir
main.go:4835:6: don't use underscores in Go names; func parse_input should be parseInput
main.go:4837:11: should omit type []byte from declaration of var line; it will be inferred from the right-hand side
main.go:4838:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4869:6: don't use underscores in Go names; func getline_no_comment should be getlineNoComment
main.go:4870:14: should drop = 0 from declaration of var c; it is the zero value
main.go:4871:14: should drop = 0 from declaration of var i; it is the zero value
main.go:4874:4: should replace lim -= 1 with lim--
main.go:4882:6: should replace i += 1 with i++
main.go:4887:6: should replace i += 1 with i++
main.go:4896:4: should replace lim -= 1 with lim--
main.go:4915:6: don't use underscores in Go names; func read_reaction_data should be readReactionData
main.go:4919:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4920:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4923:4: should replace i += 1 with i++
main.go:4948:4: should replace i += 1 with i++
main.go:4957:6: should replace l -= 1 with l--
main.go:4979:6: should replace l -= 1 with l--
main.go:4995:4: should replace i += 1 with i++
main.go:5012:4: should replace i += 1 with i++
main.go:5085:6: don't use underscores in Go names; func read_and_assemble_loads should be readAndAssembleLoads
main.go:5085:400: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:5085:420: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:5085:538: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:5085:562: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:5100:20: should drop = 0 from declaration of var Mx1; it is the zero value
main.go:5101:20: should drop = 0 from declaration of var My1; it is the zero value
main.go:5102:20: should drop = 0 from declaration of var Mz1; it is the zero value
main.go:5106:20: should drop = 0 from declaration of var Mx2; it is the zero value
main.go:5107:20: should drop = 0 from declaration of var My2; it is the zero value
main.go:5108:20: should drop = 0 from declaration of var Mz2; it is the zero value
main.go:5129:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:5130:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5133:4: should replace j += 1 with j++
main.go:5141:4: should replace j += 1 with j++
main.go:5145:5: should replace lc += 1 with lc++
main.go:5161:4: should replace i += 1 with i++
main.go:5165:5: should replace n += 1 with n++
main.go:5169:6: should replace lc += 1 with lc++
main.go:5186:4: should replace i += 1 with i++
main.go:5190:5: should replace lc += 1 with lc++
main.go:5199:4: should replace i += 1 with i++
main.go:5203:5: should replace j += 1 with j++
main.go:5212:4: should replace lc += 1 with lc++
main.go:5229:6: should replace n += 1 with n++
main.go:5260:6: should replace i += 1 with i++
main.go:5274:8: should replace l -= 1 with l--
main.go:5307:6: should replace i += 1 with i++
main.go:5322:8: should replace l += 1 with l++
main.go:5403:6: should replace i += 1 with i++
main.go:5418:8: should replace l += 1 with l++
main.go:5556:6: should replace i += 1 with i++
main.go:5571:8: should replace l += 1 with l++
main.go:5655:6: should replace i += 1 with i++
main.go:5670:8: should replace l += 1 with l++
main.go:5736:6: should replace n += 1 with n++
main.go:5743:8: should replace i += 1 with i++
main.go:5751:8: should replace i += 1 with i++
main.go:5759:8: should replace i += 1 with i++
main.go:5767:8: should replace i += 1 with i++
main.go:5786:6: should replace i += 1 with i++
main.go:5795:8: should replace l -= 1 with l--
main.go:5824:6: don't use underscores in Go names; func read_mass_data should be readMassData
main.go:5824:38: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:5824:206: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:5824:228: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:5824:276: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:5824:304: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:5824:334: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:5824:369: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:5824:389: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:5824:456: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:5831:6: don't use underscores in Go names; var full_len should be fullLen
main.go:5831:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:5832:16: should drop = 0 from declaration of var len; it is the zero value
main.go:5833:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:5834:6: don't use underscores in Go names; var base_file should be baseFile
main.go:5834:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:5835:6: don't use underscores in Go names; var mode_file should be modeFile
main.go:5835:16: should omit type []byte from declaration of var mode_file; it will be inferred from the right-hand side
main.go:5836:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5904:4: should replace j += 1 with j++
main.go:5940:4: should replace m += 1 with m++
main.go:5960:4: should replace b += 1 with b++
main.go:5969:4: should replace m += 1 with m++
main.go:6001:4: should replace m += 1 with m++
main.go:6009:4: should replace m += 1 with m++
main.go:6033:4: should replace len += 1 with len++
main.go:6041:4: should replace len -= 1 with len--
main.go:6050:3: should replace len += 1 with len++
main.go:6056:5: should replace len -= 1 with len--
main.go:6065:5: should replace i += 1 with i++
main.go:6068:5: should replace len += 1 with len++
main.go:6107:6: don't use underscores in Go names; func read_condensation_data should be readCondensationData
main.go:6107:99: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:6112:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:6113:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6171:4: should replace i += 1 with i++
main.go:6187:4: should replace i += 1 with i++
main.go:6191:5: should replace j += 1 with j++
main.go:6196:7: should replace (Cdof[0]) += 1 with (Cdof[0])++
main.go:6206:4: should replace i += 1 with i++
main.go:6211:6: should replace j += 1 with j++
main.go:6217:8: should replace k += 1 with k++
main.go:6227:4: should replace i += 1 with i++
main.go:6253:6: don't use underscores in Go names; func write_input_data should be writeInputData
main.go:6262:4: should replace i += 1 with i++
main.go:6277:4: should replace i += 1 with i++
main.go:6288:4: should replace i += 1 with i++
main.go:6299:4: should replace i += 1 with i++
main.go:6312:4: should replace i += 1 with i++
main.go:6325:4: should replace i += 1 with i++
main.go:6337:4: should replace i += 1 with i++
main.go:6356:4: should replace lc += 1 with lc++
main.go:6392:7: should replace j += 1 with j++
main.go:6400:10: should replace i -= 1 with i--
main.go:6417:7: should replace n += 1 with n++
main.go:6423:9: should replace i += 1 with i++
main.go:6439:7: should replace n += 1 with n++
main.go:6445:9: should replace i += 1 with i++
main.go:6455:9: should replace i += 1 with i++
main.go:6465:9: should replace i += 1 with i++
main.go:6481:7: should replace n += 1 with n++
main.go:6487:9: should replace i += 1 with i++
main.go:6504:7: should replace n += 1 with n++
main.go:6511:9: should replace i += 1 with i++
main.go:6528:7: should replace j += 1 with j++
main.go:6536:10: should replace i -= 1 with i--
main.go:6564:6: don't use underscores in Go names; func write_static_results should be writeStaticResults
main.go:6564:189: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:6581:4: should replace j += 1 with j++
main.go:6587:6: should replace i -= 1 with i--
main.go:6597:7: should replace i -= 1 with i--
main.go:6617:4: should replace n += 1 with n++
main.go:6637:6: should replace i += 1 with i++
main.go:6665:6: should replace i += 1 with i++
main.go:6683:4: should replace j += 1 with j++
main.go:6691:7: should replace i -= 1 with i--
main.go:6716:6: don't use underscores in Go names; func CSV_filename should be CSVFilename
main.go:6716:19: don't use underscores in Go names; func parameter CSV_file should be CSVFile
main.go:6716:47: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6729:5: should replace i += 1 with i++
main.go:6733:5: should replace j += 1 with j++
main.go:6739:3: should replace j += 1 with j++
main.go:6757:6: don't use underscores in Go names; func write_static_csv should be writeStaticCsv
main.go:6757:23: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6762:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:6763:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:6763:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:6765:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6790:5: should replace i += 1 with i++
main.go:6810:4: should replace j += 1 with j++
main.go:6816:6: should replace i -= 1 with i--
main.go:6835:4: should replace n += 1 with n++
main.go:6846:6: should replace i += 1 with i++
main.go:6865:6: should replace i += 1 with i++
main.go:6883:4: should replace j += 1 with j++
main.go:6890:6: should replace i -= 1 with i--
main.go:6936:6: don't use underscores in Go names; func write_static_mfile should be writeStaticMfile
main.go:6936:25: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6942:6: don't use underscores in Go names; var M_file should be MFile
main.go:6942:13: should omit type []byte from declaration of var M_file; it will be inferred from the right-hand side
main.go:6944:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6956:5: should replace i += 1 with i++
main.go:6960:5: should replace j += 1 with j++
main.go:6966:3: should replace j += 1 with j++
main.go:7007:4: should replace j += 1 with j++
main.go:7012:6: should replace i -= 1 with i--
main.go:7036:4: should replace n += 1 with n++
main.go:7046:6: should replace i += 1 with i++
main.go:7063:6: should replace i += 1 with i++
main.go:7085:4: should replace j += 1 with j++
main.go:7091:6: should replace i -= 1 with i--
main.go:7195:6: don't use underscores in Go names; func peak_internal_forces should be peakInternalForces
main.go:7229:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:7230:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:7231:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:7232:6: don't use underscores in Go names; var wx_ should be wx
main.go:7232:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:7233:6: don't use underscores in Go names; var wy_ should be wy
main.go:7233:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:7234:6: don't use underscores in Go names; var wz_ should be wz
main.go:7234:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:7235:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:7236:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:7237:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:7238:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:7239:6: don't use underscores in Go names; var tx_ should be tx
main.go:7239:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:7242:6: don't use underscores in Go names; var Nx_ should be Nx
main.go:7244:6: don't use underscores in Go names; var Vy_ should be Vy
main.go:7246:6: don't use underscores in Go names; var Vz_ should be Vz
main.go:7248:6: don't use underscores in Go names; var Tx_ should be Tx
main.go:7250:6: don't use underscores in Go names; var My_ should be My
main.go:7252:6: don't use underscores in Go names; var Mz_ should be Mz
main.go:7254:6: don't use underscores in Go names; var Sy_ should be Sy
main.go:7256:6: don't use underscores in Go names; var Sz_ should be Sz
main.go:7264:9: should omit type int from declaration of var nx; it will be inferred from the right-hand side
main.go:7265:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:7266:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:7267:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:7278:4: should replace m += 1 with m++
main.go:7333:4: should replace m += 1 with m++
main.go:7345:6: should replace n += 1 with n++
main.go:7353:8: should replace cU += 1 with cU++
main.go:7443:6: should replace i += 1 with i++
main.go:7458:8: should replace n += 1 with n++
main.go:7464:11: should replace cW += 1 with cW++
main.go:7502:8: should replace n += 1 with n++
main.go:7508:11: should replace cP += 1 with cP++
main.go:7549:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7556:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7563:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7570:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7577:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7584:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7591:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7598:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7605:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7612:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7619:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7626:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7640:4: should replace m += 1 with m++
main.go:7651:4: should replace m += 1 with m++
main.go:7742:6: don't use underscores in Go names; func write_internal_forces should be writeInternalForces
main.go:7742:28: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:7776:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:7777:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:7778:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:7779:6: don't use underscores in Go names; var wx_ should be wx
main.go:7779:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:7780:6: don't use underscores in Go names; var wy_ should be wy
main.go:7780:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:7781:6: don't use underscores in Go names; var wz_ should be wz
main.go:7781:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:7782:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:7783:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:7784:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:7785:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:7786:6: don't use underscores in Go names; var tx_ should be tx
main.go:7786:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:7789:6: don't use underscores in Go names; var dx_ should be dx
main.go:7829:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:7830:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:7831:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:7838:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:7839:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:7839:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:7840:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7841:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:7885:4: should replace m += 1 with m++
main.go:7909:6: should replace i += 1 with i++
main.go:7925:6: should replace n += 1 with n++
main.go:7933:8: should replace cU += 1 with cU++
main.go:7948:6: should replace i += 1 with i++
main.go:7962:8: should replace n += 1 with n++
main.go:7968:11: should replace cW += 1 with cW++
main.go:8009:8: should replace n += 1 with n++
main.go:8015:11: should replace cP += 1 with cP++
main.go:8037:6: should replace i += 1 with i++
main.go:8049:6: should replace i += 1 with i++
main.go:8061:6: should replace i += 1 with i++
main.go:8091:6: should replace i += 1 with i++
main.go:8102:6: should replace i += 1 with i++
main.go:8111:6: should replace i += 1 with i++
main.go:8122:6: should replace i += 1 with i++
main.go:8131:6: should replace i += 1 with i++
main.go:8143:6: should replace i += 1 with i++
main.go:8153:7: should replace i += 1 with i++
main.go:8164:6: should replace i += 1 with i++
main.go:8176:6: should replace i += 1 with i++
main.go:8281:6: should replace i += 1 with i++
main.go:8287:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8294:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8301:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8308:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8315:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8322:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8329:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8336:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8343:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8350:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8357:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8364:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8372:6: should replace i += 1 with i++
main.go:8378:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8385:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8392:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8399:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8406:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8413:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8420:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8427:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8434:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8441:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8448:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8455:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8467:6: should replace i += 1 with i++
main.go:8505:6: don't use underscores in Go names; func write_modal_results should be writeModalResults
main.go:8505:119: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:8505:139: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:8510:6: don't use underscores in Go names; var num_modes should be numModes
main.go:8523:4: should replace i += 1 with i++
main.go:8569:4: should replace j += 1 with j++
main.go:8576:6: should replace i += 1 with i++
main.go:8595:4: should replace m += 1 with m++
main.go:8601:6: should replace i += 1 with i++
main.go:8610:6: should replace i += 1 with i++
main.go:8619:6: should replace i += 1 with i++
main.go:8633:6: should replace j += 1 with j++
main.go:8639:8: should replace i -= 1 with i--
main.go:8704:8: don't use underscores in Go names; func static_mesh should be staticMesh
main.go:8704:20: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:8704:213: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:8704:235: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:8705:26: should drop = nil from declaration of var fpif; it is the zero value
main.go:8706:25: should drop = nil from declaration of var fpm; it is the zero value
main.go:8710:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:8711:13: should omit type []byte from declaration of var meshfl; it will be inferred from the right-hand side
main.go:8714:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:8716:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:8727:14: should drop = 0 from declaration of var j; it is the zero value
main.go:8728:14: should drop = 0 from declaration of var m; it is the zero value
main.go:8729:14: should drop = 0 from declaration of var n; it is the zero value
main.go:8730:14: should drop = 0 from declaration of var X; it is the zero value
main.go:8731:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:8732:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:8733:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:8738:4: should replace j += 1 with j++
main.go:8799:5: should replace j += 1 with j++
main.go:8808:5: should replace m += 1 with m++
main.go:8870:5: should replace m += 1 with m++
main.go:8914:4: should replace m += 1 with m++
main.go:8960:6: don't use underscores in Go names; func modal_mesh should be modalMesh
main.go:8960:17: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:8960:232: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:8960:253: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:8973:14: should drop = 0 from declaration of var X; it is the zero value
main.go:8974:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:8975:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:8976:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:8979:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:8980:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:8987:4: should replace i += 1 with i++
main.go:9024:4: should replace m += 1 with m++
main.go:9045:6: should replace i += 1 with i++
main.go:9054:6: should replace i += 1 with i++
main.go:9063:6: should replace i += 1 with i++
main.go:9075:6: should replace i += 1 with i++
main.go:9084:6: should replace n += 1 with n++
main.go:9094:6: should replace j += 1 with j++
main.go:9175:14: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:9175:226: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:9175:247: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:9177:6: don't use underscores in Go names; var x_min should be xMin
main.go:9177:12: should omit type float32 from declaration of var x_min; it will be inferred from the right-hand side
main.go:9178:6: don't use underscores in Go names; var x_max should be xMax
main.go:9178:12: should omit type float32 from declaration of var x_max; it will be inferred from the right-hand side
main.go:9179:6: don't use underscores in Go names; var y_min should be yMin
main.go:9179:12: should omit type float32 from declaration of var y_min; it will be inferred from the right-hand side
main.go:9180:6: don't use underscores in Go names; var y_max should be yMax
main.go:9180:12: should omit type float32 from declaration of var y_max; it will be inferred from the right-hand side
main.go:9181:6: don't use underscores in Go names; var z_min should be zMin
main.go:9181:12: should omit type float32 from declaration of var z_min; it will be inferred from the right-hand side
main.go:9182:6: don't use underscores in Go names; var z_max should be zMax
main.go:9182:12: should omit type float32 from declaration of var z_max; it will be inferred from the right-hand side
main.go:9183:11: should omit type float32 from declaration of var Dxyz; it will be inferred from the right-hand side
main.go:9184:6: don't use underscores in Go names; var rot_x_init should be rotXInit
main.go:9184:17: should omit type float32 from declaration of var rot_x_init; it will be inferred from the right-hand side
main.go:9185:6: don't use underscores in Go names; var rot_x_final should be rotXFinal
main.go:9185:18: should omit type float32 from declaration of var rot_x_final; it will be inferred from the right-hand side
main.go:9186:6: don't use underscores in Go names; var rot_z_init should be rotZInit
main.go:9186:17: should omit type float32 from declaration of var rot_z_init; it will be inferred from the right-hand side
main.go:9187:6: don't use underscores in Go names; var rot_z_final should be rotZFinal
main.go:9187:18: should omit type float32 from declaration of var rot_z_final; it will be inferred from the right-hand side
main.go:9188:6: don't use underscores in Go names; var zoom_init should be zoomInit
main.go:9188:16: should omit type float32 from declaration of var zoom_init; it will be inferred from the right-hand side
main.go:9189:6: don't use underscores in Go names; var zoom_final should be zoomFinal
main.go:9189:17: should omit type float32 from declaration of var zoom_final; it will be inferred from the right-hand side
main.go:9190:13: should omit type float32 from declaration of var frames; it will be inferred from the right-hand side
main.go:9191:9: should omit type float64 from declaration of var ex; it will be inferred from the right-hand side
main.go:9198:14: should drop = 0 from declaration of var X; it is the zero value
main.go:9199:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:9200:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:9202:13: should omit type int from declaration of var CYCLES; it will be inferred from the right-hand side
main.go:9203:6: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9203:25: should drop = 0 from declaration of var frame_number; it is the zero value
main.go:9204:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:9205:6: don't use underscores in Go names; var total_frames should be totalFrames
main.go:9209:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:9210:14: should omit type []byte from declaration of var framefl; it will be inferred from the right-hand side
main.go:9211:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9214:4: should replace j += 1 with j++
main.go:9330:6: should replace c += 1 with c++
main.go:9335:8: should replace fr += 1 with fr++
main.go:9339:9: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9339:9: should replace frame_number += 1 with frame_number++
main.go:9362:8: should replace fr -= 1 with fr--
main.go:9366:9: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9366:9: should replace frame_number += 1 with frame_number++
main.go:9392:5: should replace i += 1 with i++
main.go:9407:6: should replace fr += 1 with fr++
main.go:9428:8: should replace j += 1 with j++
main.go:9437:8: should replace n += 1 with n++
main.go:9448:5: should replace i += 1 with i++
main.go:9468:6: don't use underscores in Go names; func cubic_bent_beam should be cubicBentBeam
main.go:9502:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9582:6: don't use underscores in Go names; func force_bent_beam should be forceBentBeam
main.go:9611:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:9627:7: should replace n += 1 with n++
main.go:9661:6: don't use underscores in Go names; func my_itoa should be myItoa
main.go:9676:5: should replace i += 1 with i++
main.go:9684:5: should replace i += 1 with i++
main.go:9691:4: should replace i += 1 with i++
main.go:9700:5: should replace j += 1 with j++
main.go:9706:3: should replace j -= 1 with j--
main.go:9715:5: should replace i += 1 with i++
main.go:9719:5: should replace j -= 1 with j--
main.go:9737:8: don't use underscores in Go names; func get_file_ext should be getFileExt
main.go:9738:14: should drop = 0 from declaration of var i; it is the zero value
main.go:9739:6: don't use underscores in Go names; var full_len should be fullLen
main.go:9739:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:9740:16: should drop = 0 from declaration of var len; it is the zero value
main.go:9743:4: should replace len += 1 with len++
main.go:9751:4: should replace len -= 1 with len--
main.go:9760:3: should replace len += 1 with len++
main.go:9767:5: should replace i += 1 with i++
main.go:9771:5: should replace len += 1 with len++
main.go:9792:4: should replace i += 1 with i++
main.go:9803:33: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:10162:6: don't use underscores in Go names; func coord_trans should be coordTrans
main.go:10224:4: should replace i += 1 with i++
main.go:10228:5: should replace j += 1 with j++
main.go:10252:4: should replace i += 1 with i++
main.go:10268:4: should replace j += 1 with j++
main.go:10272:5: should replace i += 1 with i++
main.go:10276:6: should replace k += 1 with k++
main.go:10286:4: should replace i += 1 with i++
main.go:10290:5: should replace j += 1 with j++
main.go:10306:4: should replace j += 1 with j++
main.go:10310:5: should replace i += 1 with i++
main.go:10314:6: should replace k += 1 with k++
main.go:10382:6: don't use underscores in Go names; var km_old should be kmOld
main.go:10384:6: don't use underscores in Go names; var w_old should be wOld
main.go:10384:22: should drop = 0 from declaration of var w_old; it is the zero value
main.go:10385:14: should drop = 0 from declaration of var i; it is the zero value
main.go:10386:14: should drop = 0 from declaration of var j; it is the zero value
main.go:10387:14: should drop = 0 from declaration of var k; it is the zero value
main.go:10389:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:10391:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:10407:4: should replace i += 1 with i++
main.go:10413:6: should replace j += 1 with j++
main.go:10446:4: should replace i += 1 with i++
main.go:10450:5: should replace j += 1 with j++
main.go:10467:10: if block ends with a return statement, so drop this else and outdent its block
main.go:10473:4: should replace i += 1 with i++
main.go:10477:5: should replace j += 1 with j++
main.go:10487:4: should replace i += 1 with i++
main.go:10501:4: should replace k += 1 with k++
main.go:10507:6: should replace i += 1 with i++
main.go:10514:9: should replace j += 1 with j++
main.go:10533:7: should replace j += 1 with j++
main.go:10549:4: should replace k += 1 with k++
main.go:10606:6: should replace k += 1 with k++
main.go:10631:8: should replace i += 1 with i++
main.go:10651:5: should replace (iter[0]) += 1 with (iter[0])++
main.go:10670:4: should replace k += 1 with k++
main.go:10684:5: should replace k += 1 with k++
main.go:10694:4: should replace i += 1 with i++
main.go:10698:5: should replace j += 1 with j++
main.go:10743:20: should drop = 0 from declaration of var tol; it is the zero value
main.go:10778:4: should replace i += 1 with i++
main.go:10782:5: should replace j += 1 with j++
main.go:10798:4: should replace d += 1 with d++
main.go:10806:4: should replace iter += 1 with iter++
main.go:10813:6: should replace d += 1 with d++
main.go:10818:8: should replace i += 1 with i++
main.go:10839:11: should replace k += 1 with k++
main.go:10857:4: should replace j += 1 with j++
main.go:10863:6: should replace i += 1 with i++
main.go:10873:4: should replace j += 1 with j++
main.go:10899:4: should replace k += 1 with k++
main.go:10913:4: should replace k += 1 with k++
main.go:10962:6: don't use underscores in Go names; var d_min should be dMin
main.go:10962:22: should drop = 0 from declaration of var d_min; it is the zero value
main.go:10963:6: don't use underscores in Go names; var d_max should be dMax
main.go:10963:22: should drop = 0 from declaration of var d_max; it is the zero value
main.go:10964:6: don't use underscores in Go names; var d_old should be dOld
main.go:10964:22: should drop = 0 from declaration of var d_old; it is the zero value
main.go:10971:22: should drop = 0 from declaration of var RQold; it is the zero value
main.go:10973:6: don't use underscores in Go names; var i_ex should be iEx
main.go:10973:11: should omit type int from declaration of var i_ex; it will be inferred from the right-hand side
main.go:10975:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:10979:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:10988:10: if block ends with a return statement, so drop this else and outdent its block
main.go:10994:4: should replace i += 1 with i++
main.go:10998:5: should replace j += 1 with j++
main.go:11013:4: should replace j += 1 with j++
main.go:11018:6: should replace i += 1 with i++
main.go:11045:6: should replace i += 1 with i++
main.go:11056:4: should replace i += 1 with i++
main.go:11074:4: should replace i += 1 with i++
main.go:11084:4: should replace k += 1 with k++
main.go:11090:6: should replace i += 1 with i++
main.go:11106:6: should replace i += 1 with i++
main.go:11114:6: should replace j += 1 with j++
main.go:11119:8: should replace i += 1 with i++
main.go:11130:6: should replace j += 1 with j++
main.go:11134:7: should replace i += 1 with i++
main.go:11144:6: should replace i += 1 with i++
main.go:11155:8: should replace i += 1 with i++
main.go:11161:10: should replace j += 1 with j++
main.go:11172:8: should replace i += 1 with i++
main.go:11180:8: should replace j += 1 with j++
main.go:11185:10: should replace i += 1 with i++
main.go:11196:8: should replace j += 1 with j++
main.go:11200:9: should replace i += 1 with i++
main.go:11210:8: should replace i += 1 with i++
main.go:11219:7: should replace (iter[0]) += 1 with (iter[0])++
main.go:11234:6: should replace i += 1 with i++
main.go:11271:8: should omit type float64 from declaration of var p; it will be inferred from the right-hand side
main.go:11274:4: should replace i += 1 with i++
main.go:11281:6: should replace j += 1 with j++
main.go:11297:7: should replace j += 1 with j++
main.go:11327:6: don't use underscores in Go names; var ws_shift should be wsShift
main.go:11329:15: should drop = 0 from declaration of var ok; it is the zero value
main.go:11337:10: if block ends with a return statement, so drop this else and outdent its block
main.go:11344:4: should replace i += 1 with i++
main.go:11348:5: should replace j += 1 with j++
main.go:11370:4: should replace i += 1 with i++
main.go:11374:5: should replace j += 1 with j++
main.go:11388:85: don't use underscores in Go names; func check_non_negative should be checkNonNegative
main.go:11451:11: should omit type int from declaration of var icol; it will be inferred from the right-hand side
main.go:11452:11: should omit type int from declaration of var irow; it will be inferred from the right-hand side
main.go:11466:4: should replace j += 1 with j++
main.go:11474:4: should replace i += 1 with i++
main.go:11480:6: should replace j += 1 with j++
main.go:11485:8: should replace k += 1 with k++
main.go:11504:5: should replace (ipiv[icol]) += 1 with (ipiv[icol])++
main.go:11510:7: should replace l += 1 with l++
main.go:11520:7: should replace l += 1 with l++
main.go:11538:6: should replace l += 1 with l++
main.go:11546:6: should replace l += 1 with l++
main.go:11554:6: should replace ll += 1 with ll++
main.go:11562:9: should replace l += 1 with l++
main.go:11570:9: should replace l += 1 with l++
main.go:11583:4: should replace l -= 1 with l--
main.go:11588:6: should replace k += 1 with k++
main.go:11623:6: don't use underscores in Go names; func lu_dcmp should be luDcmp
main.go:11632:5: should replace k += 1 with k++
main.go:11646:7: should replace i += 1 with i++
main.go:11652:9: should replace j += 1 with j++
main.go:11666:5: should replace k += 1 with k++
main.go:11670:6: should replace i += 1 with i++
main.go:11679:5: should replace j -= 1 with j--
main.go:11683:6: should replace i += 1 with i++
main.go:11692:5: should replace i += 1 with i++
main.go:11728:6: don't use underscores in Go names; func ldl_dcmp should be ldlDcmp
main.go:11737:5: should replace j += 1 with j++
main.go:11744:7: should replace i += 1 with i++
main.go:11749:9: should replace m += 1 with m++
main.go:11759:7: should replace i += 1 with i++
main.go:11765:9: should replace k += 1 with k++
main.go:11776:7: should replace i += 1 with i++
main.go:11784:7: should replace i += 1 with i++
main.go:11797:7: should replace (pd[0]) -= 1 with (pd[0])--
main.go:11807:5: should replace i += 1 with i++
main.go:11813:7: should replace j += 1 with j++
main.go:11823:5: should replace i += 1 with i++
main.go:11831:5: should replace i -= 1 with i--
main.go:11835:6: should replace j += 1 with j++
main.go:11861:6: don't use underscores in Go names; func ldl_mprove should be ldlMprove
main.go:11861:78: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:11864:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:11864:20: should omit type float64 from declaration of var rms_resid_new; it will be inferred from the right-hand side
main.go:11871:4: should replace i += 1 with i++
main.go:11877:6: should replace j += 1 with j++
main.go:11893:4: should replace i += 1 with i++
main.go:11896:4: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:11904:5: should replace i += 1 with i++
main.go:11945:6: don't use underscores in Go names; func ldl_dcmp_pm should be ldlDcmpPm
main.go:11954:5: should replace j += 1 with j++
main.go:11963:8: should replace i += 1 with i++
main.go:11968:10: should replace m += 1 with m++
main.go:11978:8: should replace i += 1 with i++
main.go:11985:11: should replace k += 1 with k++
main.go:11999:8: should replace i += 1 with i++
main.go:12009:8: should replace i += 1 with i++
main.go:12024:8: should replace (pd[0]) -= 1 with (pd[0])--
main.go:12035:5: should replace i += 1 with i++
main.go:12042:8: should replace j += 1 with j++
main.go:12055:5: should replace i += 1 with i++
main.go:12060:7: should replace j += 1 with j++
main.go:12072:5: should replace i += 1 with i++
main.go:12082:5: should replace i -= 1 with i--
main.go:12087:7: should replace j += 1 with j++
main.go:12099:5: should replace i += 1 with i++
main.go:12107:8: should replace j += 1 with j++
main.go:12156:6: don't use underscores in Go names; func ldl_mprove_pm should be ldlMprovePm
main.go:12156:112: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:12160:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12160:30: should drop = 0 from declaration of var rms_resid_new; it is the zero value
main.go:12168:4: should replace i += 1 with i++
main.go:12176:4: should replace i += 1 with i++
main.go:12183:7: should replace j += 1 with j++
main.go:12197:7: should replace j += 1 with j++
main.go:12212:4: should replace i += 1 with i++
main.go:12216:5: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12225:5: should replace i += 1 with i++
main.go:12253:6: don't use underscores in Go names; func PSB_update should be PSBUpdate
main.go:12256:20: should drop = 0 from declaration of var dtd; it is the zero value
main.go:12257:20: should drop = 0 from declaration of var ftd; it is the zero value
main.go:12258:21: should drop = 0 from declaration of var dtd2; it is the zero value
main.go:12261:4: should replace i += 1 with i++
main.go:12270:4: should replace i += 1 with i++
main.go:12278:4: should replace i += 1 with i++
main.go:12282:5: should replace j += 1 with j++
main.go:12301:6: don't use underscores in Go names; func pseudo_inv should be pseudoInv
main.go:12308:6: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:12308:23: should drop = 0 from declaration of var tr_AtA; it is the zero value
main.go:12324:4: should replace i += 1 with i++
main.go:12341:6: should replace j += 1 with j++
main.go:12358:4: should replace i += 1 with i++
main.go:12363:6: should replace j += 1 with j++
main.go:12369:8: should replace k += 1 with k++
main.go:12382:4: should replace i += 1 with i++
main.go:12386:5: should replace j += 1 with j++
main.go:12403:4: should replace i += 1 with i++
main.go:12406:4: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:12411:4: should replace i += 1 with i++
main.go:12420:4: should replace j += 1 with j++
main.go:12425:6: should replace k += 1 with k++
main.go:12451:6: should replace k += 1 with k++
main.go:12461:4: should replace i += 1 with i++
main.go:12465:5: should replace j += 1 with j++
main.go:12481:4: should replace i += 1 with i++
main.go:12486:6: should replace j += 1 with j++
main.go:12492:8: should replace k += 1 with k++
main.go:12520:4: should replace i += 1 with i++
main.go:12528:4: should replace i += 1 with i++
main.go:12533:6: should replace k += 1 with k++
main.go:12557:4: should replace i += 1 with i++
main.go:12561:5: should replace k += 1 with k++
main.go:12570:4: should replace i += 1 with i++
main.go:12574:5: should replace k += 1 with k++
main.go:12578:6: should replace j += 1 with j++
main.go:12610:4: should replace i += 1 with i++
main.go:12630:4: should replace j += 1 with j++
main.go:12635:6: should replace k += 1 with k++
main.go:12662:6: should replace i += 1 with i++
main.go:12697:4: should replace i += 1 with i++
main.go:12713:4: should replace j += 1 with j++
main.go:12718:6: should replace k += 1 with k++
main.go:12745:6: should replace i += 1 with i++
main.go:12751:8: should replace k += 1 with k++
main.go:12770:9: don't use underscores in Go names; func coord_xfrm should be coordXfrm
main.go:12776:4: should replace i += 1 with i++
main.go:12801:4: should replace i += 1 with i++
main.go:12805:5: should replace j += 1 with j++
main.go:12814:4: should replace i += 1 with i++
main.go:12818:5: should replace j += 1 with j++
main.go:12827:4: should replace i += 1 with i++
main.go:12832:6: should replace j += 1 with j++
main.go:12837:8: should replace k += 1 with k++
main.go:12853:4: should replace i += 1 with i++
main.go:12857:5: should replace j += 1 with j++
main.go:12861:6: should replace k += 1 with k++
main.go:12871:4: should replace i += 1 with i++
main.go:12875:5: should replace j += 1 with j++
main.go:12899:21: should drop = 0 from declaration of var xtAy; it is the zero value
main.go:12904:4: should replace i += 1 with i++
main.go:12910:6: should replace j += 1 with j++
main.go:12924:4: should replace i += 1 with i++
main.go:12961:4: should replace i += 1 with i++
main.go:12978:6: should replace j += 1 with j++
main.go:12996:4: should replace j += 1 with j++
main.go:13001:6: should replace k += 1 with k++
main.go:13029:6: should replace k += 1 with k++
main.go:13039:4: should replace i += 1 with i++
main.go:13043:5: should replace j += 1 with j++
main.go:13059:4: should replace i += 1 with i++
main.go:13064:6: should replace j += 1 with j++
main.go:13070:8: should replace k += 1 with k++
main.go:13083:4: should replace i += 1 with i++
main.go:13088:6: should replace j += 1 with j++
main.go:13094:8: should replace k += 1 with k++
main.go:13107:4: should replace i += 1 with i++
main.go:13111:5: should replace j += 1 with j++
main.go:13138:9: don't use underscores in Go names; func relative_norm should be relativeNorm
main.go:13139:19: should drop = 0 from declaration of var nN; it is the zero value
main.go:13140:19: should drop = 0 from declaration of var nD; it is the zero value
main.go:13144:4: should replace i += 1 with i++
main.go:13152:4: should replace i += 1 with i++
main.go:13171:4: should replace p += 1 with p++
main.go:13188:6: should replace k += 1 with k++
main.go:13350:17: should omit type []byte from declaration of var pathToFile; it will be inferred from the right-hand side
main.go:13351:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:13397:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13398:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:13401:4: should replace lim -= 1 with lim--
main.go:13408:5: should replace i += 1 with i++
main.go:13414:3: should replace i += 1 with i++
main.go:13426:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13427:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:13430:4: should replace lim -= 1 with lim--
main.go:13440:4: should replace lim -= 1 with lim--
main.go:13447:5: should replace i += 1 with i++
main.go:13453:3: should replace i += 1 with i++
main.go:13466:32: don't use underscores in Go names; func parameter head_lines should be headLines
main.go:13466:48: don't use underscores in Go names; func parameter start_chnl should be startChnl
main.go:13466:64: don't use underscores in Go names; func parameter stop_chnl should be stopChnl
main.go:13467:19: should drop = 0 from declaration of var points; it is the zero value
main.go:13470:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:13471:6: don't use underscores in Go names; var data_value should be dataValue
main.go:13475:4: should replace i += 1 with i++
main.go:13489:6: should replace chn += 1 with chn++
main.go:13495:8: should replace points += 1 with points++
main.go:13524:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13525:14: should drop = 0 from declaration of var i; it is the zero value
main.go:13528:4: should replace lim -= 1 with lim--
main.go:13535:5: should replace i += 1 with i++
main.go:13541:3: should replace i += 1 with i++
main.go:13556:11: should omit type []byte from declaration of var temp; it will be inferred from the right-hand side
main.go:13557:6: don't use underscores in Go names; var t_tm should be tTm
main.go:13558:6: don't use underscores in Go names; var t_time should be tTime
main.go:13577:6: don't use underscores in Go names; var line_length should be lineLength
main.go:13577:18: should omit type int from declaration of var line_length; it will be inferred from the right-hand side
main.go:13578:6: don't use underscores in Go names; var percent_done should be percentDone
main.go:13583:4: should replace k += 1 with k++
main.go:13591:4: should replace k += 1 with k++
main.go:13599:4: should replace k += 1 with k++
main.go:13615:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:13621:6: don't use underscores in Go names; type ptrdiff_t should be ptrdiffT
main.go:13622:6: don't use underscores in Go names; type max_align_t should be maxAlignT
main.go:13623:2: don't use underscores in Go names; struct field __clang_max_align_nonce1 should be _ClangMaxAlignNonce1
main.go:13624:2: don't use underscores in Go names; struct field __clang_max_align_nonce2 should be _ClangMaxAlignNonce2
main.go:13633:14: don't use underscores in Go names; func parameter error_text should be errorText
main.go:13699:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13700:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13706:2: should replace m += 1 with m++
main.go:13712:2: should replace m[nrl] += 1 with m[nrl]++
main.go:13716:4: should replace i += 1 with i++
main.go:13729:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13730:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13736:2: should replace m += 1 with m++
main.go:13742:2: should replace m[nrl] += 1 with m[nrl]++
main.go:13746:4: should replace i += 1 with i++
main.go:13759:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13760:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13766:2: should replace m += 1 with m++
main.go:13772:2: should replace m[nrl] += 1 with m[nrl]++
main.go:13776:4: should replace i += 1 with i++
main.go:13790:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13791:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13797:2: should replace m += 1 with m++
main.go:13805:5: should replace i += 1 with i++
main.go:13809:5: should replace j += 1 with j++
main.go:13822:6: don't use underscores in Go names; func convert_matrix should be convertMatrix
main.go:13825:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13826:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13832:2: should replace m += 1 with m++
main.go:13841:5: should replace i += 1 with i++
main.go:13845:5: should replace j += 1 with j++
main.go:13858:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13859:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13860:11: should omit type int32 from declaration of var ndep; it will be inferred from the right-hand side
main.go:13866:2: should replace t += 1 with t++
main.go:13872:2: should replace t[nrl] += 1 with t[nrl]++
main.go:13878:2: should replace t[nrl][ncl] += 1 with t[nrl][ncl]++
main.go:13882:4: should replace j += 1 with j++
main.go:13890:4: should replace i += 1 with i++
main.go:13897:6: should replace j += 1 with j++
main.go:13910:6: don't use underscores in Go names; func free_vector should be freeVector
main.go:13916:6: don't use underscores in Go names; func free_ivector should be freeIvector
main.go:13922:6: don't use underscores in Go names; func free_cvector should be freeCvector
main.go:13928:6: don't use underscores in Go names; func free_lvector should be freeLvector
main.go:13934:6: don't use underscores in Go names; func free_dvector should be freeDvector
main.go:13940:6: don't use underscores in Go names; func free_matrix should be freeMatrix
main.go:13947:6: don't use underscores in Go names; func free_dmatrix should be freeDmatrix
main.go:13954:6: don't use underscores in Go names; func free_imatrix should be freeImatrix
main.go:13961:6: don't use underscores in Go names; func free_subMatrix should be freeSubMatrix
main.go:13967:6: don't use underscores in Go names; func free_convert_matrix should be freeConvertMatrix
main.go:13973:6: don't use underscores in Go names; func free_f3tensor should be freeF3tensor
main.go:13981:30: exported func Cvector returns unexported type []main.fcomplex, which can be annoying to use
main.go:13992:50: exported func Cmatrix returns unexported type [][]main.fcomplex, which can be annoying to use
main.go:14002:4: should replace i += 1 with i++
main.go:14028:4: should replace i += 1 with i++
main.go:14038:6: should replace j += 1 with j++
main.go:14066:4: should replace i += 1 with i++
main.go:14076:6: should replace j += 1 with j++
main.go:14092:6: don't use underscores in Go names; func free_Cvector should be freeCvector
main.go:14097:6: don't use underscores in Go names; func free_Cmatrix should be freeCmatrix
main.go:14101:4: should replace i -= 1 with i--
main.go:14111:6: don't use underscores in Go names; func free_D3matrix should be freeD3matrix
main.go:14116:4: should replace i -= 1 with i--
main.go:14121:6: should replace j -= 1 with j--
main.go:14132:6: don't use underscores in Go names; func free_D3dmatrix should be freeD3dmatrix
main.go:14137:4: should replace i -= 1 with i--
main.go:14142:6: should replace j -= 1 with j--
main.go:14155:9: don't use underscores in Go names; func show_vector should be showVector
main.go:14159:4: should replace j += 1 with j++
main.go:14176:9: don't use underscores in Go names; func show_dvector should be showDvector
main.go:14180:4: should replace j += 1 with j++
main.go:14197:9: don't use underscores in Go names; func show_ivector should be showIvector
main.go:14201:4: should replace j += 1 with j++
main.go:14218:9: don't use underscores in Go names; func show_matrix should be showMatrix
main.go:14223:4: should replace i += 1 with i++
main.go:14228:6: should replace j += 1 with j++
main.go:14251:9: don't use underscores in Go names; func show_dmatrix should be showDmatrix
main.go:14256:4: should replace i += 1 with i++
main.go:14261:6: should replace j += 1 with j++
main.go:14284:9: don't use underscores in Go names; func save_vector should be saveVector
main.go:14285:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14302:4: should replace i += 1 with i++
main.go:14320:9: don't use underscores in Go names; func save_dvector should be saveDvector
main.go:14321:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14338:4: should replace i += 1 with i++
main.go:14356:9: don't use underscores in Go names; func save_ivector should be saveIvector
main.go:14357:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14374:4: should replace i += 1 with i++
main.go:14392:9: don't use underscores in Go names; func save_matrix should be saveMatrix
main.go:14393:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14424:5: should replace j += 1 with j++
main.go:14429:7: should replace i += 1 with i++
main.go:14445:5: should replace i += 1 with i++
main.go:14450:7: should replace j += 1 with j++
main.go:14471:9: don't use underscores in Go names; func save_dmatrix should be saveDmatrix
main.go:14472:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14503:5: should replace j += 1 with j++
main.go:14508:7: should replace i += 1 with i++
main.go:14524:5: should replace i += 1 with i++
main.go:14529:7: should replace j += 1 with j++
main.go:14552:9: don't use underscores in Go names; func save_ut_matrix should be saveUtMatrix
main.go:14553:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14571:4: should replace i += 1 with i++
main.go:14576:6: should replace j += 1 with j++
main.go:14606:9: don't use underscores in Go names; func save_ut_dmatrix should be saveUtDmatrix
main.go:14607:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14625:4: should replace i += 1 with i++
main.go:14630:6: should replace j += 1 with j++
