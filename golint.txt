main.go:181:6: don't use underscores in Go names; type float_t should be floatT
main.go:182:6: don't use underscores in Go names; type double_t should be doubleT
main.go:184:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:184:7: exported const FP_NAN should have comment or be unexported
main.go:185:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:185:7: exported const FP_INFINITE should have comment or be unexported
main.go:186:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:186:7: exported const FP_ZERO should have comment or be unexported
main.go:187:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:187:7: exported const FP_SUBNORMAL should have comment or be unexported
main.go:188:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:188:7: exported const FP_NORMAL should have comment or be unexported
main.go:189:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:190:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:191:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:192:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:193:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:195:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:197:2: don't use underscores in Go names; struct field type_ should be type
main.go:203:6: don't use underscores in Go names; type size_t should be sizeT
main.go:204:6: don't use underscores in Go names; type __u_char should be _UChar
main.go:205:6: don't use underscores in Go names; type __u_short should be _UShort
main.go:206:6: don't use underscores in Go names; type __u_int should be _UInt
main.go:207:6: don't use underscores in Go names; type __u_long should be _ULong
main.go:208:6: don't use underscores in Go names; type __int8_t should be _Int8T
main.go:209:6: don't use underscores in Go names; type __uint8_t should be _Uint8T
main.go:210:6: don't use underscores in Go names; type __int16_t should be _Int16T
main.go:211:6: don't use underscores in Go names; type __uint16_t should be _Uint16T
main.go:212:6: don't use underscores in Go names; type __int32_t should be _Int32T
main.go:213:6: don't use underscores in Go names; type __uint32_t should be _Uint32T
main.go:214:6: don't use underscores in Go names; type __int64_t should be _Int64T
main.go:215:6: don't use underscores in Go names; type __uint64_t should be _Uint64T
main.go:216:6: don't use underscores in Go names; type __quad_t should be _QuadT
main.go:217:6: don't use underscores in Go names; type __u_quad_t should be _UQuadT
main.go:218:6: don't use underscores in Go names; type __dev_t should be _DevT
main.go:219:6: don't use underscores in Go names; type __uid_t should be _UIDT
main.go:220:6: don't use underscores in Go names; type __gid_t should be _GidT
main.go:221:6: don't use underscores in Go names; type __ino_t should be _InoT
main.go:222:6: don't use underscores in Go names; type __ino64_t should be _Ino64T
main.go:223:6: don't use underscores in Go names; type __mode_t should be _ModeT
main.go:224:6: don't use underscores in Go names; type __nlink_t should be _NlinkT
main.go:225:6: don't use underscores in Go names; type __off_t should be _OffT
main.go:226:6: don't use underscores in Go names; type __off64_t should be _Off64T
main.go:227:6: don't use underscores in Go names; type __pid_t should be _PidT
main.go:228:6: don't use underscores in Go names; type __fsid_t should be _FsidT
main.go:229:2: don't use underscores in Go names; struct field __val should be _Val
main.go:231:6: don't use underscores in Go names; type __clock_t should be _ClockT
main.go:232:6: don't use underscores in Go names; type __rlim_t should be _RlimT
main.go:233:6: don't use underscores in Go names; type __rlim64_t should be _Rlim64T
main.go:234:6: don't use underscores in Go names; type __id_t should be _IDT
main.go:235:6: don't use underscores in Go names; type __time_t should be _TimeT
main.go:236:6: don't use underscores in Go names; type __useconds_t should be _UsecondsT
main.go:237:6: don't use underscores in Go names; type __suseconds_t should be _SusecondsT
main.go:238:6: don't use underscores in Go names; type __daddr_t should be _DaddrT
main.go:239:6: don't use underscores in Go names; type __key_t should be _KeyT
main.go:240:6: don't use underscores in Go names; type __clockid_t should be _ClockidT
main.go:241:6: don't use underscores in Go names; type __timer_t should be _TimerT
main.go:242:6: don't use underscores in Go names; type __blksize_t should be _BlksizeT
main.go:243:6: don't use underscores in Go names; type __blkcnt_t should be _BlkcntT
main.go:244:6: don't use underscores in Go names; type __blkcnt64_t should be _Blkcnt64T
main.go:245:6: don't use underscores in Go names; type __fsblkcnt_t should be _FsblkcntT
main.go:246:6: don't use underscores in Go names; type __fsblkcnt64_t should be _Fsblkcnt64T
main.go:247:6: don't use underscores in Go names; type __fsfilcnt_t should be _FsfilcntT
main.go:248:6: don't use underscores in Go names; type __fsfilcnt64_t should be _Fsfilcnt64T
main.go:249:6: don't use underscores in Go names; type __fsword_t should be _FswordT
main.go:250:6: don't use underscores in Go names; type __ssize_t should be _SsizeT
main.go:251:6: don't use underscores in Go names; type __syscall_slong_t should be _SyscallSlongT
main.go:252:6: don't use underscores in Go names; type __syscall_ulong_t should be _SyscallUlongT
main.go:253:6: don't use underscores in Go names; type __loff_t should be _LoffT
main.go:254:6: don't use underscores in Go names; type __qaddr_t should be _QaddrT
main.go:255:6: don't use underscores in Go names; type __caddr_t should be _CaddrT
main.go:256:6: don't use underscores in Go names; type __intptr_t should be _IntptrT
main.go:257:6: don't use underscores in Go names; type __socklen_t should be _SocklenT
main.go:258:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:260:6: exported type FILE should have comment or be unexported
main.go:262:6: don't use ALL_CAPS in Go names; use CamelCase
main.go:263:6: exported type BSunionSatSSusrSincludeSwcharPhD85D3E should have comment or be unexported
main.go:268:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:271:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:275:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.UntypedSet should have comment or be unexported
main.go:275:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:279:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wch should have comment or be unexported
main.go:279:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:279:52: don't use underscores in Go names; method Get__wch should be GetWch
main.go:283:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wch should have comment or be unexported
main.go:283:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:283:52: don't use underscores in Go names; method Set__wch should be SetWch
main.go:288:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Get__wchb should have comment or be unexported
main.go:288:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:288:52: don't use underscores in Go names; method Get__wchb should be GetWchb
main.go:292:1: exported method BSunionSatSSusrSincludeSwcharPhD85D3E.Set__wchb should have comment or be unexported
main.go:292:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:292:52: don't use underscores in Go names; method Set__wchb should be SetWchb
main.go:298:6: don't use underscores in Go names; type __mbstate_t should be _MbstateT
main.go:299:2: don't use underscores in Go names; struct field __count should be _Count
main.go:300:2: don't use underscores in Go names; struct field __value should be _Value
main.go:302:6: don't use underscores in Go names; type _G_fpos_t should be _GFposT
main.go:303:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:304:2: don't use underscores in Go names; struct field __state should be _State
main.go:306:6: don't use underscores in Go names; type _G_fpos64_t should be _GFpos64T
main.go:307:2: don't use underscores in Go names; struct field __pos should be _Pos
main.go:308:2: don't use underscores in Go names; struct field __state should be _State
main.go:310:6: don't use underscores in Go names; type va_list should be vaList
main.go:311:6: don't use underscores in Go names; type __gnuc_va_list should be _GnucVaList
main.go:312:6: don't use underscores in Go names; type _IO_jump_t should be _IOJumpT
main.go:314:6: don't use underscores in Go names; type _IO_lock_t should be _IOLockT
main.go:316:6: don't use underscores in Go names; type _IO_marker should be _IOMarker
main.go:321:6: don't use underscores in Go names; type __codecvt_result should be _CodecvtResult
main.go:324:2: don't use underscores in Go names; const __codecvt_ok should be _CodecvtOk
main.go:325:2: don't use underscores in Go names; const __codecvt_partial should be _CodecvtPartial
main.go:326:2: don't use underscores in Go names; const __codecvt_error should be _CodecvtError
main.go:327:2: don't use underscores in Go names; const __codecvt_noconv should be _CodecvtNoconv
main.go:330:6: don't use underscores in Go names; type _IO_FILE_plus should be _IOFILEPlus
main.go:332:6: don't use underscores in Go names; type __io_read_fn should be _IoReadFn
main.go:333:6: don't use underscores in Go names; type __io_write_fn should be _IoWriteFn
main.go:334:6: don't use underscores in Go names; type __io_seek_fn should be _IoSeekFn
main.go:335:6: don't use underscores in Go names; type __io_close_fn should be _IoCloseFn
main.go:336:6: don't use underscores in Go names; type cookie_read_function_t should be cookieReadFunctionT
main.go:337:6: don't use underscores in Go names; type cookie_write_function_t should be cookieWriteFunctionT
main.go:338:6: don't use underscores in Go names; type cookie_seek_function_t should be cookieSeekFunctionT
main.go:339:6: don't use underscores in Go names; type cookie_close_function_t should be cookieCloseFunctionT
main.go:340:6: don't use underscores in Go names; type _IO_cookie_io_functions_t should be _IOCookieIoFunctionsT
main.go:346:6: don't use underscores in Go names; type cookie_io_functions_t should be cookieIoFunctionsT
main.go:347:6: don't use underscores in Go names; type _IO_cookie_file should be _IOCookieFile
main.go:349:6: don't use underscores in Go names; type off_t should be offT
main.go:350:6: don't use underscores in Go names; type off64_t should be off64T
main.go:351:6: don't use underscores in Go names; type ssize_t should be ssizeT
main.go:352:6: don't use underscores in Go names; type fpos_t should be fposT
main.go:353:6: don't use underscores in Go names; type fpos64_t should be fpos64T
main.go:371:6: don't use underscores in Go names; type wchar_t should be wcharT
main.go:373:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:373:7: exported const P_ALL should have comment or be unexported
main.go:374:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:374:7: exported const P_PID should have comment or be unexported
main.go:375:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:375:7: exported const P_PGID should have comment or be unexported
main.go:377:6: don't use underscores in Go names; type idtype_t should be idtypeT
main.go:378:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD69D5E should have comment or be unexported
main.go:379:2: don't use underscores in Go names; struct field __w_termsig should be _WTermsig
main.go:380:2: don't use underscores in Go names; struct field __w_coredump should be _WCoredump
main.go:381:2: don't use underscores in Go names; struct field __w_retcode should be _WRetcode
main.go:383:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSwaitstatusPhD84D5E should have comment or be unexported
main.go:384:2: don't use underscores in Go names; struct field __w_stopval should be _WStopval
main.go:385:2: don't use underscores in Go names; struct field __w_stopsig should be _WStopsig
main.go:392:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:395:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:399:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:403:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:403:19: don't use underscores in Go names; method GetW_status should be GetWStatus
main.go:407:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:407:19: don't use underscores in Go names; method SetW_status should be SetWStatus
main.go:412:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:412:19: don't use underscores in Go names; method Get__wait_terminated should be GetWaitTerminated
main.go:416:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:416:19: don't use underscores in Go names; method Set__wait_terminated should be SetWaitTerminated
main.go:421:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:421:19: don't use underscores in Go names; method Get__wait_stopped should be GetWaitStopped
main.go:425:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:425:19: don't use underscores in Go names; method Set__wait_stopped should be SetWaitStopped
main.go:431:6: don't use underscores in Go names; type div_t should be divT
main.go:435:6: don't use underscores in Go names; type ldiv_t should be ldivT
main.go:439:6: don't use underscores in Go names; type lldiv_t should be lldivT
main.go:443:6: don't use underscores in Go names; type __locale_data should be _LocaleData
main.go:445:6: don't use underscores in Go names; type __locale_t should be _LocaleT
main.go:446:2: don't use underscores in Go names; struct field __locales should be _Locales
main.go:447:2: don't use underscores in Go names; struct field __ctype_b should be _CtypeB
main.go:448:2: don't use underscores in Go names; struct field __ctype_tolower should be _CtypeTolower
main.go:449:2: don't use underscores in Go names; struct field __ctype_toupper should be _CtypeToupper
main.go:450:2: don't use underscores in Go names; struct field __names should be _Names
main.go:452:6: don't use underscores in Go names; type locale_t should be localeT
main.go:453:6: don't use underscores in Go names; type u_char should be uChar
main.go:454:6: don't use underscores in Go names; type u_short should be uShort
main.go:455:6: don't use underscores in Go names; type u_int should be uInt
main.go:456:6: don't use underscores in Go names; type u_long should be uLong
main.go:457:6: don't use underscores in Go names; type quad_t should be quadT
main.go:458:6: don't use underscores in Go names; type u_quad_t should be uQuadT
main.go:459:6: don't use underscores in Go names; type fsid_t should be fsidT
main.go:460:6: don't use underscores in Go names; type loff_t should be loffT
main.go:461:6: don't use underscores in Go names; type ino_t should be inoT
main.go:462:6: don't use underscores in Go names; type ino64_t should be ino64T
main.go:463:6: don't use underscores in Go names; type dev_t should be devT
main.go:464:6: don't use underscores in Go names; type gid_t should be gidT
main.go:465:6: don't use underscores in Go names; type mode_t should be modeT
main.go:466:6: don't use underscores in Go names; type nlink_t should be nlinkT
main.go:467:6: don't use underscores in Go names; type uid_t should be uidT
main.go:468:6: don't use underscores in Go names; type pid_t should be pidT
main.go:469:6: don't use underscores in Go names; type id_t should be idT
main.go:470:6: don't use underscores in Go names; type daddr_t should be daddrT
main.go:471:6: don't use underscores in Go names; type caddr_t should be caddrT
main.go:472:6: don't use underscores in Go names; type key_t should be keyT
main.go:473:6: don't use underscores in Go names; type clock_t should be clockT
main.go:474:6: don't use underscores in Go names; type time_t should be timeT
main.go:475:6: don't use underscores in Go names; type clockid_t should be clockidT
main.go:476:6: don't use underscores in Go names; type timer_t should be timerT
main.go:477:6: don't use underscores in Go names; type useconds_t should be usecondsT
main.go:478:6: don't use underscores in Go names; type suseconds_t should be susecondsT
main.go:482:6: don't use underscores in Go names; type int8_t should be int8T
main.go:483:6: don't use underscores in Go names; type int16_t should be int16T
main.go:484:6: don't use underscores in Go names; type int32_t should be int32T
main.go:485:6: don't use underscores in Go names; type int64_t should be int64T
main.go:486:6: don't use underscores in Go names; type u_int8_t should be uInt8T
main.go:487:6: don't use underscores in Go names; type u_int16_t should be uInt16T
main.go:488:6: don't use underscores in Go names; type u_int32_t should be uInt32T
main.go:489:6: don't use underscores in Go names; type u_int64_t should be uInt64T
main.go:490:6: don't use underscores in Go names; type register_t should be registerT
main.go:491:6: don't use underscores in Go names; type __sig_atomic_t should be _SigAtomicT
main.go:492:6: don't use underscores in Go names; type __sigset_t should be _SigsetT
main.go:493:2: don't use underscores in Go names; struct field __val should be _Val
main.go:495:6: don't use underscores in Go names; type sigset_t should be sigsetT
main.go:497:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:498:2: don't use underscores in Go names; struct field tv_nsec should be tvNsec
main.go:501:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:502:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:504:6: don't use underscores in Go names; type __fd_mask should be _FdMask
main.go:505:2: don't use underscores in Go names; struct field tv_sec should be tvSec
main.go:506:2: don't use underscores in Go names; struct field tv_usec should be tvUsec
main.go:508:6: don't use underscores in Go names; type fd_set should be fdSet
main.go:509:2: don't use underscores in Go names; struct field fds_bits should be fdsBits
main.go:511:6: don't use underscores in Go names; type fd_mask should be fdMask
main.go:512:6: don't use underscores in Go names; type blksize_t should be blksizeT
main.go:513:6: don't use underscores in Go names; type blkcnt_t should be blkcntT
main.go:514:6: don't use underscores in Go names; type fsblkcnt_t should be fsblkcntT
main.go:515:6: don't use underscores in Go names; type fsfilcnt_t should be fsfilcntT
main.go:516:6: don't use underscores in Go names; type blkcnt64_t should be blkcnt64T
main.go:517:6: don't use underscores in Go names; type fsblkcnt64_t should be fsblkcnt64T
main.go:518:6: don't use underscores in Go names; type fsfilcnt64_t should be fsfilcnt64T
main.go:519:6: don't use underscores in Go names; type pthread_t should be pthreadT
main.go:520:6: don't use underscores in Go names; type pthread_attr_t should be pthreadAttrT
main.go:525:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:528:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:532:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:536:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:536:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:540:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:540:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:545:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:545:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:549:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:549:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:555:6: don't use underscores in Go names; type __pthread_internal_list should be _PthreadInternalList
main.go:556:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:557:2: don't use underscores in Go names; struct field __next should be _Next
main.go:559:6: don't use underscores in Go names; type __pthread_list_t should be _PthreadListT
main.go:560:2: don't use underscores in Go names; struct field __prev should be _Prev
main.go:561:2: don't use underscores in Go names; struct field __next should be _Next
main.go:563:6: don't use underscores in Go names; type __pthread_mutex_s should be _PthreadMutexS
main.go:564:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:565:2: don't use underscores in Go names; struct field __count should be _Count
main.go:566:2: don't use underscores in Go names; struct field __owner should be _Owner
main.go:567:2: don't use underscores in Go names; struct field __nusers should be _Nusers
main.go:568:2: don't use underscores in Go names; struct field __kind should be _Kind
main.go:569:2: don't use underscores in Go names; struct field __spins should be _Spins
main.go:570:2: don't use underscores in Go names; struct field __elision should be _Elision
main.go:571:2: don't use underscores in Go names; struct field __list should be _List
main.go:573:6: don't use underscores in Go names; type pthread_mutex_t should be pthreadMutexT
main.go:578:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:581:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:585:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:589:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:589:30: don't use underscores in Go names; method Get__data should be GetData
main.go:593:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:593:30: don't use underscores in Go names; method Set__data should be SetData
main.go:598:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:598:30: don't use underscores in Go names; method Get__size should be GetSize
main.go:602:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:602:30: don't use underscores in Go names; method Set__size should be SetSize
main.go:607:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:607:30: don't use underscores in Go names; method Get__align should be GetAlign
main.go:611:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:611:30: don't use underscores in Go names; method Set__align should be SetAlign
main.go:617:6: don't use underscores in Go names; type pthread_mutexattr_t should be pthreadMutexattrT
main.go:622:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:625:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:629:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:633:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:633:34: don't use underscores in Go names; method Get__size should be GetSize
main.go:637:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:637:34: don't use underscores in Go names; method Set__size should be SetSize
main.go:642:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:642:34: don't use underscores in Go names; method Get__align should be GetAlign
main.go:646:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:646:34: don't use underscores in Go names; method Set__align should be SetAlign
main.go:652:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD141D3E should have comment or be unexported
main.go:653:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:654:2: don't use underscores in Go names; struct field __futex should be _Futex
main.go:655:2: don't use underscores in Go names; struct field __total_seq should be _TotalSeq
main.go:656:2: don't use underscores in Go names; struct field __wakeup_seq should be _WakeupSeq
main.go:657:2: don't use underscores in Go names; struct field __woken_seq should be _WokenSeq
main.go:658:2: don't use underscores in Go names; struct field __mutex should be _Mutex
main.go:659:2: don't use underscores in Go names; struct field __nwaiters should be _Nwaiters
main.go:660:2: don't use underscores in Go names; struct field __broadcast_seq should be _BroadcastSeq
main.go:662:6: don't use underscores in Go names; type pthread_cond_t should be pthreadCondT
main.go:667:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:670:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:674:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:678:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:678:29: don't use underscores in Go names; method Get__data should be GetData
main.go:682:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:682:29: don't use underscores in Go names; method Set__data should be SetData
main.go:687:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:687:29: don't use underscores in Go names; method Get__size should be GetSize
main.go:691:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:691:29: don't use underscores in Go names; method Set__size should be SetSize
main.go:696:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:696:29: don't use underscores in Go names; method Get__align should be GetAlign
main.go:700:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:700:29: don't use underscores in Go names; method Set__align should be SetAlign
main.go:706:6: don't use underscores in Go names; type pthread_condattr_t should be pthreadCondattrT
main.go:711:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:714:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:718:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:722:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:722:33: don't use underscores in Go names; method Get__size should be GetSize
main.go:726:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:726:33: don't use underscores in Go names; method Set__size should be SetSize
main.go:731:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:731:33: don't use underscores in Go names; method Get__align should be GetAlign
main.go:735:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:735:33: don't use underscores in Go names; method Set__align should be SetAlign
main.go:741:6: don't use underscores in Go names; type pthread_key_t should be pthreadKeyT
main.go:742:6: don't use underscores in Go names; type pthread_once_t should be pthreadOnceT
main.go:743:6: exported type BSstructSatSSusrSincludeSx86_64TlinuxTgnuSbitsSpthreadtypesPhD177D3E should have comment or be unexported
main.go:744:2: don't use underscores in Go names; struct field __lock should be _Lock
main.go:745:2: don't use underscores in Go names; struct field __nr_readers should be _NrReaders
main.go:746:2: don't use underscores in Go names; struct field __readers_wakeup should be _ReadersWakeup
main.go:747:2: don't use underscores in Go names; struct field __writer_wakeup should be _WriterWakeup
main.go:748:2: don't use underscores in Go names; struct field __nr_readers_queued should be _NrReadersQueued
main.go:749:2: don't use underscores in Go names; struct field __nr_writers_queued should be _NrWritersQueued
main.go:750:2: don't use underscores in Go names; struct field __writer should be _Writer
main.go:751:2: don't use underscores in Go names; struct field __shared should be _Shared
main.go:752:2: don't use underscores in Go names; struct field __rwelision should be _Rwelision
main.go:753:2: don't use underscores in Go names; struct field __pad1 should be _Pad1
main.go:754:2: don't use underscores in Go names; struct field __pad2 should be _Pad2
main.go:755:2: don't use underscores in Go names; struct field __flags should be _Flags
main.go:757:6: don't use underscores in Go names; type pthread_rwlock_t should be pthreadRwlockT
main.go:762:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:765:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:769:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:773:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:773:31: don't use underscores in Go names; method Get__data should be GetData
main.go:777:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:777:31: don't use underscores in Go names; method Set__data should be SetData
main.go:782:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:782:31: don't use underscores in Go names; method Get__size should be GetSize
main.go:786:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:786:31: don't use underscores in Go names; method Set__size should be SetSize
main.go:791:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:791:31: don't use underscores in Go names; method Get__align should be GetAlign
main.go:795:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:795:31: don't use underscores in Go names; method Set__align should be SetAlign
main.go:801:6: don't use underscores in Go names; type pthread_rwlockattr_t should be pthreadRwlockattrT
main.go:806:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:809:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:813:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:817:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:817:35: don't use underscores in Go names; method Get__size should be GetSize
main.go:821:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:821:35: don't use underscores in Go names; method Set__size should be SetSize
main.go:826:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:826:35: don't use underscores in Go names; method Get__align should be GetAlign
main.go:830:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:830:35: don't use underscores in Go names; method Set__align should be SetAlign
main.go:836:6: don't use underscores in Go names; type pthread_spinlock_t should be pthreadSpinlockT
main.go:837:6: don't use underscores in Go names; type pthread_barrier_t should be pthreadBarrierT
main.go:842:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:845:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:849:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:853:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:853:32: don't use underscores in Go names; method Get__size should be GetSize
main.go:857:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:857:32: don't use underscores in Go names; method Set__size should be SetSize
main.go:862:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:862:32: don't use underscores in Go names; method Get__align should be GetAlign
main.go:866:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:866:32: don't use underscores in Go names; method Set__align should be SetAlign
main.go:872:6: don't use underscores in Go names; type pthread_barrierattr_t should be pthreadBarrierattrT
main.go:877:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:880:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:884:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:888:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:888:36: don't use underscores in Go names; method Get__size should be GetSize
main.go:892:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:892:36: don't use underscores in Go names; method Set__size should be SetSize
main.go:897:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:897:36: don't use underscores in Go names; method Get__align should be GetAlign
main.go:901:1: receiver name should be a reflection of its identity; don't use generic names such as "this" or "self"
main.go:901:36: don't use underscores in Go names; method Set__align should be SetAlign
main.go:907:6: don't use underscores in Go names; type random_data should be randomData
main.go:911:2: don't use underscores in Go names; struct field rand_type should be randType
main.go:912:2: don't use underscores in Go names; struct field rand_deg should be randDeg
main.go:913:2: don't use underscores in Go names; struct field rand_sep should be randSep
main.go:914:2: don't use underscores in Go names; struct field end_ptr should be endPtr
main.go:916:6: don't use underscores in Go names; type drand48_data should be drand48Data
main.go:917:2: don't use underscores in Go names; struct field __x should be _X
main.go:918:2: don't use underscores in Go names; struct field __old_x should be _OldX
main.go:919:2: don't use underscores in Go names; struct field __c should be _C
main.go:920:2: don't use underscores in Go names; struct field __init should be _Init
main.go:921:2: don't use underscores in Go names; struct field __a should be _A
main.go:923:6: don't use underscores in Go names; type __compar_fn_t should be _ComparFnT
main.go:924:6: don't use underscores in Go names; type comparison_fn_t should be comparisonFnT
main.go:925:6: don't use underscores in Go names; type __compar_d_fn_t should be _ComparDFnT
main.go:926:6: don't use underscores in Go names; type vec3_struct should be vec3Struct
main.go:959:2: don't use underscores in Go names; struct field tm_sec should be tmSec
main.go:960:2: don't use underscores in Go names; struct field tm_min should be tmMin
main.go:961:2: don't use underscores in Go names; struct field tm_hour should be tmHour
main.go:962:2: don't use underscores in Go names; struct field tm_mday should be tmMday
main.go:963:2: don't use underscores in Go names; struct field tm_mon should be tmMon
main.go:964:2: don't use underscores in Go names; struct field tm_year should be tmYear
main.go:965:2: don't use underscores in Go names; struct field tm_wday should be tmWday
main.go:966:2: don't use underscores in Go names; struct field tm_yday should be tmYday
main.go:967:2: don't use underscores in Go names; struct field tm_isdst should be tmIsdst
main.go:968:2: don't use underscores in Go names; struct field tm_gmtoff should be tmGmtoff
main.go:969:2: don't use underscores in Go names; struct field tm_zone should be tmZone
main.go:972:2: don't use underscores in Go names; struct field it_interval should be itInterval
main.go:973:2: don't use underscores in Go names; struct field it_value should be itValue
main.go:977:6: don't use underscores in Go names; type intptr_t should be intptrT
main.go:978:6: don't use underscores in Go names; type socklen_t should be socklenT
main.go:980:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:981:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:982:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:983:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:984:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:985:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:986:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:987:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:988:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:989:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:990:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:991:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:992:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:993:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:994:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:995:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:996:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:997:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:998:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:999:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1000:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1001:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1002:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1003:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1004:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1005:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1006:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1007:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1008:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1009:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1010:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1011:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1012:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1013:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1014:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1015:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1016:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1017:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1018:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1019:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1020:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1021:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1022:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1023:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1024:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1025:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1026:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1027:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1028:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1029:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1030:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1031:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1032:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1033:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1034:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1035:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1036:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1037:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1038:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1039:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1040:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1041:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1042:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1043:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1044:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1045:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1046:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1047:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1048:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1049:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1050:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1051:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1052:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1053:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1054:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1055:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1056:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1057:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1058:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1059:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1060:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1061:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1062:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1063:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1064:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1065:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1066:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1067:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1068:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1069:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1070:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1071:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1072:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1073:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1074:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1075:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1076:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1077:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1078:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1079:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1080:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1081:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1082:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1083:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1084:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1085:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1086:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1087:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1088:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1089:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1090:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1091:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1092:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1093:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1094:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1095:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1096:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1097:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1098:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1099:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1100:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1101:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1102:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1103:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1104:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1105:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1106:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1107:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1108:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1109:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1110:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1111:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1112:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1113:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1114:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1115:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1116:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1117:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1118:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1119:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1120:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1121:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1122:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1123:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1124:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1125:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1126:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1127:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1128:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1129:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1130:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1131:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1132:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1133:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1134:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1135:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1136:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1137:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1138:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1139:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1140:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1141:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1142:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1143:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1144:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1145:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1146:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1147:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1148:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1149:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1150:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1151:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1152:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1153:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1154:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1155:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1156:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1157:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1158:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1159:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1160:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1161:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1162:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1163:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1164:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1165:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1166:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1167:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1168:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1169:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1170:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1171:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1172:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1173:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1174:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1175:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1176:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1177:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1178:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1179:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1180:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1181:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1182:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1183:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1184:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1185:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1186:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1187:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1188:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1189:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1190:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1191:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1192:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1193:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1194:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1195:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1196:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1197:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1198:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1199:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1200:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1201:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1202:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1203:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1204:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1205:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1206:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1207:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1208:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1209:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1210:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1211:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1212:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1213:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1214:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1215:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1216:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1217:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1218:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1219:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1220:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1221:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1222:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1223:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1224:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1225:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1226:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1227:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1228:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1229:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1230:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1231:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1232:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1233:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1234:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1235:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1236:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1237:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1238:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1239:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1240:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1241:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1242:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1243:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1244:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1245:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1246:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1247:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1248:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1249:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1250:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1251:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1252:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1253:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1254:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1255:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1256:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1257:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1258:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1259:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1260:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1261:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1262:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1263:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1264:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1265:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1266:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1267:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1268:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1269:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1270:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1271:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1272:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1273:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1274:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1275:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1276:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1277:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1278:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1279:7: don't use ALL_CAPS in Go names; use CamelCase
main.go:1281:6: exported type FCOMPLEX should have comment or be unexported
main.go:1481:6: don't use underscores in Go names; var IN_file should be INFile
main.go:1481:14: should omit type []byte from declaration of var IN_file; it will be inferred from the right-hand side
main.go:1482:6: don't use underscores in Go names; var OUT_file should be OUTFile
main.go:1482:15: should omit type []byte from declaration of var OUT_file; it will be inferred from the right-hand side
main.go:1483:12: should omit type []byte from declaration of var title; it will be inferred from the right-hand side
main.go:1484:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:1485:15: should omit type []byte from declaration of var meshpath; it will be inferred from the right-hand side
main.go:1486:15: should omit type []byte from declaration of var plotpath; it will be inferred from the right-hand side
main.go:1487:15: should omit type []byte from declaration of var infcpath; it will be inferred from the right-hand side
main.go:1488:15: should omit type []byte from declaration of var modepath; it will be inferred from the right-hand side
main.go:1489:24: should omit type []byte from declaration of var strippedInputFile; it will be inferred from the right-hand side
main.go:1492:21: should drop = nil from declaration of var rj; it is the zero value
main.go:1499:20: should drop = nil from declaration of var E; it is the zero value
main.go:1500:20: should drop = nil from declaration of var G; it is the zero value
main.go:1501:20: should drop = nil from declaration of var p; it is the zero value
main.go:1502:24: should drop = nil from declaration of var U; it is the zero value
main.go:1503:24: should drop = nil from declaration of var W; it is the zero value
main.go:1504:24: should drop = nil from declaration of var P; it is the zero value
main.go:1505:24: should drop = nil from declaration of var T; it is the zero value
main.go:1506:23: should drop = nil from declaration of var Dp; it is the zero value
main.go:1508:22: should drop = nil from declaration of var EMs; it is the zero value
main.go:1509:22: should drop = nil from declaration of var NMs; it is the zero value
main.go:1513:9: should omit type []float32 from declaration of var gX; it will be inferred from the right-hand side
main.go:1514:9: should omit type []float32 from declaration of var gY; it will be inferred from the right-hand side
main.go:1515:9: should omit type []float32 from declaration of var gZ; it will be inferred from the right-hand side
main.go:1516:10: should omit type float32 from declaration of var pan; it will be inferred from the right-hand side
main.go:1517:12: should omit type float32 from declaration of var scale; it will be inferred from the right-hand side
main.go:1518:9: should omit type float32 from declaration of var dx; it will be inferred from the right-hand side
main.go:1519:22: should drop = nil from declaration of var K; it is the zero value
main.go:1520:23: should drop = 0 from declaration of var traceK; it is the zero value
main.go:1521:22: should drop = nil from declaration of var M; it is the zero value
main.go:1522:23: should drop = 0 from declaration of var traceM; it is the zero value
main.go:1523:6: don't use underscores in Go names; var eqF_mech should be eqFMech
main.go:1523:31: should drop = nil from declaration of var eqF_mech; it is the zero value
main.go:1524:6: don't use underscores in Go names; var eqF_temp should be eqFTemp
main.go:1524:31: should drop = nil from declaration of var eqF_temp; it is the zero value
main.go:1525:6: don't use underscores in Go names; var F_mech should be FMech
main.go:1525:27: should drop = nil from declaration of var F_mech; it is the zero value
main.go:1526:6: don't use underscores in Go names; var F_temp should be FTemp
main.go:1526:27: should drop = nil from declaration of var F_temp; it is the zero value
main.go:1527:20: should drop = nil from declaration of var F; it is the zero value
main.go:1528:20: should drop = nil from declaration of var R; it is the zero value
main.go:1529:21: should drop = nil from declaration of var dR; it is the zero value
main.go:1530:20: should drop = nil from declaration of var D; it is the zero value
main.go:1531:21: should drop = nil from declaration of var dD; it is the zero value
main.go:1532:21: should drop = nil from declaration of var dF; it is the zero value
main.go:1533:20: should drop = nil from declaration of var L; it is the zero value
main.go:1534:21: should drop = nil from declaration of var Le; it is the zero value
main.go:1535:22: should drop = nil from declaration of var Q; it is the zero value
main.go:1536:10: should omit type float64 from declaration of var tol; it will be inferred from the right-hand side
main.go:1537:22: should drop = 0 from declaration of var shift; it is the zero value
main.go:1538:6: don't use underscores in Go names; var struct_mass should be structMass
main.go:1539:6: don't use underscores in Go names; var total_mass should be totalMass
main.go:1540:20: should drop = nil from declaration of var f; it is the zero value
main.go:1541:22: should drop = nil from declaration of var V; it is the zero value
main.go:1542:6: don't use underscores in Go names; var rms_resid should be rmsResid
main.go:1544:22: should drop = 0 from declaration of var Cfreq; it is the zero value
main.go:1547:6: don't use underscores in Go names; var exagg_static should be exaggStatic
main.go:1547:19: should omit type float64 from declaration of var exagg_static; it will be inferred from the right-hand side
main.go:1548:6: don't use underscores in Go names; var exagg_modal should be exaggModal
main.go:1548:18: should omit type float64 from declaration of var exagg_modal; it will be inferred from the right-hand side
main.go:1561:15: should drop = 0 from declaration of var nN; it is the zero value
main.go:1562:15: should drop = 0 from declaration of var nE; it is the zero value
main.go:1563:15: should drop = 0 from declaration of var nL; it is the zero value
main.go:1564:15: should drop = 0 from declaration of var lc; it is the zero value
main.go:1565:16: should drop = 0 from declaration of var DoF; it is the zero value
main.go:1568:15: should drop = 0 from declaration of var nR; it is the zero value
main.go:1569:9: should omit type []int from declaration of var nD; it will be inferred from the right-hand side
main.go:1570:9: should omit type []int from declaration of var nF; it will be inferred from the right-hand side
main.go:1571:9: should omit type []int from declaration of var nU; it will be inferred from the right-hand side
main.go:1572:9: should omit type []int from declaration of var nW; it will be inferred from the right-hand side
main.go:1573:9: should omit type []int from declaration of var nP; it will be inferred from the right-hand side
main.go:1574:9: should omit type []int from declaration of var nT; it will be inferred from the right-hand side
main.go:1575:15: should drop = 0 from declaration of var nI; it is the zero value
main.go:1576:15: should drop = 0 from declaration of var nX; it is the zero value
main.go:1577:15: should drop = 0 from declaration of var nC; it is the zero value
main.go:1580:18: should drop = 0 from declaration of var shear; it is the zero value
main.go:1581:17: should drop = 0 from declaration of var geom; it is the zero value
main.go:1582:12: should omit type int from declaration of var anlyz; it will be inferred from the right-hand side
main.go:1583:16: should drop = nil from declaration of var q; it is the zero value
main.go:1584:16: should drop = nil from declaration of var r; it is the zero value
main.go:1586:15: should drop = 0 from declaration of var nM; it is the zero value
main.go:1588:6: don't use underscores in Go names; var nM_calc should be nMCalc
main.go:1589:11: should omit type int from declaration of var lump; it will be inferred from the right-hand side
main.go:1590:17: should drop = 0 from declaration of var iter; it is the zero value
main.go:1591:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:1592:11: should omit type []int from declaration of var anim; it will be inferred from the right-hand side
main.go:1593:17: should drop = 0 from declaration of var Cdof; it is the zero value
main.go:1594:20: should drop = 0 from declaration of var Cmethod; it is the zero value
main.go:1595:16: should drop = nil from declaration of var c; it is the zero value
main.go:1596:16: should drop = nil from declaration of var m; it is the zero value
main.go:1597:21: should drop = 0 from declaration of var filetype; it is the zero value
main.go:1598:18: should drop = 0 from declaration of var debug; it is the zero value
main.go:1599:14: should omit type int from declaration of var verbose; it will be inferred from the right-hand side
main.go:1600:6: don't use underscores in Go names; var axial_strain_warning should be axialStrainWarning
main.go:1600:33: should drop = 0 from declaration of var axial_strain_warning; it is the zero value
main.go:1601:21: should drop = 0 from declaration of var ExitCode; it is the zero value
main.go:1602:6: don't use underscores in Go names; var shear_flag should be shearFlag
main.go:1602:17: should omit type int from declaration of var shear_flag; it will be inferred from the right-hand side
main.go:1603:6: don't use underscores in Go names; var geom_flag should be geomFlag
main.go:1603:16: should omit type int from declaration of var geom_flag; it will be inferred from the right-hand side
main.go:1604:6: don't use underscores in Go names; var anlyz_flag should be anlyzFlag
main.go:1604:17: should omit type int from declaration of var anlyz_flag; it will be inferred from the right-hand side
main.go:1605:6: don't use underscores in Go names; var D3_flag should be D3Flag
main.go:1605:14: should omit type int from declaration of var D3_flag; it will be inferred from the right-hand side
main.go:1606:6: don't use underscores in Go names; var lump_flag should be lumpFlag
main.go:1606:16: should omit type int from declaration of var lump_flag; it will be inferred from the right-hand side
main.go:1607:6: don't use underscores in Go names; var modal_flag should be modalFlag
main.go:1607:17: should omit type int from declaration of var modal_flag; it will be inferred from the right-hand side
main.go:1608:6: don't use underscores in Go names; var write_matrix should be writeMatrix
main.go:1608:19: should omit type int from declaration of var write_matrix; it will be inferred from the right-hand side
main.go:1609:6: don't use underscores in Go names; var axial_sign should be axialSign
main.go:1609:17: should omit type int from declaration of var axial_sign; it will be inferred from the right-hand side
main.go:1610:6: don't use underscores in Go names; var condense_flag should be condenseFlag
main.go:1610:20: should omit type int from declaration of var condense_flag; it will be inferred from the right-hand side
main.go:1611:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:1612:6: don't use underscores in Go names; var exagg_flag should be exaggFlag
main.go:1613:6: don't use underscores in Go names; var tol_flag should be tolFlag
main.go:1614:6: don't use underscores in Go names; var shift_flag should be shiftFlag
main.go:1615:6: don't use underscores in Go names; var pan_flag should be panFlag
main.go:1615:15: should omit type float32 from declaration of var pan_flag; it will be inferred from the right-hand side
main.go:1616:11: should omit type []byte from declaration of var extn; it will be inferred from the right-hand side
main.go:1800:5: should replace lc += 1 with lc++
main.go:1814:7: should replace i += 1 with i++
main.go:1837:7: should replace i += 1 with i++
main.go:1841:8: should replace j += 1 with j++
main.go:1856:8: should replace i += 1 with i++
main.go:1866:8: should replace i += 1 with i++
main.go:1885:8: should replace i += 1 with i++
main.go:1896:8: should replace i += 1 with i++
main.go:1909:8: should replace i += 1 with i++
main.go:1920:7: should replace i += 1 with i++
main.go:1939:8: should replace iter += 1 with iter++
main.go:1953:9: should replace i += 1 with i++
main.go:2008:11: if block ends with a return statement, so drop this else and outdent its block
main.go:2018:5: should replace j += 1 with j++
main.go:2029:5: should replace i += 1 with i++
main.go:2037:8: should replace j += 1 with j++
main.go:2074:6: should replace j += 1 with j++
main.go:2172:6: don't use underscores in Go names; func assemble_K should be assembleK
main.go:2175:16: should drop = 0 from declaration of var res; it is the zero value
main.go:2182:6: don't use underscores in Go names; var stiffness_fn should be stiffnessFn
main.go:2182:19: should omit type []byte from declaration of var stiffness_fn; it will be inferred from the right-hand side
main.go:2185:4: should replace i += 1 with i++
main.go:2189:5: should replace j += 1 with j++
main.go:2200:4: should replace i += 1 with i++
main.go:2219:4: should replace i += 1 with i++
main.go:2232:6: should replace l += 1 with l++
main.go:2238:8: should replace ll += 1 with ll++
main.go:2258:6: don't use underscores in Go names; func elastic_K should be elasticK
main.go:2275:4: should replace i += 1 with i++
main.go:2279:5: should replace j += 1 with j++
main.go:2462:4: should replace i += 1 with i++
main.go:2467:6: should replace j += 1 with j++
main.go:2500:6: don't use underscores in Go names; func geometric_K should be geometricK
main.go:2521:4: should replace i += 1 with i++
main.go:2525:5: should replace j += 1 with j++
main.go:2718:4: should replace i += 1 with i++
main.go:2723:6: should replace j += 1 with j++
main.go:2750:4: should replace i += 1 with i++
main.go:2754:5: should replace j += 1 with j++
main.go:2772:6: don't use underscores in Go names; func solve_system should be solveSystem
main.go:2772:123: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:2815:6: don't use underscores in Go names; func equilibrium_error should be equilibriumError
main.go:2816:6: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2816:22: should drop = 0 from declaration of var ss_dF; it is the zero value
main.go:2817:6: don't use underscores in Go names; var ss_F should be ssF
main.go:2817:21: should drop = 0 from declaration of var ss_F; it is the zero value
main.go:2818:21: should drop = 0 from declaration of var errF; it is the zero value
main.go:2823:4: should replace i += 1 with i++
main.go:2831:7: should replace j += 1 with j++
main.go:2845:7: should replace j += 1 with j++
main.go:2859:4: should replace i += 1 with i++
main.go:2863:5: don't use underscores in Go names; var ss_dF should be ssDF
main.go:2869:4: should replace i += 1 with i++
main.go:2873:5: don't use underscores in Go names; var ss_F should be ssF
main.go:2886:6: don't use underscores in Go names; func element_end_forces should be elementEndForces
main.go:2886:232: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:2886:254: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:2886:310: don't use underscores in Go names; func parameter axial_strain_warning should be axialStrainWarning
main.go:2888:6: don't use underscores in Go names; var axial_strain should be axialStrain
main.go:2888:19: should omit type float64 from declaration of var axial_strain; it will be inferred from the right-hand side
main.go:2895:4: should replace m += 1 with m++
main.go:2901:6: should replace j += 1 with j++
main.go:2910:6: should replace (axial_strain_warning[0]) += 1 with (axial_strain_warning[0])++
main.go:2947:6: don't use underscores in Go names; func frame_element_force should be frameElementForce
main.go:2947:196: don't use underscores in Go names; func parameter f_t should be fT
main.go:2947:211: don't use underscores in Go names; func parameter f_m should be fM
main.go:2947:260: don't use underscores in Go names; func parameter axial_strain should be axialStrain
main.go:2969:22: should drop = 0 from declaration of var delta; it is the zero value
main.go:2974:18: should drop = 0 from declaration of var T; it is the zero value
main.go:2975:9: should omit type float64 from declaration of var f1; it will be inferred from the right-hand side
main.go:2976:9: should omit type float64 from declaration of var f2; it will be inferred from the right-hand side
main.go:2977:9: should omit type float64 from declaration of var f3; it will be inferred from the right-hand side
main.go:2978:9: should omit type float64 from declaration of var f4; it will be inferred from the right-hand side
main.go:2979:9: should omit type float64 from declaration of var f5; it will be inferred from the right-hand side
main.go:2980:9: should omit type float64 from declaration of var f6; it will be inferred from the right-hand side
main.go:2981:9: should omit type float64 from declaration of var f7; it will be inferred from the right-hand side
main.go:2982:9: should omit type float64 from declaration of var f8; it will be inferred from the right-hand side
main.go:2983:9: should omit type float64 from declaration of var f9; it will be inferred from the right-hand side
main.go:2984:10: should omit type float64 from declaration of var f10; it will be inferred from the right-hand side
main.go:2985:10: should omit type float64 from declaration of var f11; it will be inferred from the right-hand side
main.go:2986:10: should omit type float64 from declaration of var f12; it will be inferred from the right-hand side
main.go:3115:6: don't use underscores in Go names; func compute_reaction_forces should be computeReactionForces
main.go:3120:4: should replace i += 1 with i++
main.go:3128:7: should replace j += 1 with j++
main.go:3143:6: don't use underscores in Go names; func assemble_M should be assembleM
main.go:3146:16: should drop = 0 from declaration of var res; it is the zero value
main.go:3153:6: don't use underscores in Go names; var mass_fn should be massFn
main.go:3153:14: should omit type []byte from declaration of var mass_fn; it will be inferred from the right-hand side
main.go:3156:4: should replace i += 1 with i++
main.go:3160:5: should replace j += 1 with j++
main.go:3171:4: should replace i += 1 with i++
main.go:3190:4: should replace i += 1 with i++
main.go:3204:6: should replace l += 1 with l++
main.go:3210:8: should replace ll += 1 with ll++
main.go:3223:4: should replace j += 1 with j++
main.go:3237:4: should replace i += 1 with i++
main.go:3254:6: don't use underscores in Go names; func lumped_M should be lumpedM
main.go:3277:4: should replace i += 1 with i++
main.go:3281:5: should replace j += 1 with j++
main.go:3391:6: don't use underscores in Go names; func consistent_M should be consistentM
main.go:3414:4: should replace i += 1 with i++
main.go:3418:5: should replace j += 1 with j++
main.go:3587:4: should replace i += 1 with i++
main.go:3595:4: should replace i += 1 with i++
main.go:3604:4: should replace i += 1 with i++
main.go:3609:6: should replace j += 1 with j++
main.go:3640:6: don't use underscores in Go names; func static_condensation should be staticCondensation
main.go:3658:4: should replace i += 1 with i++
main.go:3664:6: should replace j += 1 with j++
main.go:3675:6: should replace k += 1 with k++
main.go:3683:4: should replace i += 1 with i++
main.go:3688:6: should replace j += 1 with j++
main.go:3709:4: should replace i += 1 with i++
main.go:3714:6: should replace j += 1 with j++
main.go:3731:4: should replace i += 1 with i++
main.go:3736:6: should replace j += 1 with j++
main.go:3765:6: don't use underscores in Go names; func paz_condensation should be pazCondensation
main.go:3793:4: should replace i += 1 with i++
main.go:3799:6: should replace j += 1 with j++
main.go:3810:6: should replace k += 1 with k++
main.go:3818:4: should replace i += 1 with i++
main.go:3823:6: should replace j += 1 with j++
main.go:3853:4: should replace i += 1 with i++
main.go:3858:6: should replace j += 1 with j++
main.go:3875:4: should replace i += 1 with i++
main.go:3880:6: should replace j += 1 with j++
main.go:3891:4: should replace i += 1 with i++
main.go:3895:5: should replace j += 1 with j++
main.go:3918:6: don't use underscores in Go names; func modal_condensation should be modalCondensation
main.go:3921:13: should omit type float64 from declaration of var traceM; it will be inferred from the right-hand side
main.go:3922:14: should omit type float64 from declaration of var traceMc; it will be inferred from the right-hand side
main.go:3931:4: should replace i += 1 with i++
main.go:3935:5: should replace j += 1 with j++
main.go:3945:4: should replace i += 1 with i++
main.go:3955:4: should replace i += 1 with i++
main.go:3960:6: should replace j += 1 with j++
main.go:3966:8: should replace k += 1 with k++
main.go:3979:4: should replace i += 1 with i++
main.go:3987:4: should replace i += 1 with i++
main.go:3992:6: should replace j += 1 with j++
main.go:3998:8: should replace k += 1 with k++
main.go:4011:4: should replace i += 1 with i++
main.go:4015:5: should replace j += 1 with j++
main.go:4024:4: should replace i += 1 with i++
main.go:4028:5: should replace j += 1 with j++
main.go:4053:407: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:4053:427: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:4053:447: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:4053:471: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:4163:6: don't use underscores in Go names; func parse_options should be parseOptions
main.go:4163:45: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:4163:61: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:4163:78: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:4163:96: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:4163:113: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:4163:131: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:4163:153: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:4163:168: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:4163:185: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:4163:203: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:4163:223: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:4163:245: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:4163:265: don't use underscores in Go names; func parameter write_matrix should be writeMatrix
main.go:4163:285: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:4163:303: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:4165:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4166:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4448:9: don't use underscores in Go names; func display_help should be displayHelp
main.go:4491:9: don't use underscores in Go names; func display_usage should be displayUsage
main.go:4504:6: don't use underscores in Go names; func display_version should be displayVersion
main.go:4520:6: don't use underscores in Go names; func display_version_about should be displayVersionAbout
main.go:4536:6: don't use underscores in Go names; func read_node_data should be readNodeData
main.go:4539:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4540:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4543:4: should replace i += 1 with i++
main.go:4570:6: don't use underscores in Go names; func read_frame_element_data should be readFrameElementData
main.go:4577:17: should drop = 0 from declaration of var epn0; it is the zero value
main.go:4578:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4579:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4583:4: should replace n += 1 with n++
main.go:4591:4: should replace i += 1 with i++
main.go:4604:4: should replace epn[N1[b]] += 1 with epn[N1[b]]++
main.go:4605:4: should replace epn[N2[b]] += 1 with epn[N2[b]]++
main.go:4674:4: should replace b += 1 with b++
main.go:4696:4: should replace n += 1 with n++
main.go:4702:5: should replace epn0 += 1 with epn0++
main.go:4718:6: don't use underscores in Go names; func read_run_data should be readRunData
main.go:4718:37: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:4718:67: don't use underscores in Go names; func parameter shear_flag should be shearFlag
main.go:4718:95: don't use underscores in Go names; func parameter geom_flag should be geomFlag
main.go:4718:161: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:4718:185: don't use underscores in Go names; func parameter exagg_flag should be exaggFlag
main.go:4718:249: don't use underscores in Go names; func parameter anlyz_flag should be anlyzFlag
main.go:4719:6: don't use underscores in Go names; var full_len should be fullLen
main.go:4719:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:4720:16: should drop = 0 from declaration of var len; it is the zero value
main.go:4722:6: don't use underscores in Go names; var base_file should be baseFile
main.go:4722:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:4723:6: don't use underscores in Go names; var mesh_file should be meshFile
main.go:4723:16: should omit type []byte from declaration of var mesh_file; it will be inferred from the right-hand side
main.go:4724:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4728:4: should replace len += 1 with len++
main.go:4736:4: should replace len -= 1 with len--
main.go:4745:3: should replace len += 1 with len++
main.go:4755:5: should replace len -= 1 with len--
main.go:4764:5: should replace i += 1 with i++
main.go:4767:5: should replace len += 1 with len++
main.go:4821:6: don't use underscores in Go names; func frame3dd_getline should be frame3ddGetline
main.go:4822:14: should drop = 0 from declaration of var c; it is the zero value
main.go:4823:14: should drop = 0 from declaration of var i; it is the zero value
main.go:4826:4: should replace lim -= 1 with lim--
main.go:4833:5: should replace i += 1 with i++
main.go:4850:6: don't use underscores in Go names; func temp_dir should be tempDir
main.go:4851:10: should omit type []byte from declaration of var tmp; it will be inferred from the right-hand side
main.go:4872:6: don't use underscores in Go names; func output_path should be outputPath
main.go:4872:58: don't use underscores in Go names; func parameter default_outdir should be defaultOutdir
main.go:4902:6: don't use underscores in Go names; func parse_input should be parseInput
main.go:4904:11: should omit type []byte from declaration of var line; it will be inferred from the right-hand side
main.go:4905:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4936:6: don't use underscores in Go names; func getline_no_comment should be getlineNoComment
main.go:4937:14: should drop = 0 from declaration of var c; it is the zero value
main.go:4938:14: should drop = 0 from declaration of var i; it is the zero value
main.go:4941:4: should replace lim -= 1 with lim--
main.go:4949:6: should replace i += 1 with i++
main.go:4954:6: should replace i += 1 with i++
main.go:4963:4: should replace lim -= 1 with lim--
main.go:4982:6: don't use underscores in Go names; func read_reaction_data should be readReactionData
main.go:4986:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:4987:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:4990:4: should replace i += 1 with i++
main.go:5015:4: should replace i += 1 with i++
main.go:5024:6: should replace l -= 1 with l--
main.go:5046:6: should replace l -= 1 with l--
main.go:5062:4: should replace i += 1 with i++
main.go:5079:4: should replace i += 1 with i++
main.go:5152:6: don't use underscores in Go names; func read_and_assemble_loads should be readAndAssembleLoads
main.go:5152:400: don't use underscores in Go names; func parameter F_temp should be FTemp
main.go:5152:420: don't use underscores in Go names; func parameter F_mech should be FMech
main.go:5152:538: don't use underscores in Go names; func parameter eqF_mech should be eqFMech
main.go:5152:562: don't use underscores in Go names; func parameter eqF_temp should be eqFTemp
main.go:5167:20: should drop = 0 from declaration of var Mx1; it is the zero value
main.go:5168:20: should drop = 0 from declaration of var My1; it is the zero value
main.go:5169:20: should drop = 0 from declaration of var Mz1; it is the zero value
main.go:5173:20: should drop = 0 from declaration of var Mx2; it is the zero value
main.go:5174:20: should drop = 0 from declaration of var My2; it is the zero value
main.go:5175:20: should drop = 0 from declaration of var Mz2; it is the zero value
main.go:5196:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:5197:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5200:4: should replace j += 1 with j++
main.go:5208:4: should replace j += 1 with j++
main.go:5212:5: should replace lc += 1 with lc++
main.go:5228:4: should replace i += 1 with i++
main.go:5232:5: should replace n += 1 with n++
main.go:5236:6: should replace lc += 1 with lc++
main.go:5253:4: should replace i += 1 with i++
main.go:5257:5: should replace lc += 1 with lc++
main.go:5266:4: should replace i += 1 with i++
main.go:5270:5: should replace j += 1 with j++
main.go:5279:4: should replace lc += 1 with lc++
main.go:5296:6: should replace n += 1 with n++
main.go:5327:6: should replace i += 1 with i++
main.go:5341:8: should replace l -= 1 with l--
main.go:5374:6: should replace i += 1 with i++
main.go:5389:8: should replace l += 1 with l++
main.go:5470:6: should replace i += 1 with i++
main.go:5485:8: should replace l += 1 with l++
main.go:5623:6: should replace i += 1 with i++
main.go:5638:8: should replace l += 1 with l++
main.go:5722:6: should replace i += 1 with i++
main.go:5737:8: should replace l += 1 with l++
main.go:5803:6: should replace n += 1 with n++
main.go:5810:8: should replace i += 1 with i++
main.go:5818:8: should replace i += 1 with i++
main.go:5826:8: should replace i += 1 with i++
main.go:5834:8: should replace i += 1 with i++
main.go:5853:6: should replace i += 1 with i++
main.go:5862:8: should replace l -= 1 with l--
main.go:5887:6: don't use underscores in Go names; func read_mass_data should be readMassData
main.go:5887:38: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:5887:206: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:5887:228: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:5887:276: don't use underscores in Go names; func parameter modal_flag should be modalFlag
main.go:5887:304: don't use underscores in Go names; func parameter lump_flag should be lumpFlag
main.go:5887:334: don't use underscores in Go names; func parameter tol_flag should be tolFlag
main.go:5887:369: don't use underscores in Go names; func parameter shift_flag should be shiftFlag
main.go:5887:389: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:5887:456: don't use underscores in Go names; func parameter pan_flag should be panFlag
main.go:5894:6: don't use underscores in Go names; var full_len should be fullLen
main.go:5894:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:5895:16: should drop = 0 from declaration of var len; it is the zero value
main.go:5896:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:5897:6: don't use underscores in Go names; var base_file should be baseFile
main.go:5897:16: should omit type []byte from declaration of var base_file; it will be inferred from the right-hand side
main.go:5898:6: don't use underscores in Go names; var mode_file should be modeFile
main.go:5898:16: should omit type []byte from declaration of var mode_file; it will be inferred from the right-hand side
main.go:5899:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:5975:4: should replace j += 1 with j++
main.go:6011:4: should replace m += 1 with m++
main.go:6031:4: should replace b += 1 with b++
main.go:6040:4: should replace m += 1 with m++
main.go:6072:4: should replace m += 1 with m++
main.go:6080:4: should replace m += 1 with m++
main.go:6104:4: should replace len += 1 with len++
main.go:6112:4: should replace len -= 1 with len--
main.go:6121:3: should replace len += 1 with len++
main.go:6127:5: should replace len -= 1 with len--
main.go:6136:5: should replace i += 1 with i++
main.go:6139:5: should replace len += 1 with len++
main.go:6154:6: don't use underscores in Go names; func read_condensation_data should be readCondensationData
main.go:6154:99: don't use underscores in Go names; func parameter condense_flag should be condenseFlag
main.go:6159:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:6160:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6266:4: should replace i += 1 with i++
main.go:6282:4: should replace i += 1 with i++
main.go:6286:5: should replace j += 1 with j++
main.go:6291:7: should replace (Cdof[0]) += 1 with (Cdof[0])++
main.go:6301:4: should replace i += 1 with i++
main.go:6306:6: should replace j += 1 with j++
main.go:6312:8: should replace k += 1 with k++
main.go:6322:4: should replace i += 1 with i++
main.go:6348:6: don't use underscores in Go names; func write_input_data should be writeInputData
main.go:6357:4: should replace i += 1 with i++
main.go:6372:4: should replace i += 1 with i++
main.go:6383:4: should replace i += 1 with i++
main.go:6394:4: should replace i += 1 with i++
main.go:6407:4: should replace i += 1 with i++
main.go:6420:4: should replace i += 1 with i++
main.go:6432:4: should replace i += 1 with i++
main.go:6451:4: should replace lc += 1 with lc++
main.go:6487:7: should replace j += 1 with j++
main.go:6495:10: should replace i -= 1 with i--
main.go:6512:7: should replace n += 1 with n++
main.go:6518:9: should replace i += 1 with i++
main.go:6534:7: should replace n += 1 with n++
main.go:6540:9: should replace i += 1 with i++
main.go:6550:9: should replace i += 1 with i++
main.go:6560:9: should replace i += 1 with i++
main.go:6576:7: should replace n += 1 with n++
main.go:6582:9: should replace i += 1 with i++
main.go:6599:7: should replace n += 1 with n++
main.go:6606:9: should replace i += 1 with i++
main.go:6623:7: should replace j += 1 with j++
main.go:6631:10: should replace i -= 1 with i--
main.go:6659:6: don't use underscores in Go names; func write_static_results should be writeStaticResults
main.go:6659:189: don't use underscores in Go names; func parameter axial_sign should be axialSign
main.go:6676:4: should replace j += 1 with j++
main.go:6682:6: should replace i -= 1 with i--
main.go:6692:7: should replace i -= 1 with i--
main.go:6712:4: should replace n += 1 with n++
main.go:6732:6: should replace i += 1 with i++
main.go:6760:6: should replace i += 1 with i++
main.go:6778:4: should replace j += 1 with j++
main.go:6786:7: should replace i -= 1 with i--
main.go:6811:6: don't use underscores in Go names; func CSV_filename should be CSVFilename
main.go:6811:19: don't use underscores in Go names; func parameter CSV_file should be CSVFile
main.go:6811:47: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6824:5: should replace i += 1 with i++
main.go:6828:5: should replace j += 1 with j++
main.go:6834:3: should replace j += 1 with j++
main.go:6852:6: don't use underscores in Go names; func write_static_csv should be writeStaticCsv
main.go:6852:23: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:6857:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:6858:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:6858:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:6860:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:6885:5: should replace i += 1 with i++
main.go:6905:4: should replace j += 1 with j++
main.go:6911:6: should replace i -= 1 with i--
main.go:6930:4: should replace n += 1 with n++
main.go:6941:6: should replace i += 1 with i++
main.go:6960:6: should replace i += 1 with i++
main.go:6978:4: should replace j += 1 with j++
main.go:6985:6: should replace i -= 1 with i--
main.go:7031:6: don't use underscores in Go names; func write_static_mfile should be writeStaticMfile
main.go:7031:25: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:7037:6: don't use underscores in Go names; var M_file should be MFile
main.go:7037:13: should omit type []byte from declaration of var M_file; it will be inferred from the right-hand side
main.go:7039:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7051:5: should replace i += 1 with i++
main.go:7055:5: should replace j += 1 with j++
main.go:7061:3: should replace j += 1 with j++
main.go:7102:4: should replace j += 1 with j++
main.go:7107:6: should replace i -= 1 with i--
main.go:7131:4: should replace n += 1 with n++
main.go:7141:6: should replace i += 1 with i++
main.go:7158:6: should replace i += 1 with i++
main.go:7180:4: should replace j += 1 with j++
main.go:7186:6: should replace i -= 1 with i--
main.go:7290:6: don't use underscores in Go names; func peak_internal_forces should be peakInternalForces
main.go:7324:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:7325:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:7326:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:7327:6: don't use underscores in Go names; var wx_ should be wx
main.go:7327:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:7328:6: don't use underscores in Go names; var wy_ should be wy
main.go:7328:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:7329:6: don't use underscores in Go names; var wz_ should be wz
main.go:7329:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:7330:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:7331:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:7332:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:7333:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:7334:6: don't use underscores in Go names; var tx_ should be tx
main.go:7334:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:7337:6: don't use underscores in Go names; var Nx_ should be Nx
main.go:7339:6: don't use underscores in Go names; var Vy_ should be Vy
main.go:7341:6: don't use underscores in Go names; var Vz_ should be Vz
main.go:7343:6: don't use underscores in Go names; var Tx_ should be Tx
main.go:7345:6: don't use underscores in Go names; var My_ should be My
main.go:7347:6: don't use underscores in Go names; var Mz_ should be Mz
main.go:7349:6: don't use underscores in Go names; var Sy_ should be Sy
main.go:7351:6: don't use underscores in Go names; var Sz_ should be Sz
main.go:7359:9: should omit type int from declaration of var nx; it will be inferred from the right-hand side
main.go:7360:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:7361:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:7362:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:7373:4: should replace m += 1 with m++
main.go:7428:4: should replace m += 1 with m++
main.go:7440:6: should replace n += 1 with n++
main.go:7448:8: should replace cU += 1 with cU++
main.go:7538:6: should replace i += 1 with i++
main.go:7553:8: should replace n += 1 with n++
main.go:7559:11: should replace cW += 1 with cW++
main.go:7597:8: should replace n += 1 with n++
main.go:7603:11: should replace cP += 1 with cP++
main.go:7644:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7651:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7658:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7665:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7672:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7679:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7686:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7693:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7700:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7707:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7714:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7721:14: if block ends with a return statement, so drop this else and outdent its block
main.go:7735:4: should replace m += 1 with m++
main.go:7746:4: should replace m += 1 with m++
main.go:7837:6: don't use underscores in Go names; func write_internal_forces should be writeInternalForces
main.go:7837:28: don't use underscores in Go names; func parameter OUT_file should be OUTFile
main.go:7871:9: should omit type float64 from declaration of var wx; it will be inferred from the right-hand side
main.go:7872:9: should omit type float64 from declaration of var wy; it will be inferred from the right-hand side
main.go:7873:9: should omit type float64 from declaration of var wz; it will be inferred from the right-hand side
main.go:7874:6: don't use underscores in Go names; var wx_ should be wx
main.go:7874:10: should omit type float64 from declaration of var wx_; it will be inferred from the right-hand side
main.go:7875:6: don't use underscores in Go names; var wy_ should be wy
main.go:7875:10: should omit type float64 from declaration of var wy_; it will be inferred from the right-hand side
main.go:7876:6: don't use underscores in Go names; var wz_ should be wz
main.go:7876:10: should omit type float64 from declaration of var wz_; it will be inferred from the right-hand side
main.go:7877:10: should omit type float64 from declaration of var wxg; it will be inferred from the right-hand side
main.go:7878:10: should omit type float64 from declaration of var wyg; it will be inferred from the right-hand side
main.go:7879:10: should omit type float64 from declaration of var wzg; it will be inferred from the right-hand side
main.go:7880:19: should drop = 0 from declaration of var tx; it is the zero value
main.go:7881:6: don't use underscores in Go names; var tx_ should be tx
main.go:7881:20: should drop = 0 from declaration of var tx_; it is the zero value
main.go:7884:6: don't use underscores in Go names; var dx_ should be dx
main.go:7924:15: should drop = 0 from declaration of var cU; it is the zero value
main.go:7925:15: should drop = 0 from declaration of var cW; it is the zero value
main.go:7926:15: should drop = 0 from declaration of var cP; it is the zero value
main.go:7933:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:7934:6: don't use underscores in Go names; var CSV_file should be CSVFile
main.go:7934:15: should omit type []byte from declaration of var CSV_file; it will be inferred from the right-hand side
main.go:7935:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:7936:9: should omit type []byte from declaration of var wa; it will be inferred from the right-hand side
main.go:7980:4: should replace m += 1 with m++
main.go:8004:6: should replace i += 1 with i++
main.go:8020:6: should replace n += 1 with n++
main.go:8028:8: should replace cU += 1 with cU++
main.go:8043:6: should replace i += 1 with i++
main.go:8057:8: should replace n += 1 with n++
main.go:8063:11: should replace cW += 1 with cW++
main.go:8104:8: should replace n += 1 with n++
main.go:8110:11: should replace cP += 1 with cP++
main.go:8132:6: should replace i += 1 with i++
main.go:8144:6: should replace i += 1 with i++
main.go:8156:6: should replace i += 1 with i++
main.go:8186:6: should replace i += 1 with i++
main.go:8197:6: should replace i += 1 with i++
main.go:8206:6: should replace i += 1 with i++
main.go:8217:6: should replace i += 1 with i++
main.go:8226:6: should replace i += 1 with i++
main.go:8238:6: should replace i += 1 with i++
main.go:8248:7: should replace i += 1 with i++
main.go:8259:6: should replace i += 1 with i++
main.go:8271:6: should replace i += 1 with i++
main.go:8376:6: should replace i += 1 with i++
main.go:8382:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8389:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8396:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8403:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8410:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8417:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8424:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8431:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8438:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8445:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8452:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8459:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8467:6: should replace i += 1 with i++
main.go:8473:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8480:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8487:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8494:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8501:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8508:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8515:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8522:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8529:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8536:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8543:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8550:14: if block ends with a return statement, so drop this else and outdent its block
main.go:8562:6: should replace i += 1 with i++
main.go:8600:6: don't use underscores in Go names; func write_modal_results should be writeModalResults
main.go:8600:119: don't use underscores in Go names; func parameter total_mass should be totalMass
main.go:8600:139: don't use underscores in Go names; func parameter struct_mass should be structMass
main.go:8605:6: don't use underscores in Go names; var num_modes should be numModes
main.go:8618:4: should replace i += 1 with i++
main.go:8664:4: should replace j += 1 with j++
main.go:8671:6: should replace i += 1 with i++
main.go:8690:4: should replace m += 1 with m++
main.go:8696:6: should replace i += 1 with i++
main.go:8705:6: should replace i += 1 with i++
main.go:8714:6: should replace i += 1 with i++
main.go:8728:6: should replace j += 1 with j++
main.go:8734:8: should replace i -= 1 with i--
main.go:8799:8: don't use underscores in Go names; func static_mesh should be staticMesh
main.go:8799:20: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:8799:213: don't use underscores in Go names; func parameter exagg_static should be exaggStatic
main.go:8799:235: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:8800:26: should drop = nil from declaration of var fpif; it is the zero value
main.go:8801:25: should drop = nil from declaration of var fpm; it is the zero value
main.go:8805:11: should omit type []byte from declaration of var fnif; it will be inferred from the right-hand side
main.go:8806:13: should omit type []byte from declaration of var meshfl; it will be inferred from the right-hand side
main.go:8809:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:8811:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:8822:14: should drop = 0 from declaration of var j; it is the zero value
main.go:8823:14: should drop = 0 from declaration of var m; it is the zero value
main.go:8824:14: should drop = 0 from declaration of var n; it is the zero value
main.go:8825:14: should drop = 0 from declaration of var X; it is the zero value
main.go:8826:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:8827:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:8828:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:8833:4: should replace j += 1 with j++
main.go:8894:5: should replace j += 1 with j++
main.go:8903:5: should replace m += 1 with m++
main.go:8965:5: should replace m += 1 with m++
main.go:9009:4: should replace m += 1 with m++
main.go:9055:6: don't use underscores in Go names; func modal_mesh should be modalMesh
main.go:9055:17: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:9055:232: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:9055:253: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:9068:14: should drop = 0 from declaration of var X; it is the zero value
main.go:9069:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:9070:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:9071:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:9074:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:9075:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9082:4: should replace i += 1 with i++
main.go:9119:4: should replace m += 1 with m++
main.go:9140:6: should replace i += 1 with i++
main.go:9149:6: should replace i += 1 with i++
main.go:9158:6: should replace i += 1 with i++
main.go:9170:6: should replace i += 1 with i++
main.go:9179:6: should replace n += 1 with n++
main.go:9189:6: should replace j += 1 with j++
main.go:9270:14: don't use underscores in Go names; func parameter IN_file should be INFile
main.go:9270:226: don't use underscores in Go names; func parameter exagg_modal should be exaggModal
main.go:9270:247: don't use underscores in Go names; func parameter D3_flag should be D3Flag
main.go:9272:6: don't use underscores in Go names; var x_min should be xMin
main.go:9272:12: should omit type float32 from declaration of var x_min; it will be inferred from the right-hand side
main.go:9273:6: don't use underscores in Go names; var x_max should be xMax
main.go:9273:12: should omit type float32 from declaration of var x_max; it will be inferred from the right-hand side
main.go:9274:6: don't use underscores in Go names; var y_min should be yMin
main.go:9274:12: should omit type float32 from declaration of var y_min; it will be inferred from the right-hand side
main.go:9275:6: don't use underscores in Go names; var y_max should be yMax
main.go:9275:12: should omit type float32 from declaration of var y_max; it will be inferred from the right-hand side
main.go:9276:6: don't use underscores in Go names; var z_min should be zMin
main.go:9276:12: should omit type float32 from declaration of var z_min; it will be inferred from the right-hand side
main.go:9277:6: don't use underscores in Go names; var z_max should be zMax
main.go:9277:12: should omit type float32 from declaration of var z_max; it will be inferred from the right-hand side
main.go:9278:11: should omit type float32 from declaration of var Dxyz; it will be inferred from the right-hand side
main.go:9279:6: don't use underscores in Go names; var rot_x_init should be rotXInit
main.go:9279:17: should omit type float32 from declaration of var rot_x_init; it will be inferred from the right-hand side
main.go:9280:6: don't use underscores in Go names; var rot_x_final should be rotXFinal
main.go:9280:18: should omit type float32 from declaration of var rot_x_final; it will be inferred from the right-hand side
main.go:9281:6: don't use underscores in Go names; var rot_z_init should be rotZInit
main.go:9281:17: should omit type float32 from declaration of var rot_z_init; it will be inferred from the right-hand side
main.go:9282:6: don't use underscores in Go names; var rot_z_final should be rotZFinal
main.go:9282:18: should omit type float32 from declaration of var rot_z_final; it will be inferred from the right-hand side
main.go:9283:6: don't use underscores in Go names; var zoom_init should be zoomInit
main.go:9283:16: should omit type float32 from declaration of var zoom_init; it will be inferred from the right-hand side
main.go:9284:6: don't use underscores in Go names; var zoom_final should be zoomFinal
main.go:9284:17: should omit type float32 from declaration of var zoom_final; it will be inferred from the right-hand side
main.go:9285:13: should omit type float32 from declaration of var frames; it will be inferred from the right-hand side
main.go:9286:9: should omit type float64 from declaration of var ex; it will be inferred from the right-hand side
main.go:9293:14: should drop = 0 from declaration of var X; it is the zero value
main.go:9294:14: should drop = 0 from declaration of var Y; it is the zero value
main.go:9295:14: should drop = 0 from declaration of var Z; it is the zero value
main.go:9297:13: should omit type int from declaration of var CYCLES; it will be inferred from the right-hand side
main.go:9298:6: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9298:25: should drop = 0 from declaration of var frame_number; it is the zero value
main.go:9299:9: should omit type int from declaration of var lw; it will be inferred from the right-hand side
main.go:9300:6: don't use underscores in Go names; var total_frames should be totalFrames
main.go:9304:13: should omit type []byte from declaration of var modefl; it will be inferred from the right-hand side
main.go:9305:14: should omit type []byte from declaration of var framefl; it will be inferred from the right-hand side
main.go:9306:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9309:4: should replace j += 1 with j++
main.go:9425:6: should replace c += 1 with c++
main.go:9430:8: should replace fr += 1 with fr++
main.go:9434:9: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9434:9: should replace frame_number += 1 with frame_number++
main.go:9457:8: should replace fr -= 1 with fr--
main.go:9461:9: don't use underscores in Go names; var frame_number should be frameNumber
main.go:9461:9: should replace frame_number += 1 with frame_number++
main.go:9487:5: should replace i += 1 with i++
main.go:9502:6: should replace fr += 1 with fr++
main.go:9523:8: should replace j += 1 with j++
main.go:9532:8: should replace n += 1 with n++
main.go:9543:5: should replace i += 1 with i++
main.go:9563:6: don't use underscores in Go names; func cubic_bent_beam should be cubicBentBeam
main.go:9597:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:9677:6: don't use underscores in Go names; func force_bent_beam should be forceBentBeam
main.go:9706:17: should drop = 0 from declaration of var sfrv; it is the zero value
main.go:9722:7: should replace n += 1 with n++
main.go:9756:6: don't use underscores in Go names; func my_itoa should be myItoa
main.go:9771:5: should replace i += 1 with i++
main.go:9779:5: should replace i += 1 with i++
main.go:9786:4: should replace i += 1 with i++
main.go:9795:5: should replace j += 1 with j++
main.go:9801:3: should replace j -= 1 with j--
main.go:9810:5: should replace i += 1 with i++
main.go:9814:5: should replace j -= 1 with j--
main.go:9832:8: don't use underscores in Go names; func get_file_ext should be getFileExt
main.go:9833:14: should drop = 0 from declaration of var i; it is the zero value
main.go:9834:6: don't use underscores in Go names; var full_len should be fullLen
main.go:9834:21: should drop = 0 from declaration of var full_len; it is the zero value
main.go:9835:16: should drop = 0 from declaration of var len; it is the zero value
main.go:9838:4: should replace len += 1 with len++
main.go:9846:4: should replace len -= 1 with len--
main.go:9855:3: should replace len += 1 with len++
main.go:9862:5: should replace i += 1 with i++
main.go:9866:5: should replace len += 1 with len++
main.go:9887:4: should replace i += 1 with i++
main.go:9898:33: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:10239:6: don't use underscores in Go names; func coord_trans should be coordTrans
main.go:10337:4: should replace i += 1 with i++
main.go:10341:5: should replace j += 1 with j++
main.go:10365:4: should replace i += 1 with i++
main.go:10381:4: should replace j += 1 with j++
main.go:10385:5: should replace i += 1 with i++
main.go:10389:6: should replace k += 1 with k++
main.go:10399:4: should replace i += 1 with i++
main.go:10403:5: should replace j += 1 with j++
main.go:10419:4: should replace j += 1 with j++
main.go:10423:5: should replace i += 1 with i++
main.go:10427:6: should replace k += 1 with k++
main.go:10495:6: don't use underscores in Go names; var km_old should be kmOld
main.go:10497:6: don't use underscores in Go names; var w_old should be wOld
main.go:10497:22: should drop = 0 from declaration of var w_old; it is the zero value
main.go:10498:14: should drop = 0 from declaration of var i; it is the zero value
main.go:10499:14: should drop = 0 from declaration of var j; it is the zero value
main.go:10500:14: should drop = 0 from declaration of var k; it is the zero value
main.go:10502:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:10504:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:10520:4: should replace i += 1 with i++
main.go:10526:6: should replace j += 1 with j++
main.go:10559:4: should replace i += 1 with i++
main.go:10563:5: should replace j += 1 with j++
main.go:10580:10: if block ends with a return statement, so drop this else and outdent its block
main.go:10586:4: should replace i += 1 with i++
main.go:10590:5: should replace j += 1 with j++
main.go:10600:4: should replace i += 1 with i++
main.go:10614:4: should replace k += 1 with k++
main.go:10620:6: should replace i += 1 with i++
main.go:10627:9: should replace j += 1 with j++
main.go:10646:7: should replace j += 1 with j++
main.go:10662:4: should replace k += 1 with k++
main.go:10719:6: should replace k += 1 with k++
main.go:10744:8: should replace i += 1 with i++
main.go:10764:5: should replace (iter[0]) += 1 with (iter[0])++
main.go:10783:4: should replace k += 1 with k++
main.go:10797:5: should replace k += 1 with k++
main.go:10807:4: should replace i += 1 with i++
main.go:10811:5: should replace j += 1 with j++
main.go:10856:20: should drop = 0 from declaration of var tol; it is the zero value
main.go:10891:4: should replace i += 1 with i++
main.go:10895:5: should replace j += 1 with j++
main.go:10911:4: should replace d += 1 with d++
main.go:10919:4: should replace iter += 1 with iter++
main.go:10926:6: should replace d += 1 with d++
main.go:10931:8: should replace i += 1 with i++
main.go:10952:11: should replace k += 1 with k++
main.go:10970:4: should replace j += 1 with j++
main.go:10976:6: should replace i += 1 with i++
main.go:10986:4: should replace j += 1 with j++
main.go:11012:4: should replace k += 1 with k++
main.go:11026:4: should replace k += 1 with k++
main.go:11075:6: don't use underscores in Go names; var d_min should be dMin
main.go:11075:22: should drop = 0 from declaration of var d_min; it is the zero value
main.go:11076:6: don't use underscores in Go names; var d_max should be dMax
main.go:11076:22: should drop = 0 from declaration of var d_max; it is the zero value
main.go:11077:6: don't use underscores in Go names; var d_old should be dOld
main.go:11077:22: should drop = 0 from declaration of var d_old; it is the zero value
main.go:11084:22: should drop = 0 from declaration of var RQold; it is the zero value
main.go:11086:6: don't use underscores in Go names; var i_ex should be iEx
main.go:11086:11: should omit type int from declaration of var i_ex; it will be inferred from the right-hand side
main.go:11088:17: should drop = 0 from declaration of var disp; it is the zero value
main.go:11092:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:11101:10: if block ends with a return statement, so drop this else and outdent its block
main.go:11107:4: should replace i += 1 with i++
main.go:11111:5: should replace j += 1 with j++
main.go:11126:4: should replace j += 1 with j++
main.go:11131:6: should replace i += 1 with i++
main.go:11158:6: should replace i += 1 with i++
main.go:11169:4: should replace i += 1 with i++
main.go:11187:4: should replace i += 1 with i++
main.go:11197:4: should replace k += 1 with k++
main.go:11203:6: should replace i += 1 with i++
main.go:11219:6: should replace i += 1 with i++
main.go:11227:6: should replace j += 1 with j++
main.go:11232:8: should replace i += 1 with i++
main.go:11243:6: should replace j += 1 with j++
main.go:11247:7: should replace i += 1 with i++
main.go:11257:6: should replace i += 1 with i++
main.go:11268:8: should replace i += 1 with i++
main.go:11274:10: should replace j += 1 with j++
main.go:11285:8: should replace i += 1 with i++
main.go:11293:8: should replace j += 1 with j++
main.go:11298:10: should replace i += 1 with i++
main.go:11309:8: should replace j += 1 with j++
main.go:11313:9: should replace i += 1 with i++
main.go:11323:8: should replace i += 1 with i++
main.go:11332:7: should replace (iter[0]) += 1 with (iter[0])++
main.go:11347:6: should replace i += 1 with i++
main.go:11384:8: should omit type float64 from declaration of var p; it will be inferred from the right-hand side
main.go:11387:4: should replace i += 1 with i++
main.go:11394:6: should replace j += 1 with j++
main.go:11410:7: should replace j += 1 with j++
main.go:11440:6: don't use underscores in Go names; var ws_shift should be wsShift
main.go:11442:15: should drop = 0 from declaration of var ok; it is the zero value
main.go:11450:10: if block ends with a return statement, so drop this else and outdent its block
main.go:11457:4: should replace i += 1 with i++
main.go:11461:5: should replace j += 1 with j++
main.go:11483:4: should replace i += 1 with i++
main.go:11487:5: should replace j += 1 with j++
main.go:11501:85: don't use underscores in Go names; func check_non_negative should be checkNonNegative
main.go:11564:11: should omit type int from declaration of var icol; it will be inferred from the right-hand side
main.go:11565:11: should omit type int from declaration of var irow; it will be inferred from the right-hand side
main.go:11579:4: should replace j += 1 with j++
main.go:11587:4: should replace i += 1 with i++
main.go:11593:6: should replace j += 1 with j++
main.go:11598:8: should replace k += 1 with k++
main.go:11617:5: should replace (ipiv[icol]) += 1 with (ipiv[icol])++
main.go:11623:7: should replace l += 1 with l++
main.go:11633:7: should replace l += 1 with l++
main.go:11651:6: should replace l += 1 with l++
main.go:11659:6: should replace l += 1 with l++
main.go:11667:6: should replace ll += 1 with ll++
main.go:11675:9: should replace l += 1 with l++
main.go:11683:9: should replace l += 1 with l++
main.go:11696:4: should replace l -= 1 with l--
main.go:11701:6: should replace k += 1 with k++
main.go:11736:6: don't use underscores in Go names; func lu_dcmp should be luDcmp
main.go:11745:5: should replace k += 1 with k++
main.go:11759:7: should replace i += 1 with i++
main.go:11765:9: should replace j += 1 with j++
main.go:11779:5: should replace k += 1 with k++
main.go:11783:6: should replace i += 1 with i++
main.go:11792:5: should replace j -= 1 with j--
main.go:11796:6: should replace i += 1 with i++
main.go:11805:5: should replace i += 1 with i++
main.go:11841:6: don't use underscores in Go names; func ldl_dcmp should be ldlDcmp
main.go:11850:5: should replace j += 1 with j++
main.go:11857:7: should replace i += 1 with i++
main.go:11862:9: should replace m += 1 with m++
main.go:11872:7: should replace i += 1 with i++
main.go:11878:9: should replace k += 1 with k++
main.go:11889:7: should replace i += 1 with i++
main.go:11897:7: should replace i += 1 with i++
main.go:11910:7: should replace (pd[0]) -= 1 with (pd[0])--
main.go:11920:5: should replace i += 1 with i++
main.go:11926:7: should replace j += 1 with j++
main.go:11936:5: should replace i += 1 with i++
main.go:11944:5: should replace i -= 1 with i--
main.go:11948:6: should replace j += 1 with j++
main.go:11974:6: don't use underscores in Go names; func ldl_mprove should be ldlMprove
main.go:11974:78: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:11977:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:11977:20: should omit type float64 from declaration of var rms_resid_new; it will be inferred from the right-hand side
main.go:11984:4: should replace i += 1 with i++
main.go:11990:6: should replace j += 1 with j++
main.go:12006:4: should replace i += 1 with i++
main.go:12009:4: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12017:5: should replace i += 1 with i++
main.go:12058:6: don't use underscores in Go names; func ldl_dcmp_pm should be ldlDcmpPm
main.go:12067:5: should replace j += 1 with j++
main.go:12076:8: should replace i += 1 with i++
main.go:12081:10: should replace m += 1 with m++
main.go:12091:8: should replace i += 1 with i++
main.go:12098:11: should replace k += 1 with k++
main.go:12112:8: should replace i += 1 with i++
main.go:12122:8: should replace i += 1 with i++
main.go:12137:8: should replace (pd[0]) -= 1 with (pd[0])--
main.go:12148:5: should replace i += 1 with i++
main.go:12155:8: should replace j += 1 with j++
main.go:12168:5: should replace i += 1 with i++
main.go:12173:7: should replace j += 1 with j++
main.go:12185:5: should replace i += 1 with i++
main.go:12195:5: should replace i -= 1 with i--
main.go:12200:7: should replace j += 1 with j++
main.go:12212:5: should replace i += 1 with i++
main.go:12220:8: should replace j += 1 with j++
main.go:12269:6: don't use underscores in Go names; func ldl_mprove_pm should be ldlMprovePm
main.go:12269:112: don't use underscores in Go names; func parameter rms_resid should be rmsResid
main.go:12273:6: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12273:30: should drop = 0 from declaration of var rms_resid_new; it is the zero value
main.go:12281:4: should replace i += 1 with i++
main.go:12289:4: should replace i += 1 with i++
main.go:12296:7: should replace j += 1 with j++
main.go:12310:7: should replace j += 1 with j++
main.go:12325:4: should replace i += 1 with i++
main.go:12329:5: don't use underscores in Go names; var rms_resid_new should be rmsResidNew
main.go:12338:5: should replace i += 1 with i++
main.go:12366:6: don't use underscores in Go names; func PSB_update should be PSBUpdate
main.go:12369:20: should drop = 0 from declaration of var dtd; it is the zero value
main.go:12370:20: should drop = 0 from declaration of var ftd; it is the zero value
main.go:12371:21: should drop = 0 from declaration of var dtd2; it is the zero value
main.go:12374:4: should replace i += 1 with i++
main.go:12383:4: should replace i += 1 with i++
main.go:12391:4: should replace i += 1 with i++
main.go:12395:5: should replace j += 1 with j++
main.go:12414:6: don't use underscores in Go names; func pseudo_inv should be pseudoInv
main.go:12421:6: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:12421:23: should drop = 0 from declaration of var tr_AtA; it is the zero value
main.go:12437:4: should replace i += 1 with i++
main.go:12454:6: should replace j += 1 with j++
main.go:12471:4: should replace i += 1 with i++
main.go:12476:6: should replace j += 1 with j++
main.go:12482:8: should replace k += 1 with k++
main.go:12495:4: should replace i += 1 with i++
main.go:12499:5: should replace j += 1 with j++
main.go:12516:4: should replace i += 1 with i++
main.go:12519:4: don't use underscores in Go names; var tr_AtA should be trAtA
main.go:12524:4: should replace i += 1 with i++
main.go:12533:4: should replace j += 1 with j++
main.go:12538:6: should replace k += 1 with k++
main.go:12564:6: should replace k += 1 with k++
main.go:12574:4: should replace i += 1 with i++
main.go:12578:5: should replace j += 1 with j++
main.go:12594:4: should replace i += 1 with i++
main.go:12599:6: should replace j += 1 with j++
main.go:12605:8: should replace k += 1 with k++
main.go:12633:4: should replace i += 1 with i++
main.go:12641:4: should replace i += 1 with i++
main.go:12646:6: should replace k += 1 with k++
main.go:12670:4: should replace i += 1 with i++
main.go:12674:5: should replace k += 1 with k++
main.go:12683:4: should replace i += 1 with i++
main.go:12687:5: should replace k += 1 with k++
main.go:12691:6: should replace j += 1 with j++
main.go:12723:4: should replace i += 1 with i++
main.go:12743:4: should replace j += 1 with j++
main.go:12748:6: should replace k += 1 with k++
main.go:12775:6: should replace i += 1 with i++
main.go:12810:4: should replace i += 1 with i++
main.go:12826:4: should replace j += 1 with j++
main.go:12831:6: should replace k += 1 with k++
main.go:12858:6: should replace i += 1 with i++
main.go:12864:8: should replace k += 1 with k++
main.go:12883:9: don't use underscores in Go names; func coord_xfrm should be coordXfrm
main.go:12889:4: should replace i += 1 with i++
main.go:12914:4: should replace i += 1 with i++
main.go:12918:5: should replace j += 1 with j++
main.go:12927:4: should replace i += 1 with i++
main.go:12931:5: should replace j += 1 with j++
main.go:12940:4: should replace i += 1 with i++
main.go:12945:6: should replace j += 1 with j++
main.go:12950:8: should replace k += 1 with k++
main.go:12966:4: should replace i += 1 with i++
main.go:12970:5: should replace j += 1 with j++
main.go:12974:6: should replace k += 1 with k++
main.go:12984:4: should replace i += 1 with i++
main.go:12988:5: should replace j += 1 with j++
main.go:13012:21: should drop = 0 from declaration of var xtAy; it is the zero value
main.go:13017:4: should replace i += 1 with i++
main.go:13023:6: should replace j += 1 with j++
main.go:13037:4: should replace i += 1 with i++
main.go:13074:4: should replace i += 1 with i++
main.go:13091:6: should replace j += 1 with j++
main.go:13109:4: should replace j += 1 with j++
main.go:13114:6: should replace k += 1 with k++
main.go:13142:6: should replace k += 1 with k++
main.go:13152:4: should replace i += 1 with i++
main.go:13156:5: should replace j += 1 with j++
main.go:13172:4: should replace i += 1 with i++
main.go:13177:6: should replace j += 1 with j++
main.go:13183:8: should replace k += 1 with k++
main.go:13196:4: should replace i += 1 with i++
main.go:13201:6: should replace j += 1 with j++
main.go:13207:8: should replace k += 1 with k++
main.go:13220:4: should replace i += 1 with i++
main.go:13224:5: should replace j += 1 with j++
main.go:13251:9: don't use underscores in Go names; func relative_norm should be relativeNorm
main.go:13252:19: should drop = 0 from declaration of var nN; it is the zero value
main.go:13253:19: should drop = 0 from declaration of var nD; it is the zero value
main.go:13257:4: should replace i += 1 with i++
main.go:13265:4: should replace i += 1 with i++
main.go:13284:4: should replace p += 1 with p++
main.go:13301:6: should replace k += 1 with k++
main.go:13463:17: should omit type []byte from declaration of var pathToFile; it will be inferred from the right-hand side
main.go:13464:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:13510:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13511:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:13514:4: should replace lim -= 1 with lim--
main.go:13521:5: should replace i += 1 with i++
main.go:13527:3: should replace i += 1 with i++
main.go:13539:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13540:8: should omit type int from declaration of var i; it will be inferred from the right-hand side
main.go:13543:4: should replace lim -= 1 with lim--
main.go:13553:4: should replace lim -= 1 with lim--
main.go:13560:5: should replace i += 1 with i++
main.go:13566:3: should replace i += 1 with i++
main.go:13579:32: don't use underscores in Go names; func parameter head_lines should be headLines
main.go:13579:48: don't use underscores in Go names; func parameter start_chnl should be startChnl
main.go:13579:64: don't use underscores in Go names; func parameter stop_chnl should be stopChnl
main.go:13580:19: should drop = 0 from declaration of var points; it is the zero value
main.go:13583:9: should omit type int from declaration of var ok; it will be inferred from the right-hand side
main.go:13584:6: don't use underscores in Go names; var data_value should be dataValue
main.go:13588:4: should replace i += 1 with i++
main.go:13602:6: should replace chn += 1 with chn++
main.go:13608:8: should replace points += 1 with points++
main.go:13637:14: should drop = 0 from declaration of var c; it is the zero value
main.go:13638:14: should drop = 0 from declaration of var i; it is the zero value
main.go:13641:4: should replace lim -= 1 with lim--
main.go:13648:5: should replace i += 1 with i++
main.go:13654:3: should replace i += 1 with i++
main.go:13669:11: should omit type []byte from declaration of var temp; it will be inferred from the right-hand side
main.go:13670:6: don't use underscores in Go names; var t_tm should be tTm
main.go:13671:6: don't use underscores in Go names; var t_time should be tTime
main.go:13690:6: don't use underscores in Go names; var line_length should be lineLength
main.go:13690:18: should omit type int from declaration of var line_length; it will be inferred from the right-hand side
main.go:13691:6: don't use underscores in Go names; var percent_done should be percentDone
main.go:13696:4: should replace k += 1 with k++
main.go:13704:4: should replace k += 1 with k++
main.go:13712:4: should replace k += 1 with k++
main.go:13728:13: should omit type []byte from declaration of var errMsg; it will be inferred from the right-hand side
main.go:13734:6: don't use underscores in Go names; type ptrdiff_t should be ptrdiffT
main.go:13735:6: don't use underscores in Go names; type max_align_t should be maxAlignT
main.go:13736:2: don't use underscores in Go names; struct field __clang_max_align_nonce1 should be _ClangMaxAlignNonce1
main.go:13737:2: don't use underscores in Go names; struct field __clang_max_align_nonce2 should be _ClangMaxAlignNonce2
main.go:13746:14: don't use underscores in Go names; func parameter error_text should be errorText
main.go:13832:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13833:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13857:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13858:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13882:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13883:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13906:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13907:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13919:5: should replace i += 1 with i++
main.go:13923:5: should replace j += 1 with j++
main.go:13941:6: don't use underscores in Go names; func convert_matrix should be convertMatrix
main.go:13944:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13945:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13957:5: should replace i += 1 with i++
main.go:13961:5: should replace j += 1 with j++
main.go:13987:11: should omit type int32 from declaration of var nrow; it will be inferred from the right-hand side
main.go:13988:11: should omit type int32 from declaration of var ncol; it will be inferred from the right-hand side
main.go:13989:11: should omit type int32 from declaration of var ndep; it will be inferred from the right-hand side
main.go:14008:4: should replace i += 1 with i++
main.go:14022:6: don't use underscores in Go names; func free_vector should be freeVector
main.go:14031:6: don't use underscores in Go names; func free_ivector should be freeIvector
main.go:14040:6: don't use underscores in Go names; func free_cvector should be freeCvector
main.go:14049:6: don't use underscores in Go names; func free_lvector should be freeLvector
main.go:14058:6: don't use underscores in Go names; func free_dvector should be freeDvector
main.go:14071:6: don't use underscores in Go names; func free_matrix should be freeMatrix
main.go:14084:6: don't use underscores in Go names; func free_dmatrix should be freeDmatrix
main.go:14097:6: don't use underscores in Go names; func free_imatrix should be freeImatrix
main.go:14106:6: don't use underscores in Go names; func free_subMatrix should be freeSubMatrix
main.go:14115:6: don't use underscores in Go names; func free_convert_matrix should be freeConvertMatrix
main.go:14132:6: don't use underscores in Go names; func free_f3tensor should be freeF3tensor
main.go:14137:30: exported func Cvector returns unexported type []main.fcomplex, which can be annoying to use
main.go:14148:50: exported func Cmatrix returns unexported type [][]main.fcomplex, which can be annoying to use
main.go:14158:4: should replace i += 1 with i++
main.go:14184:4: should replace i += 1 with i++
main.go:14194:6: should replace j += 1 with j++
main.go:14222:4: should replace i += 1 with i++
main.go:14232:6: should replace j += 1 with j++
main.go:14248:6: don't use underscores in Go names; func free_Cvector should be freeCvector
main.go:14253:6: don't use underscores in Go names; func free_Cmatrix should be freeCmatrix
main.go:14257:4: should replace i -= 1 with i--
main.go:14267:6: don't use underscores in Go names; func free_D3matrix should be freeD3matrix
main.go:14272:4: should replace i -= 1 with i--
main.go:14277:6: should replace j -= 1 with j--
main.go:14288:6: don't use underscores in Go names; func free_D3dmatrix should be freeD3dmatrix
main.go:14293:4: should replace i -= 1 with i--
main.go:14298:6: should replace j -= 1 with j--
main.go:14311:9: don't use underscores in Go names; func show_vector should be showVector
main.go:14315:4: should replace j += 1 with j++
main.go:14332:9: don't use underscores in Go names; func show_dvector should be showDvector
main.go:14336:4: should replace j += 1 with j++
main.go:14353:9: don't use underscores in Go names; func show_ivector should be showIvector
main.go:14357:4: should replace j += 1 with j++
main.go:14374:9: don't use underscores in Go names; func show_matrix should be showMatrix
main.go:14379:4: should replace i += 1 with i++
main.go:14384:6: should replace j += 1 with j++
main.go:14407:9: don't use underscores in Go names; func show_dmatrix should be showDmatrix
main.go:14412:4: should replace i += 1 with i++
main.go:14417:6: should replace j += 1 with j++
main.go:14440:9: don't use underscores in Go names; func save_vector should be saveVector
main.go:14441:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14458:4: should replace i += 1 with i++
main.go:14476:9: don't use underscores in Go names; func save_dvector should be saveDvector
main.go:14477:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14494:4: should replace i += 1 with i++
main.go:14512:9: don't use underscores in Go names; func save_ivector should be saveIvector
main.go:14513:6: don't use underscores in Go names; var fp_v should be fpV
main.go:14530:4: should replace i += 1 with i++
main.go:14548:9: don't use underscores in Go names; func save_matrix should be saveMatrix
main.go:14549:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14580:5: should replace j += 1 with j++
main.go:14585:7: should replace i += 1 with i++
main.go:14601:5: should replace i += 1 with i++
main.go:14606:7: should replace j += 1 with j++
main.go:14627:9: don't use underscores in Go names; func save_dmatrix should be saveDmatrix
main.go:14628:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14659:5: should replace j += 1 with j++
main.go:14664:7: should replace i += 1 with i++
main.go:14680:5: should replace i += 1 with i++
main.go:14685:7: should replace j += 1 with j++
main.go:14708:9: don't use underscores in Go names; func save_ut_matrix should be saveUtMatrix
main.go:14709:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14727:4: should replace i += 1 with i++
main.go:14732:6: should replace j += 1 with j++
main.go:14762:9: don't use underscores in Go names; func save_ut_dmatrix should be saveUtDmatrix
main.go:14763:6: don't use underscores in Go names; var fp_m should be fpM
main.go:14781:4: should replace i += 1 with i++
main.go:14786:6: should replace j += 1 with j++
